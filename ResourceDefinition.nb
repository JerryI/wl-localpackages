Notebook[{

Cell[CellGroupData[{
Cell["JerryI/LPM", "Title",
 Deletable->False,
 TaggingRules->{},
 CellChangeTimes->{{3.899125748011112*^9, 3.899125751045354*^9}, {
  3.899743069701632*^9, 3.899743071551817*^9}},
 CellTags->{"Name", "TemplateCell", "Title"},
 CellID->35847474,ExpressionUUID->"9e08d94b-713d-4817-9aec-65519904f1f2"],

Cell["Wolfram Language Local Package Manager", "Text",
 Deletable->False,
 TaggingRules->{},
 CellChangeTimes->{{3.899125884876163*^9, 3.89912588992549*^9}, {
  3.899127175909252*^9, 3.899127177100581*^9}, {3.899743074280199*^9, 
  3.8997430785741463`*^9}},
 CellTags->{"Description", "TemplateCell"},
 CellID->23305240,ExpressionUUID->"4d96fcfc-13ef-46b0-a3d9-c6f64cc11cc1"],

Cell[CellGroupData[{

Cell["Paclet Manifest", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PacletManifest"},
 CellTags->{"Paclet Manifest", "PacletManifest", "TemplateCellGroup"},
 CellID->196832285,ExpressionUUID->"f3b2a25c-9a01-4234-ae28-a94637db0985"],

Cell[BoxData[
 TemplateBox[{},
  "PacletDirectoryChooserTemplate"]], "PacletDirectoryChooser",
 TaggingRules->{
  "PacletDirectoryType" -> "Notebook", "PacletDirectory" -> 
   "/Volumes/Data/Github/wl-wsp", "Refreshing" -> False},
 CellTags->"PacletManifestPanel",
 CellID->115408480,ExpressionUUID->"9dbe5659-da5c-4d23-aebf-7a96d70e130d"],

Cell[CellGroupData[{

Cell["", "FileManagerTopSpacer",
 CellGroupingRules->{"SectionGrouping", 99},
 TaggingRules->{},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->121401644,ExpressionUUID->"3ed78ce4-057c-4977-b4fb-f9cc21228987"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"images-2.jpeg\"", 
     FileNameJoin[{
       NotebookDirectory[], "images-2.jpeg"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "images-2.jpeg"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerJPEGIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2061420271,ExpressionUUID->"cb400c05-b034-4985-8aa1-331d7c41f875"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Kernel\"\>", {"\<\"Open/Close Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"dc578b9d-49e9-4330-94cb-2072ca84a587"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerKernelIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->3312192,ExpressionUUID->"1e3ec698-0515-425f-b521-1c7d163f1ebc"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LPM.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "LPM.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "LPM.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->25213199,ExpressionUUID->"0ad88182-d49e-45c1-8b40-5e9c11fe9550"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"PacletInfo.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "PacletInfo.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "PacletInfo.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerPacletInfoIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->796632729,ExpressionUUID->"2551a4da-d849-4a94-b3bf-44bd516ccca2"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"README.md\"", 
     FileNameJoin[{
       NotebookDirectory[], "README.md"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "README.md"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerTXTIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->393336387,ExpressionUUID->"fd237914-567c-4138-987f-6349b6bc426f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ResourceDefinition.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "ResourceDefinition.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "ResourceDefinition.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->335105977,ExpressionUUID->"3a0cde72-64b9-4a05-a3de-a71ea0d89d1e"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Test\"\>", {"\<\"Open/Close Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Test"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"6f6ae522-6c19-4e17-af7d-b66aede5ace4"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->703957134,ExpressionUUID->"f8be7de5-251e-454d-a6a4-5c37c2a20347"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"test.wls\"", 
     FileNameJoin[{
       NotebookDirectory[], "Test", "test.wls"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Test", "test.wls"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->920139815,ExpressionUUID->"66cb2bba-3f4f-42a2-9e09-08be74126896"]
}, Closed]],

Cell["", "FileManagerBottomSpacer",
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->109022389,ExpressionUUID->"a7838343-2782-481c-bdc8-45fcbfdea020"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Web Content",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"WebContent", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide content that you want to display on the main landing page \
for your paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoWebContent"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "aaa0a33e-0f16-4b5e-a6d8-8d3626e0b4fb"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "WebContent"},
 CellTags->{"TemplateSection", "Web Content", "WebContent"},
 CellID->184208365,ExpressionUUID->"20be5ea4-e0e6-41fa-9289-db7e3b0d3d91"],

Cell[CellGroupData[{

Cell[TextData[{
 "Headline Image",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"HeroImage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Provide an image that you want to display on the main landing page \
for your paclet. This will be displayed along side the basic description \
that's given below. The image can be given directly (i.e. pasted from the \
clipboard) or as code that generates the desired image. \n\nIf importing the \
image from a local file, use notebook-relative paths when possible (e.g. ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{
                TagBox[
                 ButtonBox[
                  StyleBox[
                  "Import", "SymbolsRefLink", ShowStringCharacters -> True, 
                   FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Import", 
                  ContentPadding -> False], 
                 MouseAppearanceTag["LinkHand"]], "[", 
                RowBox[{
                  TagBox[
                   ButtonBox[
                    StyleBox[
                    "FileNameJoin", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/FileNameJoin", 
                    ContentPadding -> False], 
                   MouseAppearanceTag["LinkHand"]], "[", 
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "NotebookDirectory", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/NotebookDirectory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], "[", "]"}], ",", 
                    StyleBox["\[Ellipsis]", "TR"]}], "}"}], "]"}], "]"}], 
              ShowStringCharacters -> True, FontFamily -> 
              "Source Sans Pro"]]], ") rather than absolute file names."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoHeroImage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "1f5f0c81-0048-4b4a-8d0f-4faa5f261b15"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "HeroImage"},
 CellTags->{"Headline Image", "HeroImage", "TemplateCellGroup"},
 CellID->509724307,ExpressionUUID->"4d144204-ebe2-42a5-bff3-0a2df15c4a39"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzMvQV0m8u99pt278TMzMzsmJ3EYXbAYdoBJ46ZmW3JkizLzMzMlkGWZGYI
7HRDNxROe9qe0imce/qdC9/t90gTv3UNWd3fXXedznrW7Jn/O6/sKDvvT8/M
f0ZGzyL8Ar5/4MCBGElUfk8TTkRHP026oYjOrfCYoJfhL55fCI998fJFtMez
jxA89b0DB3wwXtROMjkLpZuezzS9kGN2MdfsUp7ZxQLzS6VWvuU2V5vc7g+e
CRrzjRy4ENLm87TB+37F4Wsc23MFdpdLDl8vcLieb3u1xP5ahf31KodrFdaX
800u5BicTTc4l2zim2J5M8XuTrDeiXCLcynHn+Q9Tq5Oq+io7u9o5ZXX9Fc3
cdv7Z2dWv/r069++/fY30Otvf7X4xU8Xvv7Zys9+PfnZN02C+fKhicqRyepR
Qe34lPDLHwu++FHdxDSC+V2DFcM8dntf2fBEBVdQvktlI/yKUeFemq7hLdRM
LEHV44tQ1dgCUd3kCqVa3vJ7TS7WTyzW8xbqeIsiTaxCtRObUP3kG6iW/xqq
EWyKtV4rWG8QvGrkv0JNqU6shpm3UN2sSLXbVDX9KaXqbaqb+QFUP/WOqE74
KdQo3OycWRtaWp359POlzz8fnZlbfLVZ29gQEhbs//xxZFRoXHwUFBsfExkd
ERQWGhIRzmAwWlpaeDze9PT0zMzM1NTU7Ozs6urqwsLCmrhsbGy8ffv29evX
6+vrr1692hQXBNHF1VVxWVlZwSVEVsQFcdJeWJibnZ2eX5heWV14/Wb903ev
KL39dBN683YD8Vev16DNV6vQxubK2vrS0vLcwuIMtLg0i3sRwYtAc/NT0Oyc
cGZWMD3Dh4RTPL5gfILHHRsf5o4Ojo4NoTE+MTLCHRge6R8a7hsY7Onr7+rt
6+zp7ejuae8Ul46t0r5VWsSlWVyaxKVRXKgBZHznVsHg1tZW1HV1daWlpfn5
+Ww2Oy8vr6iogM1m0WhZUG4uk8VixMXFPH786JNPHvr7P3358sXz58/QhV68
8A8LDwoKfh4Y9BQKCX0eHvEyLDwgMPjxs+f37t73DQ59nJkdl5efyeakM3NT
UBcW0/KLaXmFWbn5GeyCTNKgs5LTs2PpjKQcZjKDIRKbkULEyk3JLUqnFSZl
5samMaIymNG0vPi8otTCssz8ojR2fnIeJ7mwKL24KL0gP6UoP7WkKKuqgl1W
xi4pYRUU0NnsTCYzjU5PptGSsrMT9xR+QygjK5YoPTOGKDU9CkrLiIaoIJTD
TOUU0BistNj4kODQp88DHvhePe3gZK6gdEjPQNXR2cLFzcbOwdTKxtDMQldH
T9nNww5ydrFCV0tHEULjsKs1BlhaG5hb6qGLGl3chdtd3W33lLunPV4HL46X
gtBAF0EPD3tHR3MrKwNzc10TEy0jIw0zMx0bGyM7OxNcOnHCHTp+3A21j4+r
t7fTyRNHoBPHvSF3NycdbbWDHx/46PsHPv7ogIK8lJysBJ6dEoe+d8TbjU5L
53J7pyYHpvkDy/Pj68v8uanh0aE2/ngP2p++miN693r+B28WPnu7CH3+6dIX
75ZRQwjiEga83ZyFNleFuAuNL3+wgnpqsh8vNcHtnBP080c7xodahnrqutor
WhqLKkoYWWlRyYmhN/3O2tkYaKpLKygcVFOT0dZW1NRUNDHVNzE12C0jYz3I
0EgXMjDU0TfQ1tPXgjQ0VTS1VLV11BHBAFMzQ3MLY0srU3UNZUhNXYlIVU3x
w1JWkSdSUpZTVJJVUJSB5BWkpaQPSssckpGVkJOXQhxXVVQVMB7tvSSjpCwr
J38IUlKWhqi2qhpuxO3SCoqSkJq6vIGhJrAFZZldzDG7xDK/zDH3LTS/Umzh
W2t/q8nlbt/x57wr0VM3EnjXYrhXIkeuhjcdvV/ueq3Y+VqR0/Vc68tsq8tF
ttdKrH2rbK+VW/kWGl9gGZzLMryQZuabZn0zw/5Ois21IIPjT01PRZ78pCCc
0Vne29MyUVM72NA8Or3wxdf/8h8/+bf/8dXP/vT6619ufPWvGz/+xdtf/eH1
b/6d//m39ZNTJf2jpYNccKp6bHLu258v/csvepY2SbxqlJfX0V/cxwW/gCqI
YItAqnJsqkG4WMefrxqfRpfE0a6emAGP/sambSIIA87QBr8aBGuNwvUm4Wr9
5GIDEDa5VD+5Us9bq+dt1PFeQR+A125y7YAX4Repa2Y+pVQ7/Tc1zLyDGqff
NUx9SlQvfNsk2OyZW+Mur898+gPAa2xubn5jvb65KTg06OGju4FBz/G0jIgM
weM0Ji46LCI8JCw0KyuroaFhfHwc8AK2psVlcXERSKJQ9ebNG9SAEYIbf182
t8q7d+8wbHsQCFtaWlpcnAd9VtcWITBofWMZNSLLK/NE4BQIRVAFPIFKU9OT
hEcgERhEBBIRGA0O9UJAUv9ANwQegUpgEwRIUWrvaN6ujs4WkTraerdKj7h0
bxVCNEAKSAK/gC28LfX19YRlVBeoqq2trampqRcXEkS3vLy8oADYQmExmTlp
aSmRkeEhIUFRURGJifEpKUnJyYkREWHPnj0BxVCDYoGBAQEvnwW8fPoi4JOA
l48pfoVHvoBevLzv/+JuQOCD6NiX2fR4TkEmlJuXBlQx2KlgFqcou6CEjprF
SUcQ5CLwYjJTcsXKY6YCXqzCtOyCRMArnRmdyYqhcxI+DK8KEbxYxcXMgoJs
MbxSxPBKEKMqfne9H7woUZfIyNT0GJArNy+TzkhBOyjkyYlTHoAU0AOmeHo7
ojY21dI3VDMx04YIbnAVhDIy0UTE1t4EQafDlgiCX6bmOgjiqo2dMSD4XeF1
9OhhV1cboMra2hD8MjbWNDXVBsvQdXa29PJyPHbMBfCCAK8jR5xPnvTyOebp
7eXq6XHYydFGV0ddXk5SRVnO0sLY2srU2cn28qWz6WmJgwPdi/isNTfJG+2e
HOueFQ4tzHCBraG+Jt5o19rSJEUuCl6EWR+AF+5CjfbqIg8vwh1sRT0z2TvN
61mYGhSMdfZ119RVs0sKsumZsTFRLy6eP2JuqqmuKqmkJKGhIaevr6qvr/5h
eBF+EXgRfmlpq4Fcunqa6OISRoJfZuZGBF7/OMKAJIiCF8UvWTlJCOSCwDKI
xPeDl7KKnLyCBKSsgrbM9jakqCQFcgFhGpqKhkZaDNNLTLPLbDNfjvmVIotr
pZZ+FVY3Ki39am1vNzrd7fJ6PHAyoOfEs1bvhy1eD9p8HtV73a7yuFHleafc
7Xaho1+p050q53sVtn6VVtfKzH2LjS/nGV3IMblIt7xKt79Fd76b7eQXY3ku
xPp8sOv18PNPswLTa/KaOhu4/T1TX3/129/9/q+//N3/9W9//n9//Lv/fPfz
3/7w939+88vfbfzrv429/kHtKK+sf6RikFs1PF7DnZj96sfrP/8Vd/PThglB
+QAXtSg+zq8eF0JVY4LKUX4FdxIqH+FBjcL5uskZxNFGEGMaBHMtMysVI9NQ
JXemanS2Zny+dmLLVW2TGFWUFuv3gBeY9WZLf4MXJEbVmy29J1et8D28tvS6
bvY1qWtnXlGqn/6bGmdeQ83TIjVNvYKaha+aBas900uA19Qb/N//GX9xCfap
raszIir81u3rz/w/CQp8HhoWGB8fm5icEBMXGxkdRafT8XyenJycn59fXl4G
tuC50AB3iPMCsEAi4sW2B4nhQlkWly2rJSqL4gIUwsfxeOMCwSSfz+Nyh0dG
hiYmxiA0EIfQHh8fhcbGuKOjIxCJoDE0NNDX1wPctLSAHfWdnTBNsD9tEAjT
1gbj0wyhjQjg09vbjfGoxSBqR72nKCfVtlVaxYU08FaAR8BTdXV1ZWVlRUVF
UVFRobjAW3E4HHgr8Ck3N5dEUIqLizES/KqqqgLCMjLSMjPTQSugKijoZXh4
KOAFloFoqanJJAgFBwcCXs9fPAG8xHpM+BUa9iI6Nig+MSwy+sXzgHv3H159
/PRmZPTzjKwYOiORlpOQzUjMgZ/Kz4DtguC/iAUDvwjCgBuIxUpls1Lh15gF
qfT8xGx2HMiVlRtL4FVQmrEbXoUFIniVV7DKypnFxTkFeHF2OhMvS0/MpsWJ
aLW73h9eJJ5FiyfKpidsKQnKzE7IouGPkwx++b+4f/HyifMXfbyOOMFSwT0B
TxBhEzFiwJOuvgoErlnbGgFSiKOG4SLwsrDSJ/j733BeTk4WsFrEfFHwIuYL
/ILbIvACxaAzZ46CX0ePukJHjri4uNi6udkjePv2lbS0uPb2+tHRvrGxfh5v
aHp6fG5uYkYwBHItzo6uLEzAeQl5fUtzY0DVnrbrA/DaWBGAWeAX/BdeEOQa
7m8GFieGWyHwq6+jqrSQlpIQkhwfHB8dEBhw/6i3g46mgqqSpKqqNGwX/mhm
Znr7wcvYRH87vCh+UUKE+DIyDI6M0m6K7RaFsO3+CyLAIvACxWDBiEhklyQB
LxAKomhF2gRbEBqwXTq6qsYmOoWmV6BS82tlFtcrLW9UW96stb5db32r3vZO
na1fg+ONxsM3qh2vFFufKbQ6UWR7mmN3qtD5XIWHX6XnzZLDN8oO3y53uMkx
vlhhcb3c9GqpsW+Rici+sW2v5zndYrvezrC5nO58LdP7brTXrU8cLz47fpcR
Russ61oTvv3DL//P3/7qv7750W9+/59//d3//dcvfvvHL//wpx/89vcbv/jl
+Ot3TXxB44SgWSBEXT/BW//ZLz//wx+nv/i6ZnSsqKuvYmi4rG+orH+4eWqu
STDfyJ+r583Ujk9VjwoqRyZh1qq4fNTwaEW9IxAaJFg9CmzN1I4BW/MNvKVG
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
W2t3vtLep8zRo9LDpeGMa6uvW+NV+4Zr1k1+ts23XKsuOZSddSg57cjxsi9w
c6lw96l2PtPodKXF/kar7e1G21u1dn4V9ldLHC4VOF9KN/eJM/GKtzye4nQx
w/sm7dSjtBMPwlyvlT1LedMu+J8//fNf//w///THv/zyz3/+9j//9M1f/vTT
v/zH6rdfd0xOlHd31g8N1A8PlnW2c5oaBuZmBhfmqnq7/RPibge99L7qa+Hl
oWRmKm9kpmRqqW7loOtw2MTtiPXREw4nzzudPn/u/pPzDx5ffvzi+vPAuyFR
T2ISXiZnhqTTmTVNrLrW/Oau0s6B6v7RRi6/jTfTwZ9rGZ+i1DoxTalFMN/C
X2zhLzfxV5r4a038jaZJUT5hk+BtI5HwNVQ/tQk81U1tAl7Vs+DXmy14vRJ7
rg2CrffA4q90TK50Ti51Ti4MzC4Ozc5SGp55r8Gp6WGhSEOCqWGxhvhCqHds
XLi8xF+YX9pY2/j01fTC1NrmUnZO6vkLJwJePo6PiwwPCwoJDoyMCIuNjkmI
i6fRaHg+k1Ub8KulpYWkInR0dFBZDaASapJx19gImgArsELtgB3ihGVkDMnE
IykQGEzWkkieHllRwr0kw6FaXOCXyNISNZtHNcrKykgXYzCyWFx20ASl8O8L
rm4fubuUbpWSrULGE0uFF6SwReLb17mANnAKmIPJItxHnPwaGEMGJCcn5uTQ
EADFwFO0gS34LDAL5gu0Qo1IRkYaarAsLj4qKjosJDQgMMg/KPg5EBYRGQh+
oQ6LeA6BX4nJYUkp4dGxL4PDnwREfBIS6x+bEpJGjwWnWJw0Zm4KnZEoWt4S
i8V+77kY+WmiOUNWAiM3nslOYOWJyZUnEpi1HV4QZwtepWXZJWUZokhBEis3
IYcZDU5l0cJFtKJH7KxpUfvBa7+EDVgtcAr8Sk6NSkgKT0mLBsUQJI4Ml0rK
cguLGWgDYaASjBWAZWCkDucFeIFlxGpR2CJCF/z638g2hOcCrYAt4rxcXKyJ
+YLJIkmGABbaPj6uZOULdszb2wlCEFDz9T0VHPykoIDe2VkP9fY2c7ndQuHI
4iIf5CLOa2VhAl5pcqwbrAFx0AWhKHJR8AK5PgAvNEAuEJBMQhJ4DfY2Csa6
eSMdHU1lN6+c9Lty6vGDa0lxwbf9zulpK4FcKopSulrKurqiVA1jY21j0VP9
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
ZhvARHM4EEZJ8rRIGRMygQyDmJlBJXIeksqgxI9ithUttEUgkwW1HBlNVh7g
UhpSS0lJIXhJMtJGRvvffZh98+75T396w8FrdLyruqYERMjKTs/JzcjNzcZF
Em7w1UhLglD4Rn19fcPDwwMDA52dncATBru7u3t7e/GQlgygUe4K7gw5DGnd
HIXecKRaH9KOTa4SMlfpUbBQxIMt0piIMbaqFQ/8YqsHJ0IhZmYJccFiSWpW
jiA3XyTJ5IFWEF+wlTXXItmVkhpN5OJk12+QC4psgVzS1XoJXrBHoQH3/G+e
8DwIACkofq2jq0bii2pikLYiFyLEFwYNDLVxAozqFmIE8EKHBvEmOBNSi9Lj
ob9ALop80UJmNh1xeXiR5nLZZQdz270d8ILyys/mN1bnttTl9XVUTAw1zUx2
vnjWM/u0a2q0FR2A7MOrUSBMzA9PTQgWJoemxAVn8hMkvARorpjQBxJeXFmu
uLet5uePL96/niLZRfCafd7/Ynbw+XT31EQrlNfkeBOUF8jV21PV01Xd3VnV
3VNXVp4JaRwYdOv02cNb7CzxBaG8MHUTtnAEuQheRK4vhddvljGUNlk1DKUz
3qV3Q6Yk+c/AYlUYZXQATGRqTGaAMsXSCV5LZRcj0JbILgq6LXsx/+N64A/n
fCZcD3bvdJo4cuDjDa93fpeeeh99evNo92W3zmvuHb7767xdKi7vart3eCTG
qy/eqzPOqyvxWh//Tl/qvW7enQHhvYmswHHJnUG+zwj/+oTg5qzI//u8yJep
Qc3XvXJdTxbtvpzvcDHH7lzR1suVO65Xbr5WaH4xz+hskfGFEtOL1TbXmu1u
N2/zbdnu1+F2v9rD74m520F5w01/VDderaatyEzXTKxJjcmI0FgwZvpVY0xF
bTEmqHHwwky7ceNGOzs7HKEaAC9b202mpuaYpMEmKjHxvyC8vhRqS99Q2jG4
tK0AL4ysW7cOWhVHSC2CF86HbjUzM8Ptw23EOfgx4OXlBTVEsoImZFr5VcY2
KC9M8piupeNfIBHtGkYeM3Qol2MRvDhayRJlBTIafQp3Dr0Wb0t8pJfTdZJA
S2NLCkPf5OVnjY0PvnrzDOKLymt8+v4FJNjz2eGe3tbmlpqu7tbBod6hoYGx
sbGnT59Ose3Zs2ezs7Pz8/Ov2DY3Nwd+4XvhbpDqJDTTB9GHgkGUZ0hUIm0I
qUVXRRqTihtLZ7AsjdyxDf1UsQSoEpPl5mWUlhXU1lVUVhXV1Ja2tde3ttUV
FmeQ+MrJS1sBW0vJBePIxcGL3INc8GuRLUsuzsLCg+7cve6+dxcEFykvCChC
EpQXCEUsg6TCICAFhaWtowpDhxgHqIFZtA0K0IYzaXtKWphM+3yBaJTUgf4C
vKRiXkzCxo7dTtvAL4LXPjf7Y4dc7vpezkxPaK7N72wuBrnGBxs7moqgvwAv
MAv8gv56MzeIfpYoOibsDsRXUsxDCS8mITwYmkuYENlaUzw50P7q+cifv3/1
8e0zYOvt/MSb+VGQCwaEPZvqnBxrfva0FQgbHarv6ixvay3uaCvv7a5paCzO
zuFFRj+85ee1b78L7oamltIabRXoHZDL0sqUU1tMwqGF8ZfC63d6CzmTTpCQ
rq8rvVCLqwlP/JIuC0/0oZNp9Ran0cgofYEK1nFbJHOaS3rfE4q+LQuvj2cv
zRw5Prp3b5/brt59TiOn3YbPu7ad3FZ91KbkqFnVxc0td3e3PtjbGXJwMvni
ixy/UcnVAfGVQfGNkYx7oxkPh8UPR8UhY5LgZ9mPJtIDx0UPBpP9WkK9m4Ov
Vt25mH78cNreMxnuVzNdrortL2Zt8yrc7lOyxafAyqvA+Hzh+vP5hmfBr7pN
Po1bb7ZsvwV41XjcDbfcd1je2O6PGhZyGnqKTGiJIlbqC5EmdXaGBtFgquq/
mtI5XpD+wlOQDxBclmyCDkAGbJmZWRgYGLEbZqkyS3RZ/+F/DXhJY2tleK3g
NgTLIK/I0UqRL9x/thwHwzgoMiAMfYxAz0ZGRoI+g4ODPT09oBima4II+Qwp
NCYd/5JOoYfyIoShQ+cvVWGLBjmWyVJS5FTklk4TttBoECfQe9K2LxBBtbW1
UEm1tdX1DdWA19zLCdi7D8///NcPQBj4BfE1Mtrb3dMyONQzPjH87NnT6elp
YGtiYmJkZARffIBtkF0QWVTHmBbBZbJFtKgUP6GHDa4x+3WSS5CSOmgTGUpK
xAiBaWmlfXo3ql5Cy8bxqwC6D7oWV97a1tje0dzW3tTZ1do/0IUvgiMue2Z2
YvLpUGV1AdXQ4OAli1yLNlZO5kUtdRiuDC+OXBy8SHMRvMIjgq/fuLzDfhN4
hMkZDAKAOKlFOgsIgwqjyvB4iDMh0OhMYIvTaFSGlyJftLcy5XvQW1HNXhZe
W5eFF5utYb/baSvs0D4nwOuWzznAq7O5tLu1dGygobU+H/IKImu4t/a7txOA
F+zTm/Hp8fb01LCH9y7HR/qLeOEp0Y/CAu9EhdwvzUkHuZj1XDOjr2dHPr2b
BrnevR5/+2oM5JqZ7oNNPe0YH2l8OtHMJhzWdXaUNTXmN9YXtDQV5+bxebzI
oJA7Fy972u/cjC+uoam4zgBSVM/K2gxGkCJg/c/B6/cIrqXF5CnhkCtqwa0m
ll6ZReu8CFu0cSShh0t6p9CYguIqxpGmtJrgJb0TCpeksdRhKL3ByiIbdHfq
cLbrO+A46rm76/CW9uObui9uafPaOBnqPvrEdSLuwFPe4THekUnxyZncS8/y
Lk0UXhor8BrKutaXfqM/7e5gWvCQ8FF/avBoesQAPxRWF+YnuHQ0/tRB4eVz
6d7Xcn0eFlx5nH8xJOvY/QxXX4njjayt17JtruSYX843u5i7/lyhyfkKa69q
26st9r69Bx41HA6M3HDkuJKl/dfalqs11smraiooMrWTIC3VVbXUGNNgp2c1
DXUVDElNz9LUoGxz9DEhQzKsY5u+vr6urh5szRodTNsU8KLMDVnwotIT3Hpe
1qSJo/J3o7/mvxK81GW03wM4OlODbbLeZ4WEDdwu8g3ijpEiw7iJiQnuHmWG
4PcA7iouHqedOHEiMTGxtbUVs3d3d3dzczOgQDVmCRPECC7+RfKH6Ibpl3IV
Ojs7K9hWvtDKFpr0eJlUK5HRCGGELTzEmfRaMAWIxMdx/r3x8fHJyUlST0+f
ToyND00+HYHy+vQ9wyzA66c/vYG9/zgDCrS01jY1w+o6OtrwZYFpgIO+F2Wb
EBlJ+lHOCSWxUGJkQkJCcnIyBpOSkkJDQ8EvjkRUfp8286J131z4jLI6qVFG
R1dXFxAJVg4NDQGdrAacYHmK7zEJtrLfYvTZ9PjE5DC+ztyLpxOTg2Xl+UnJ
DIwys/myXIXSe3sRvEAuGJFrkeyKiQv9TXgtchhSJ/Txg3PnT0AuEbloHxOo
DNJKIBEhCXgix6AOs8qJcS1y23WR/iJphj5wZm1jYrdtAyUrbttuS/Eyciey
6RzS2Ybbdn1OlQe8Nnu4OeDo7LQJ5Dp5zB3Kq7Qwvb+zuretbKi7uiw/1f/W
2WB/r7pyyfRY29zTrvnp3lfP+0rzeMkxD0Lue/MTgtOSnsQ9eRAT+iAvPXm8
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
kjqzKoeqmzurq2rKC2vrSyprCosr84vLcsvLCmvKSxorqpsqa6orP/+cxryE
X7/48Y9fv/jtisn2xo0bwBmmAldXV+DM2tqaTZP77BWkDUFwBLwMDddzGRqk
y3CkLA51DW3WtP5umhpSpkZqjNVfSjBZCkuWW28RgzR/q33p+V8KLy4bBJ9i
amoKwXX79u2oqKjHjx9fuHBh27ZthoaGXEYi1C70AuZq8oNFRkZmZmbSaiyQ
BeSCJKFKUFSFA89S2V7y+KHDlaqg/A0ON7QOiyosLduk9RRHLjTyW5KyA+Co
ChMugBLyIU4gCTH/Q8VAwgBAMzMzr169mp9/8eLl886uloYmprwh4MXuijIL
5UUxr/lX00+nRiFkwIehoSFKU8T7gFwADciFf112dnb4Z4ZbQT5VKC/KcSXK
U8amOhuW1WCVOP1rU2eDtuhos41qwkC4OTs7nz59Oj4+vquriyQeGqQWPr0X
cOruxneBIgO5RkeZQfKsAnZtbS2trc319bUtLU1t7U05uRnJKXEJidGSDCHt
qixrPdeyi5FluQ1lJWxQ8XnyGUJzSWduHDnqAb4oKX+rqPQNNBTBiJZuUd47
FTnkFnmROiOBBrVFC5PBPkx99ELyMWIQMyGFxjAN4p3xEC+B/tpgawZ42Tts
BLZoj2Z0AC93d3vAy22P3aEDTlBeJ4/vuep1LOTh9eTYoKbq7In+hmfDLa+n
++pKxcf32Z875kKckvDCqgqFxVlJoqTQ5KgACLHI4Jvx4Q+So4MlqdGZgtjU
uJCEiADapzI2yr+5If/Vi/4XMz0T480Er5Hh+qH+OtqAsrWpuLY6r6RILE5L
jI8J9fY+6+Rkh9lbQ1MZNAGeLC3NbWysCEm0GYp0YahlyUXw+qL1XIsEF5fX
RyuRl9rK8JIOjbGwW0XwWkQumDS5CF4LUc6V4LVoR2bh428yohXzEtWzEtQz
4jXz+MbVudubKw42lJyqLvAqy/TNFwXmCiJyU5Pz+el5gqyq/NLirPyc9Nxc
SXF+TnlRQXVZWV1VdX0VMFJZ3lBf3d/dNdI90FzRkJWcnRgSJ4rmVWSXNNe0
NNS2lVa2SAprE7Mq47Or+KVtwvKutOIufn5bWm6bOK9VlNEsTqni306NOhn0
2POeJDCpM7d6rLGjt6mhua6iubWqtrm0rKagoDgrLzejMCezIrewuqi0tPjz
z2lMaPRrnJxFFJXAbMbWTxBDFISFhQUGBp45c+74cU93d4/t2+0tLKygG8hh
iAmGzaEzWLfOEKant460mIamjpqWjhrliX42TRgtkVbWUFFSV4Ypqikpqiko
qypoy2haMtpSDEkvGV4BRl96/heJL5pLMRVfu3YN9w3a1tPTk/QsBAVmV65I
FBoYB6K5ubklJibSklvAC/Sh9b9EDUqloOoW+KNQBIpzCXIxKUpTJM1FzsZa
GY3DE9hEtZgwb+ODKBeRlnFRnsPs7Cwm/zdsg2J69+7dhw8fPn78+IltGEH/
7dvXHz/9f5y9ZXQcV7euu/f3ZQcMMcoWsywZY4idGGKK2XEcQ8y2DLJlocXM
DBYzq1tqNTOD1GKy0Exx4Ntw7jnjjnv+3P/37Z527Y5sZ+9za8yxxupV1dWt
rtJ66p1rrrkeqTWy5taqvgHdzMMh8Ov5y0mQC/z65c3TX397/uLl49mHk9A3
VnWjx/nxoWVlZTdv3oTqdLNu4Dh5CwnupKpIYYFfxCnyE9IvjDrlNCOooRG3
IKlaVKBnz507V1xcjD8Tn2VFlUWF4QuorRta8KfDJBIoXCkl7adfEvwCxZQq
KeBVVl6cm5dZVl5UWpZP61G+P5/rY+T6WMDGx6IQSXORwzApOZrchrCY2LDt
OzYDPdSVofuiLotmdZHystVZDLMobIN5OP9y0WcwkmyUpJfCNmCMNCPvInZB
f23fuZFWuoTh333dBo9vvlmLh9md29cd2L/1xx++O3li97HD3/5wdMfFc4eD
A85xW8vGe2R9aq5O1FpdkBRw4didSz9U5MbDjFLWkzHjgJbPri2ozEsoyYwG
wgCv3NQoCK7ygmTAqzAzpignJj8zMjnhdntL0cig/PFsz4NxdX+fyNzD7zUL
taoOkEst50gErR2smrqawpzMhOiIwBMnDq5Z47lkKZi+7C2MPNzAL2bJSOIX
kYuSRL2ftxD2fzqf64PkgjGAmGN/EcjBJJOnWcmQaV/M+8TqKpxLLtwGRK4/
y66/ghcjuJgW9MT3Uz8tSPwkPeqf0qL+VpyxvKX6K07znvb6w5zWS611N2rK
g8uLoiqKMhrKK1gNndw2kUKgFnElXe2C9hYeu13I58kUSp3eYDIa9RIxv6uj
VdjRLud2qTgCVYdQ2yEakmiG5TqzRKMXazVKUydPmV3ScDchP6m4Kaumq6BB
DAO/KpvVFfWK6lJBcVhhyqmwe0ev5wbEcoprle2dInZ7R3udXMWXaXhSNV8s
4woFHKmAqxVLTAqlRMAXCflikUACxomFqOAljF7KpGKVUq5RK1FiFwDbwWJT
voXKysqioiJoinv37t2+fXvfnr3f7dy17eut69ev9/HxdXP3dHZxw1UHuRZb
7csV9gtX2i+wtxgqS5yclzo6L3VyXObgYDU8HKyAWZJ+2A6QvRsmW7HSweJp
fK/8IIn+Sxj9nx7/39+o54QuWLBgAcB05syZS5cuHT58EH0pI8dWr14NyKNl
1apVqKMFRLt8+TJ5ugoKCiCyACn8zniKAFnQ2ZrNZnS2IA7amRWWKcMGSuCM
MIRGciRS/ijqikXWDS/J0Ud512m6FjnQGEJNT09PTExMTU1BTAFSYNOrV6/e
vHnz22+/vX79GvWXL18CVU+ePAGzZmdncRjqVoTNvv7luVanaGis7B/UP385
/ea3Jy9ezTx8PDb7aPTFy4f/+NfXsF/ePB8fH8VHE0rA6MTERIjTTZs2AVvL
rE5dZk0Z0AqN+D2/+OIL/HQUMkTYovkOFBVD18jeuuHnxa9KiSWxoY5LgPMD
YREREXg2wE9KvwP9IPgd8GhgnWSg1eksE9lAbWu4Zq/ZbImfNxg1zS31NbUV
2Tnp90vyobwYeH1sPheTRoMU1kch9S7b/BzLL8jIzEoCthISIwlesMSkqLtB
N9au84bmQn+Fnor4QgNYYBYNeFGcPPQX5S0Ev4Ak4hF5mVCfv+ATwGvFyiXW
d1lSRbm5W6jn7EJZEJdbKWYBma+fp2Woa9vaVX4utHCYp/fKNWtcv/7ab/fu
zfv2bIbmunDu8MXzR36y8uvsqf13rp9m198f65aKWTXF6ZGRty/eu/Vz4OWT
KRE3m8qyB3WCF5N94Fp7tQVeRWlR6bFBmYnhqbHBaXEhGQkh6fHBWckhmUnB
CZH+Mfeu3M+PUctaZqeM0xN6k5Fr0HOGh+RKGUut6FDJOkW8ZnZrVWV5Tkpi
RNCdqwf27XB1XTHvi0/wJ6zy9QB9gBJaOpn4xcCL4jc+lnT3/3Q+1/uLZJFR
u+1qXJRr97+EF5Ntfv6Czz7/4hNmkAtcthrItfB9eBG5rNfuv4AXg1F8pfKc
eUUZn+Ukf5qfvri+YjWXtY/f+RO79ee2luvNTSE1tTFlFYklZZlVtWWtbJZA
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
V8N0elVWdhrgVXwf2LIspgx4vR8V/xfwAo8sYRi5STh4zhtJqdEqySAXsAXD
8cAW4BWXEEYgi40PhR05tgfwImYBXouXfgY15Oi8hOBFk46ZyA0GXkyqXsok
j86N4t8obzllYCBfFvNwTmEG6C3Rq6/f4AcQLF78qYvLMg+Pla5OS/18nL9a
77Hnu03A1pmT3586sQ+VHw59C3idObHn2oVjhemx1UUZaTHBkYFXQ29egKXH
hmTGh6GsKc7ktVZ3NpZXFabnpURlJ97LSYrISY4pSE8AvHKTI7PjQzJiAlIj
byRHXIsNvpAcfT0rKbChOkMmaOw2CXQarkHHB7bUYraE19zRUlFXnncfbwu7
eerEfh8Pewe7BXZL57s52/mA416Q7U6+78a2mMSGJLuYyHnbacsfjNaYA6/3
Yws/Bi/qduhxmkn5sMiyivwCZjUThmK0rIn1vrYcYLu2O1rwdpzE8mT8bvKX
9WIttWLLEmpI41//fXgRuWBthas4FRtFdTvEDfvFTUfFzWd5jZdZ1f6tlXdb
a2JYDVk8drVEwFJIhAqZXCFTSgRCpVSmlUPKCFrqGurLKrnN7SaZSsURyNlc
dadAxxEqWzmaNq6ZJxsUKPu6xJomtqCsXlrTPizSTmkGVM2isrjCzOC0+zH3
6zObWEXczvsidpGoLp1VHV1Z7Z+YfeRa+rErEftPtqfmGNpZmk42t7lW0NEg
4rXgm4h4bUJ2C6+loaOmurm0pLakoLmmBPxSiTndGgkIBU6BVmBWj1ZqUovR
CITB8FKvFkGUmUwqU7dab1LqujWmPkNvn7GnW9ffbRg0GXoNBpNOq9IopWq5
UCcXGrQycz9bbWxS6Wq0+nypPKmLH9HSHlRTfz2/9GJK1o+hMfuu3Pr6p7O+
3x9y3LZ92foNi7x9v/TwWeDmNd/Vc4HF3Bc4uc5zdJwHbezsutLDC2bn4ob/
Wygv3EaWbB8fGSOjnpC6PnoGsmTHtVth0USQbE7OMGdHJ7rLwB0YtWAvDO20
CyUayVAHkXASlLTLMtF78RLcdDA8QDng/HYrcCrAC2T0cKf5Jiu3bd984NC+
i5cvhEeE/Xzx0tqvNvqu3bDx660+Pr5bt24NDAwEtqC5KC8fsEVhh5Bd6Odp
DAtqi3pXyh0BSE1MTAAohJg31u2XX34h/x65+LARqkhSUTtB6mPK64PkwjZr
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
rk4k0onlIJdSpJIJLFF7cr5GzVfKOyWixq6Osqb6rLL61Ptd+XW6Wq6qpF2Q
XqXIqh+pEszUy2dqpdNV4tFyoTS1nhtb2RFa3BlYwPHPZp9NZh2LYR+O6jgQ
0b4ntGV3cPN3QbU7blVvv9m4P7jzx+jqfVfL9p4DvDL2/lR/PaQjJombkckt
yuNVFLMr8jtrSwQt1RYXYkstECZlN7PqK1iN5Z0tVYKOBjzM6OTcHq243yjH
s41GysFNglsFFRgqOAASzKSTmvQyrV6iNcgt8OrRdBuUQ92GfjyyqhRahVSl
lil1CplRKTAbmgymQoUqR6XJMRjSjaYUkwnwSjJ2Jxu7E9S6aKksSiKJUchj
NYpYnTxOq4zii5JFyiy5vlBjKtP1VOi6a7WmRq2xVWtsU6qaBOKq1vac0rKo
5KRbQUEXr145cuTI4YOHDuz/fs93u3du37Ht661bNm3e9NXG9WvXAVWrff18
fVb5rfJd47caLV+t3/Dt11th32z5euumzRvXrV/r60dsggRDaYs2YGu1zyoc
gAq4hjuGgZcr7pglS4EtHLZj2zchgXdbG5u62B3l94uzUpMykmOzMxKL8tOq
yvNrqvKTkiLOnfth//5vI6OCExKj9+z5zs0D/02WT1i9Zt0PP/yYmZkJzQVa
AV6U8JbEF7N6F4Udcrnc4eFhAAi66c2bN6AS4QYttlLrY6NXxB3G+/foI9sH
yfWxAa+JiQlKQT8yMtLb2wv91ddnhpm6dQmJMWnpSTK58NffXv7P//VvY+OD
Tc21KakJoaHBx48fx8MGwETR7Ey4ICks0l9M+n2m0ZZrFDb/wYANiLMPGj33
Al4AGbWAYr6+Pj/88ENkZCTNreNwONYUkSqJRAR48QWcxKTYvPysgsLs3LwM
6K/0jATAyzaZBrOUyV8EbIBQhDAKKQShklIibWMLCVix8aGWoa74e0BkYlJU
dExoQmJkTGzY6TPHKUh+6bL5Xy76DBUwa8nSedaId0vUGT1dUz9m7a5xd0Fi
OBO80GuR7KIjmbg1chsy/TCt5EvjX5Qe1hq2sczT0xHk8vS0h23Z6At4fbtt
TeS9W1lpUdXlOeX3M6LCb4JZ5099f+XckYBrPwVePXPr4smfDu2C+EqLCQa8
wKmMuNDSnKTqooy6kmziFwziC5Yedy87KTo7MQIHJ4Rej7pzLuzGqaBrP9y+
dATwgqUn3eloKenvk/b2SLXqLpWMw2HV1lbmg1zBd64eP7zbz8d14by/W+Dl
tMzTw9nHMp5lwTcxi5mkzMQcvh9kaEurv4bXHHecxSNn1VbvGwMmRltR+5yh
LsaFSCNiUFuELRgqMDAOe0l54WvQDDUa81qx0pJSAwyi/GBr1npZl8XxZGyV
rwcM9wPdEmT4ZWBEt4bUxK6iPHF1Ob+slF1UxLlfJqptkDezFG0cdafIKFAZ
hRotmMXVaHhaA19v6FAOCfRTir5pWe8AS6Gp6NCVsPoquMOVfE1anTa5ZjCn
bSSrrTexrjumUnOvjHUts/5sYs2J6LqjkfX7Qut23GnfESTaH8H7LqRz++3O
nXe4e0M69t1t3HWjdod/ze5rjcduVR6+3HEtouZ8gCg+XZyR3ZmZzspLF9aV
chtKxawatZClk3Qq+e1ybqtSwFIJ2XJBu4TbIu5qlvJaQSutrMug5MNQAbDU
kk4QDSyjlzo5X68W6dQiBZS7nK9UiVQqkULK61YrjHKpXi41qBUmo9bUZ9QP
GGUD3e09PflSeUJXV2QnJ6ijM4THj1IoYtXqWJkK5IoWS+Nk8mStOs2kTe7R
Jpt0mTpjjqY7R23KlGkyRYo8saJMoWnQGavEklaliq/XC7VatlBQ09RQWHI/
Jy83OzMrKyMzIy09NTklMT4hLiY2Jio6OjLq3NmfT5386diRo/v27AXUvtm6
DVzbuuVriCOydX6rwSagCsoLMGJkF6CC9jWrfIEtHINGcA2cIichShxMsguC
CxD88djxorz8saHh2ckptVymlokUEo5YwOrqrO9k13I5DU0NJZmZsRcvngwL
uxVw23/DV2tWrfL+atNGJ2f3DV9t8ve/gZ6TzWZXV1fT8osAGZNjsLW1lRY1
xq6uri4or9evX4NcNMJFmotmY1EYBiO1mFj3x++2J3/ePqa83vcWErkoXz2T
aonJtkRJgEdHR7ELBw8O9kN//eu//jE41JtfkB0ccqe7R/f8xaOh4d5OTltS
chzY/fXXXwNPS5YsYVI/0QgXOQmZUHmCFyGJ8SsyIfQfC5X/69AvpldBHQwE
vyDY9+/ff/Xq1fDwcOhfSLCBAUvAIeDF5XVEx9wrLMotLMrJzErJyk7NzErK
y09/H15/4TOkGIz0zLi3SeOtA15opBISjDyEUTFBEVGBkFqgFc3zArzS0uNR
Hj6yFw/V8xd8AmDNm//3L+b9jeAFiq20X0yCC9iirgyoos4KXRMDL/Rg6OLo
APS9oBLl2QOkADJa+IlotWLlUpSowwAyaLpVq1wtcYaukLSLV69yWePrunP7
+pysuLLi9I62qramMoivW1dPQnn9fHKf/8XjkYFXg/x/xsPavduXobnIshLC
IbIgvmqKMwEv8h/ez0pAC5RXVmJURlxYfNitmLtXYu5esIgv/xOBV46FBpwK
ufVTaWGshFc/PqY16PgSKUsmYtVXF2alRUeF3/K/fPrQ9zt8vV3mf/7Py5db
RCKRi+QGk97wL+Z5zZne9Rfwej8r+9shpI/Aa86oFiO1CElkQBWMNBeFI6IC
bH3xxWeMwxDUwy6CF74MfXPrIsvQzktx6a1X3BXkWr9hlXUtNh/GVq/xhkF3
k9+YwRlDNE1Jk/p+I5mmvE1fxe6u5fU0CHqbxD3N4p4maU+LrLtF0dOqhJlR
1ouHm2VDjZK+ar65tFORVtMVmtt5O0NwN0cYkMW/ltp1Pr79ZETzkeD6/bdr
995uPRpdvy+8/rug1t2hnbvDunaEiHaFKvdHSHeHincH8XYGsHfdYu8LaP0+
oHrnxdzNP2RuP1H64zX2nShpUpam8L6mvExYWtBWmMZvuM9vr5Dy6jUSlk5h
GfRUSdhyYZtM0CrqahR01qNEHS1SfouY26SWdmisY6Mw1BWidmpXCC33j1TM
kkjYMgVXpRHq9XKzQdVnUA0aNcMmw6DZ2Gs2GMw6tVkrMesrRcKU1vbw2tqI
1tZksSRLZ8jrMRf29Zf0Dpb1D1UOjFQMDBb2dmfolbEK4T0RN5ovjBdIkoSy
DLEiT6oslqvKFaoapbpJqWRr1GKjUdltUuq1IrmYw+20ONiaGzvaWvmcTqlQ
AHboVEqDRm3UatqaGpvqaqvLy4ryctOTk2IjI8KC7gbdDgi4du3mlSvXL126
ev78pbNnz/3009kffzxz4sTR778/sn//8YMHfz55EntxmP/FixdOnz60d+8G
Pz8vF5f1vr6b1q5d5e7uam/v6eyMErZ/1668jAyjWj0+ODg1Ovp0dmp8yDwy
oBsd1CulHUatUK8VjI8ax0YMZWXZP/98fNfObZu3bFizxs+SJMreZdOmLdHR
sQQvWpaR1hQmVyFN46IN7YAXRWsQuT64UbQGM4+Y3H2MOqMBLzoDGEcjXDgM
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
jWzTpQztuUTlyVjJkTDBgRDBviDed4GS7++J94d2fHuzdes1zp47spNRmosJ
pjuZ3fdy+xJLBnOqJypbn7D5z/nSRwLJKIc/JhQO8bt0rCZpU6WCXaMTNRuU
7T16To+J29cjHOgV05o4ZpO42yA068WDPQqTxrJIO/gFeIFZ5CQkA7DQAsbp
lVyjmm9U8I0qgV4t0GkE4JdSyVXKuCoxRyPm6cR8mFbCl0v4OB2bz2rhtbfj
LhdwW2SSLpNeNNQvHBrkDwzy+wb4PX1Cc6/Y3CfqNXN7Te09mka9vFYraTfr
Wb3Gjl4jt79b1G+WDprlgz3qwW6BViLSSKQAllai0Ur1eqnBIOs2yAd6tUP9
+uEB08igEeVgH5SZtrdbZTapsWts2Dwx1js+0os6FKJawVdKeCoZV6cUm3TS
XqN6qE83OtA9Ptw9PmR+MNIzOdo//aB/dmJ4dnLw4eTIw6mh189mXzyZeP5o
8tWzqV9fPv7t9SO0AFI4fmzINPNg6OXTSeydGu9D/fXzSZDrxeO+Z7PAn/Hh
tGl6Qj85rh8bVtdW5wJenp72G9b7rfZbtXb1miNHjiUnp5aWltPC99XV1Y2N
jQQvWoWEVukSi8X9/f0UyA1NRNgCShi/H6khCqIgSNFi9wAThBXNZWY0FJNq
g5FphCqCFDNwZgspElMP321zAjxALpyYMXwCc/zQ0AC+y/T0JKeLFRxyJ+D2
9fyC7Nzc3IMHDxKhXKwbhYO6vtuo0fndxiw5TRMiKJTUNiMYM0xGuaSYZ2BG
fDFZVuZoLiu5HEnc4RNxZl9fX4iv6OhINru9uqY8Ny8zNS0xJzcjvyALsis1
LSEj08Kv9z2EtjZnuUmavUVqi4LkY+NDo2OD38dWXEKYNVojITomPDIqFBQL
Cg7YuWsb5A/R6mPwovhAWj6eYggpBh5dMTpqb+tcJ3TdaKH5TcQvsIni5Jle
moIPYTgAb4H+ssQxOi9ftuwLB4dF8+f/s93SLw7s+7aoIKWkOJ3PacB/tkLC
7jFIxgc1D4a0A91Sg6prdqT7yYM+TlMFwATBlRwZmB4bAs1VlBFHWTVQ4iX4
RaHygFdiRFBsyM240JvxIf73bp2JuXshLzlIxa8zazuH0V/1CMx6vkrJInhx
OupKijJjIoOvXDy9caOfJZJ/yQJrxJ2jxR/o5eoGYeXp5r3KC+QCxf7LeVtz
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
ewBKDnOQNNgIYo5Dt9k90FvX3lzeVFfUWFuUn5McGRZk98jq9InDgK6vv/rD
N1//ceteWju1G7O+7GcvCO4Nr91//rjHD861bczdNmb4cUfs/d8ePPQ92gBF
RfUQMAslOTx+QhtKQBVoa6qobUl6f5OwV7aEGV/RjBY4o6E/JIQnJC6dAOLQ
hkHY+OEnoYyCOLw4E0Mo98XWgT58cTEIQ9VuwuAlE96C4LWXcHgBuUBwPLTI
pmwmtrLpS+GF02oHvJhIOKS2aRuzgDgfNcX4jDBmAbBmsX2T4UYXBI3YjslS
GhJ+jFhABnPE54yAP+KxiVCXisYBZLJ9Kjkya4ZZNox6IhpcF7rfBqEbadDG
inR9dXJlZWpldRa0sDg5NS3gCxgMJnmCOsLhUqWTvJlZEQjaBUImaG5+8s3a
+vrSxsby+rv1t+8337xZW327vvbh7dq8lFuSkxgd5FyQGJgX55kY/CTxhU28
n0WMD8gq1tc6zgdTvK9NvK8tJi9MEc5moU7G0S5WUc6W4U5mUGYFPc8LdS0M
c81+5ZgRaJcV4pAd+jwjzC3xpVtSRGBSbGREeIxfYKSzV5i9R8Rjj2j3Vzme
YQV+USUBcRUvE6tC0+ujs1viCjpqeli1/ZyydkpGVV9mVV9JG7mml1HVPdFB
5rePcdpJbCi7yLxemmiYNUXgzvRRRT1UYQuBUdDUF51d8TI5PyKjNLGwoayZ
0DMmnuCvMMQbTOkGjb9I4y5wRIvTs5tMpjA5LsXkvpG9lXWQh1u4r1dCgHeI
naWP0R1/M71sX+eB7KSJ8rzh7MTOuNCJwozx3FRGYTqvNEdQmsUrzoBSWJY5
U1cwWZcvrMkZzY2pi/QqCHZMA+/pZu1kck0fDNgPfzympqCtKK+rrCT37Xe6
6praajoqiuDGtLTUjyJ4qSlrAbzUVTWOHNY5f+6Uvv51Ly+HsvLMcVqfdHIC
oPN2VbSxxF+d56wtcFfm2FB5vy5ZX+TBQxA8hEZZHhUWkGtllrG5xP2wKQZt
rvDWFtkri+y1Ze7iHGN1iTM/R2ez+idoXUx2f1dPeULiSyPjexcunD969PCp
UydOnz4JlTNnwPrdfPDgHtr9BCoIYdeuXT127MjfhNe2PIdfBC9AFtAKahi8
PvELhxe2h+++b5UUDwHCDh74Xv/O9eiIVx3NtYM9baSBDgqhB6w9sa8lLe5V
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
M+45ZN13zAZB/fbj1JsPk6Fy1y79zpM0eAgl1KFF3z4dYHfPPknPLvHuk3ij
Z2lg8R48jTV8EmH2JOyeiaeZmfuzpy/c7LxfPPeP9AlJ9PLP8nQu9nHuig8b
L8xoiw5JsrMEcnUmhnYmh6W6WIda67ndPmt1SjnU9m5J0LPwR3qpbpaFgU+b
4327UoI6Yv164l/0JwR3RPm3Rwc2xwYXBHv6WT14rH/jzvkT549oaqspaGoo
a+uoY2nkNdXV1VXBiOnq6gK5jh4+cvLEsRPHDx89onXmzJGbNy8YGt4wNrkZ
Fe5TXBDf1lzU31M9Qe4UcIlC3giIzyGAoCLikyTCMamIPCUZBwGt0JiziEdh
0wmDvY2lxWkJcS893Z9cu35aXWO/ptZBLR05dc0DUB45pnL0mPbhwzqgI0d0
dXS0QACvW7duPHhwD5gFFcSvy5cvwgEqKkp/E144vxDC/l54HcAF5ALB72K7
esKLyu8/d+6Yq6t9TmZSdUV+b2fdcH8zoa9pZKClv7N2gtRdXZxRWZg21FVL
6KnnTQzSR7raawtHehp4lP7uxtKUqGAfl8ev/F06Gkq51EEgFyBsY0kIHVRW
ymtbixsOdg/iIr3CX7s6PjV4aH37sZV+oI9DSV4C8KuztbKhpqAoLzkp7lVI
kI/BvZta6koH930DzPrzn/7522/+hMUcfhZeu/DrPzFHtut82X8y5H4veO3l
yLbBa1uw/dacG9gQ4rd/UlQ6eEjuO4AXlCirIZT4uB8+54VT7PPw2sYv2ngn
CNu7RCYGtRsJteMsQ3SbkBFqK7wAW9gOpCPN8BAaGeOdLCqWzPDvhtenJIS0
baWQhbbuosrgRQF4MchDQC4yaYA2TpTBC+u6gV8yeNFl8GLL4MWSYeuTeAyM
OzJh0JFpK3SAXBi8gFwy4cdsEwAICU649Zx8Fm1X8ZhULmOCTaOwqGTG+CiN
PEIdI06MEqiUkQkycXyMAII6k0bmsWlCHuAJwCSYnRLNz0gWZqW4AEzzM6Ll
hcmN1bk36wugzbV5qL/bXHq7sYiEt6+vz799t/b+w8Z7LGXGMpgsIBcwC8r/
l733jmory/c935r7uivb5UzOzi67gsuR5IDBxgGbLAkhkXPOUSAQEsogcs45
5wxCRJFzxqGq+3bfe/vNmjXz1nozf7z5nbNtFUVwlftV9/Rd02d9vNfWPlsg
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
XN7bVd1Qm1Nbnt7fWTnUV1dRlJwtSqgpSe9pqexqKs9L4fDjI1I59JhgLxei
qZcD0Y1i4Uq1cLY183OzLc0WzMLn897GghRWoCvRk2rqQjR2sDS0t3jgRjB2
tX5EMb33zPCWA9kE5FWQxU1LTmDGhQT4OJKsnsCHihNHP4PYdezLz/aV105t
7WSPv/6x5PWetRllEzagIpOXnDx86vgSPldAqaB4TEX1FLaA4Y6VoHbN1th5
/9e+U+V33uo1MNA2MNCyt+zrA5r2lpKB9kHo09vS19PQ29XY213f193U39sI
dWhBdTgLphP3teJ0DvZ3yQbl0LgcMD4iBqSjgxMgFOnw9MTIzOQosDQ3LQPk
ImNmYmxuSgrGgXYoQUATo0OQlUZHhkZGhkZHh8fGRsbHR8fxfdyBoaHB4WEJ
NE5OSmdnpxcX51dWllZXl//w4xvgxx9eI3548wrxxz/8gNrf4HPEX25vbm1i
+9DDe/m+HDQS+Gp9G2Pt1a8pX2Ijha8wc228wty0+Xp7+9X21hsooY5adpWY
vPYDQtm+rK2tQKSDCngP6pDt3rx5NTDQl5KS3NbWAnU4Cz8WaF9eXsSmZ2yv
LK5MLyzPLK7Mzi5NL60vbL9e3365AvJKS2GlCeOrikVNZWmNJUkN+ZzKFFol
P6I5nT5YliStzxKXiSoEEUkRzgl+tqEOz4McTLzJj1wJhu6kh952z0I9iPQQ
J3a0t4gVnCeILEwKr0qLbs1n9pQJespT2kuzm8pLGXSeGdHroVWoASlex5qt
b5v6k7neaQsn+TZJqG0jQGD+suUD7+TF14FGG542iY/b6mcl7izsrC5+yQwz
F5l3j5p83w78JTKgCu/b8h4QGc9s6QQKzZ4a7Er2CrZz5/n6F8XQGlnx/byE
UT5zMDGmKdK/wt+1KtC9mebflRBWG+bZzY7o5UaJhbFDqXE1UR5NcX51sd6t
bGySfDs/tCc5sj81qic5vC3Rvy7WvS7WszrGqyLKszDYOcObmuRCYlEt48jm
ST5OAm8nhgslwPK5g5GBpY620bdXb5+78LW61gUVtYsapy+ePXdO6/TZM1og
kbNnT1+5fOHG9e++vnJRRVle7tQxRYWTUNFQV1ZXU1KQPyEvd1xZSQ6AupLi
KU0NFWWFE0rw/g+WgTd/+eNKiifx20jl1TWU1DTfovIOqCspy4G5kLwgW0FF
S0sDvjUaRUQjiiiXQQc8eWESQcCbFVpRAUD1Pew/HfHAaYo4SF5gMUUVTF7w
9ghfH94eobx584qLC5nJjAJ5FRemtjSV9nZV1lSm1VakDnRXDPbU1JSlleYK
GytzJN0NQz2NoC0XsrmXvU2Qu6OPvY2vM5li8Rjk5UR6YWf11NeZKGCEJTHC
ov2dPW1fAM6WRhSTO3Yv7jmaGtg/v0d9fteR+Cw80DlVEFuYzctIYcXHBLo4
WJs8viN34tCXX/weyevQF58AoDB8qjxo6/eIQ4c/Qhz+8mNA9lDW4fMvfvfz
FPaL/KPI66OPfgff9PgJ0NYR+KdB8oJfCSXlE2hJ3p1rG+5dIWrnFHo0i37f
OfO4kvahv791X0YkXUPiDtAT2KqnswHAtNXdhOjvaYZTSFuD/W2D/R1DA73D
4r5RyYB0RDI1PgLSWZiZBPsgoA5ADkKAntBDqEDPaekoPGVybBg8hYb7sOkN
g/1o3E/S3zPQ3z2OOwsMNTMzNT8/u7S0AJLC9pJ/9+6N3ts3N9cRr19tAzI9
YVv3vrvqhID6Ojx9bWUN343+p+tTS0vA+uIi4gCprW+DH3412MUlbPklDMxN
m6/BYoj1te19WEeDih8gLwDEhLQFdewn8PqlWNwfFxdbVVUBjSAvOPvyJaTG
JSzBQeBanZlfmp5bnAJ5rePjh/NLk+3t9XU1BV1tVdOj7VPixoHmouaSJGwY
MDG0NYs5Xpc92148WpdVmxYvjHCNcLPws31KeabjaHHP18E0wNkiOsCOG+vD
jPYK9bOLCnZmRLmLmH4lKRGthayeCmFPVVpTYXpdSVEcnW1K8DS0CLxHoIO8
7vzsItdbbeGBS3CbxEdok3kAkhfmL1CSTbIOKQnQJgp3gdqhA0LPRmhATTa0
TzZ0TDNySocS6g+okLyY5o4sinOcm3OEt71vmL0ry909xdsj29u1PjywKza8
Jy68NTKgJtizIdy3gx7cy4wYFtL72JHt9MBmml9jtFdlsNNWVeZCUdJssXCq
SCAtYI/mMsXptE5BSD3Dq5LmUklzK4t0zgugpnkQ01wJGe7kTHdqiislxdM+
P8y3LDasICokLSSQ7ekZRLKhGj+5rnUO5HVeTfOC1hktDU0tLa3zF89d/OrC
jRvXdHVuf/v1N6oqSgpy8orw55Sc3KkT6qpqqK6kiO96KX9KWRGbu4jdB60i
r6qCTcxDgLwwf6kryFDaARotRKvEo825QFuQuZC80J3LcAq6QfluzPDXy+sY
mpf4K0EzNBRU5aGC5KWgfFJO/gi8JcKbv7LKyXv3bvr4OIG8+Pz43GxBfW1B
S2NBbVV6W2MeyKu9sbCuIqOrqRRftKdjYWKgriQ7zMfZ24Ec7OEU4Ex1JVs5
El94OFiDwqye3rd8csfb0drX0dqFZOJGeuZuYwLaIjy6bWOsY214k2h0C8JX
mI+DkB1ZnCsozU/KSmNHhXmZP39w8/sLx498euiz/yqT15eHP8PX5v09Hqx+
MhfS1k72+OuD5PXR31peB30dNKERzTOEikxeh7/8FF3wOnrss2PHPz9x8hBa
JwpAvyHwb4f2pkQT6XeteSizGLoEtuuyV3d3876IxZ37gu5FGhJDkuqUAQ9H
JD3oBiVsEsVIv3R0AAH2mRofm5mQzk2BpyBPzS7Pz60szM9OTgDYLuw409Jx
BLoOtRdwGRgNXYeSMTc7iW1ZiG9WuLq6io24QYzBjx9//BFdS0IXktbW1tCG
8msrqwi01zy862/gC0qsLq8Ae0+hYcBX65sgpq2Vtc3l1Y2llfXFZcxT+7G1
vLW1vP0r2QSlbIC23mxuvN5YfwWsr71cW90GoLIf2xsbWxv7HQdcI8N8DZkL
xASSgjpoDjwlkYiDggIKCvJAZ/AQSqSw7ZfrG9tLa5tzK+tzC8tTi2vzW282
ltfm+8Qd/f3t4v7m5fmRf/th4Y9bkxvTvaMdpXU5rJrk2K58/mhNtrQhf6wu
t7skpYATzvC3C3G2tH5408f+RRo7PIsfXVeaMtZf19VcXFacwqAHeDmbh3oR
MtkBdXmMqgx6Nju0oSi1pqiAFp1gYuVuaBV03yb+tjUbm1WII7u8hYYK38rL
hgsgeWmTOTq2XExeoCSSSJeYDOgQkmSgFgR0APRtUvTJogd2IiOHZEOnFCPn
VCgN7ZMMKFxDG4alI5PiGOtiH+xN9Yp0cGF7uIk8ndJdqaXeLg1BXm1Rge3R
QZ0xIWCx3viwnrjQvoSwLkaIODFyTMSYymBNZyYu5PGHk2On8rgTeZzxHGZ/
Kq2F7V8R45IfQs7yt66iu5VGOGX52KS6WGV7kCtCPevAhpH+WR52FVGBzez4
Zi6znsuuSGSmh0fS3TzvXPrmW80zl9RPXzx99rSm1tmzZ6988/XVa98bYPcK
37/67ff4lApsYQ4VJVWwFirlT2GrNGH6koM/ymoqqhDKNNSV1FQVQFuK4Bq5
Y/h8sMPKavIyFHcAqQq/3QyTFBo5hBZNTYhbyuhONGhB+55A5eSpowfJ62BO
/XrQRS5MXhC4FI8rqcrJ5PXl0Y/OnFN+/twwNNQ7MTGKx4sFeTXWFzXUZlVX
poC8etpLWuryOpuL0UKsva1VkLy6GsrTuHGhXi6+ThQPMpFs+sSdauXpSLA1
NwZ/UcyMAl1tfOws3UjPXayM3YlP7UzugrlsH+ta3Pve4emdhEBnXlxIUQ6/
oiglL4Mt5Mb4eFD0tb/RVD1+4uhnhz//HcjryCEsdh09gi0a/MXnaLRwd+ba
Ky+Zv/6zyAs5S1b5+OPff/HFZydOHkFJE/1NQWFHjn6Krn/tdBlaNgpZDJUq
qqeQy3YtOy9bTx6A9s6O5s7Oxr2lZLBXIuneXQ72DvR3DYp7sMl4+IgfNtlv
dHB0RDyLz/Sbwyf7LeCz+xbnJhfmp0FVYKrF2bm52en56ZmZ6cnZyampSamk
f0A8AAFKLBkcGJUMjQxLxodHRkeGpCPDEKbAYtATM93SwsbKMuSgzdUVyERY
Jnm59cPL7TevX0KJxSh8qsPLly9BUvgloZ+9jaM3dpAXfs1oC/ogSe1lp7CQ
zhDrcGp5ZWNlFdhcXQO21taBlxub+7C+/Wrj9QexjQeuX8+Hygv/kawtLy9C
4JKNHA4NDXp6umdnZ4LUkLzgLKaw15v4VI0VUBg4C0z8+setufnJhoYKiNtj
Q52v1qf/r3/b/u9/3vjf38xvTfWK63Ibs9hdBYLe4pS+ktSh2tyR+vzGHE5K
rH+4G8H2xV1ujH9bbR62Dk913uayFFtzeHlsZLSzoTYnmRMW4kMMcjPjx3rX
5PPrSzPLi/JCwmnGls5G1sGGFKY2gQNZCZfX2wtbsnFCsNUtEgfJC0CzL7AJ
GGQ+LqZUXWIK8JO84OugzIXFLhFCj4zJ6y5VcM9OcB+c5ZAMJXYHNDHhgRXN
khJDJoc4WLt5WdtF2zmJfD2LQnxLgz2rgj0gbbXHhvQn0oYFjBFhwmBidDc9
ZIAZOciOErOiuuhB3XHBsxmcnviQxXzBgCC6P5nWlxTdzg6pjvEqDnPID6bm
h9iWRToWBlJSXEyFdiY5HuT6KP+OBFo7I7ou2r+TE90jZLYkxtUwYysS4jOj
Ipnefo+u37x54auvz164cuEytlLUpctXb9zU0dU3NTV/Yvz0+++ugWRAWFoa
p0E1ivIKIBPcJwoIqEM2gnR24viXJ098KXcKjRmeUlY6paQsp6R8CtsKE8z1
rlREdVUFNXUlNDwItkKGAovBQ1RCo5zcyZMnj6MFDOGT9t9UXtgaGoonlVSw
5CWTFxqMOnHq82+/PUcmm8XGBvH59GRhfFFBSntzOQirolhYW5bWVp/f3VIC
5pIOtrbVFTZV5TdXF3Q3VlQXZsSH+/k42nrZ2ziTLGwtnrg7WrtSLSB/2Zga
utqauto893GwsjMzdLZ+DMmL+vyuw4v7kLx8bJ6VpDByRPG15ZllBclCXnRs
lB/V5vm3lzVPHf9M7sQh0BaaagjyOnb0y+PHjmBXvg59vNdcKJvs668PHjY8
YOTwl+7/+nRXiZbZkLXgkzE+Qdt4fZC80N8X8heuLTRn/m2Jy+tLXF7YbwIa
voaPUqfkjsrJY0PK8GsJLapq8EuoiN3EpyqPRgmwu9GV4ff2VH1DdWNTTXNL
fXtHU3dPO772Xe+gpHd4RDw8MjAyOjg2LpFOjExMjqBZfPgY3eTC3Dy2re38
wvT09NzMLGQfqM/Nzc1MTU9MTEjHoNs4KuGtanh4eHBA0tfX19vd19PT09fT
D3WJeAiO0eExqVQ6MzU7Pz+/vIhtlbuJC2dviQ3ygYM2NvE5d1iMAuNA/zlw
4/ziwsLSzuy1tfUSn/awL/sfawccSGp7kWluFwfMcIfXvbUvuIz24UNf/0EH
/NPAzwWfE4I9F/QNf6mxsTF/f38OhwM/QMxtoLSVFfgAAC5bXl3YeoUtu4Gt
ubG6AB9FIFZXl+f1tNZuzI//n39++T/+7eX//efN//HH9T+vjC+Km8cai/NZ
oRmxAXXpzIHKzKm2MkltfgEvmuZFCXQmZAriGsrzslO4VeUF8HlmaXl2bWN2
+9XC5ubs0GBrfg6PQfOjhbnFx/qnpybmFWZxRGlkj1A9Uy8ds8jblqyvn8bp
koXgqRuExJtENhoe1CZxb1ozgVsEFnAbn/qOzY0n8XRJAqQtZK7bBMEtAvcW
gQ2dsVkctvhERFs+rkIU5YT37Hh3qVx9W4AHGNryn1I5lpQEO9sob2pICMUr
2IocZWnFdaDk+3tWRQRU0wLbEyMHkhk93JguVtSoiDWVzpPw4prD/UBh/QlR
fYzwnoRwMQfUFjecFDeQFNXFC21mBFVHeZcEuxT4O+T72OX7Uov8bcuC7fN9
SOnOFiUBTn1cxohI2MtO6GNH9XAiB4TxdfSQvBDfWn5ibnyMrfEj7cuXdb+7
rntD+4mxiY7uXW39e3r3Hphbk7w9fV48eX71yndn1E9rqKie1dQ6p3VaTUlR
RUEe5xSG4kmEEgZuAchQPy+xzZohkeElNjFeAwtWGpoqb3fJ3IOyCryTyOPi
w/gpHGGTNI7t1BaY5b3I7ctB8pJNyIc+GprK8IYmL39EWfmEvPxhYyO9QH/n
RGZEqoiZkcLKy+I3Vuc2VeT0NpaKWyv7m8t7m8slnfVjfS1Ac2V+a3VhQ1lO
fiqHEeXv40x2IL6gWj1zcyK4OxN9PMk2BGNXe3M70lMH0jNTY10H4mOb5/dc
iMZO1g+f3/mWYnKHG+lVlMooyEwsKRRmpCZER3jCE1+Y3LuC7dP2yZFDHx0+
hF3nQhuFHHp7fC4bNtzFwSOH2LKH6Oblw19+JuNDJ3JgKyW+BxDQz0tMebgH
Ucunn/0esxiUB4C+zt6lGvFXvk959Ngh3GK7ykO/uDkp6nbk6BdA/0D3gLhn
UNI3NDwwOoY8NSqbcL6bqQkwFJLF4uIylOCOWcw8i+PjE8PDo319A52d3R0d
XeCowcGh0dHxoaGRkREw1CS+c/s86g8c9EaNDeztx9LSCgCGQsjakbzwjeLf
ygu+IPjrt5LXgVL7wK+zb1x6z/GhkjrowEZK19aQuZDFoAIfGPz8/LhcLpxF
7XBAgIXPI8urS2tvZ9cvbq4tri5MgbbKclPaa0umBtpfL4z9ZWv2//nT5v/8
P/74P//y5r+/nN8a6WjLTyoTxNamsToKk8abiqTNpc25gnxebFJcaH1RZm9L
bWFORnV5yezsNMhxfml6cWV6dW1uZWVqcnygsb6Ykxjl5WXn7mkXSgsNpcfb
+UU/tYt8SE24S+JeM2NiswRt2IhbpEQATXd/ay4CS/udvPRJPD0b4bvYlQxp
6zaRh7rdIjJ1qWwMCleXwtOlCLQpSdoUEVTu2vPu2LH1qdhiHfds+UZkrolN
ghUximrpF2wXyHTxZ9k50i0t4ixfJNnbZPs4l0Z4NSSE9ibFD6YwJSLmVLZw
Nks4yKW3RweJWbQxQQKAEhkWyvixYK5WTlAjviRURah3WbBnWaBbWZBLeaBD
RahjcQClwMe2NsJXLEwcFiX3cJgjqUxpJns8k9PCji6NCSlNiI1xddS/fEnn
m28e33tAMLe2tCCamVu/sLAmU52c3b0C/AKfPzb5+uIVLTV1kNdpdY0zGuq4
vH6mLRXF44ASSjr46N8uQApohBCBFtPARgs/TF4nZfKSZavfVl7K+DU4VFfX
UIKP5YqKx1RUTmqonjQ1MYwI8xLyY3MzeWCuonxhc22+uKVa3FzV31jRU1/W
11gx1F432tU40tPU3VgO8qrIS0nj0unhPoGedl5ORA8ngouDlbsrKSjA0dHe
jGLz9KmxNsHsAdnqEdXqIcn0vq3pPeCx3hWwGC/GtzCVkSmKy8lkJfFpEaFu
DnbmBveua6nLHTn0O9xcn/zcXF/Cnw+X1yd/D3ntYdcT36OtXyGvfUAO2svb
/bX3cOzYEdmu2WinSwB8BExPT85A/pmdhvA0Pz+7sDC3uAhKmIcKPIRGOAUd
oBsWshaxvCOLPGCiyclpsVjS3y8GZ3V394LCQGTQCH3+8Id//dd//fOf//zv
//7vf/mP//hvUEL9T3/6tzdvfnz9+odXr97gM+i2wDtgn5162gV8L/TtUB/o
D0IAoAWZVNaI/PVPee084AuCp+Bnh+4jm5qa8vHx4fF4SFvws4NX+Pr166Wl
BfhHmF+cef1mE1LS9sby1up8TWluVhIri8coSuHUZie1F2eMNJTO99QvdNdP
tpZPNpU2pCXmxQdlx/qXsCO6S1ImWsoGa/I6S7PK07id1UXitoaKwuy6yrKZ
Ceny0gK2jv2cdGp6DIIYyHFlcaqrvS4zU+Af6Obs5UxwcDKheJo4RD535hhR
BBC+blglgLYgNGmTIX8xr1snQJLSJfOhBLQJHB0iF9BF5kIXvGxSdUjJ2AwN
Eh9Mh+QFesLAV+HQpwj1KMnYYh2UZH07/h077l17wV2qwIDCN7JhPiXQLC2C
nK19/CydoohUli2Fb2cjtCOI7EkpTqQsb7vcAIfKaO9WZmi/IHYymzebxR/k
xvQnREwkMxezhUs5SdAylc4ZSWb082lticFNzECQVy3NtybSvzrCrybcpybC
q9DXrsiPCpQEOTXEBHdxGJ2JiY2xtH4BA4t1yQnNPHpuZEAEhWR9/86Da9cs
jY3dHZ3jaXF+fgFBwaF+QcFxTDY9jhESEmb88NHZ02fUVFQxQECQTZQUIGH9
HBS7Th4kLzQrA9hlsb9OXr/aXB8sLyUlBXhV8K2xFKamAIC51NWxO9qszB9H
R/omCehgLgj1Bbn8hqqcnqaKjuqitsqCzvpScXvtaG+zdKBtcrADaKsrzhAy
ooM9fFxs3O2x27s8nYmuTpZODuaQvNxdrCF5WT6/RzQ3oBKNrU3uWD7VM310
2+KJrqXxbVqAQ4EoriqPL+JFJQtiWPGhwf7OBKvH336tdfzIx4c++98Okhce
PT7ay4fKa+cq9L+GfzR5oei0F5DUvuzSFtovDKyExCQDDAWAsxBgLiQvBBgE
bDU1NQOgDAWZC8wF2oJybEw6MzMHfkESAf74xz/98MMfQFIoDcnkgpQEPVGC
Q24C2YGA9mVn5pJJCoCnA8hoO08hte3Hb3N8qLw+VDe/1etEtlrHxw8XFhbQ
FcCZmRlvb2+QFxhtp7ywGwrWFkEuIK+FhYlXW8vb63N5qdxUTmwai5bBjMpm
RhZyokt5seW8mDJ2dDEzrCGFBc7KjPIRhbhl0/wa0pgDZZn9FVnNucJ8TkxF
uqCpNLciN7O5umJGOro0B79q0oXFmfm5Gen46MzE2PrK/OYafEaaaGyqEqYm
uQcGm9l5PiT637cKv09MMKQmYcODpEQwFyjsJpEF/sKcRcIGAyGUIXnh5uKD
vPA5hOiSVrKOjQC6YTcmkzB53cEkhS2EiJOEI9KnivSofH27twskPiBzHhEZ
zy3Drcy8vUnePi9IYS9MeVRSoa9bZZhPVbhvVaRPWYRHToBdrr99eZhbKyNk
JDVhOoM7khQH5lrKFW6VZK6VpC3mJU9nccdSmAOCmHZ2SDMrqJkR3EAPqosO
BH+BvKrDPXM9yTlepAI/SlWkVzMzsi0xvj6OXh4R3s5l1DIiymJDC2jB0XYk
wysXDb//LtzTIz48IonDK8zNSxWlwCFIEmZmZ2VkZYaFhRk+uA/aUlFWVAfX
KCuCuXDkdvDTw33NBSjj8+GV380tlFkMSeog9soL3XK101zKKiffi9z7v/Ju
qSnKY5Pz1bAVgOG5IC8w15kzSrdvXLGnmsfS/LHklcUBeRUXJDXV5LXWFjVV
5LVUFfS1VUPgGu1vAXlNDXfNjfe11BRy48O8nUmONi9cKOaQvHzdbUBbfj7U
QD97Tzeim4MFhfAY5GXxTM/G4oHVM33wF1gszIucL4prq8ysK0oRJEawmaGx
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
ifu9ZcJ1M9odswgT6xB7cmCArVeoNSnK9EnMs/scS8MMhxd5blbJdqbxloZ8
h+c0C32G9f08P5smuncXO3iAFw7MZLEW8rizuWCu2D5+eJ8gYiApqj+Z1s4P
b+NFQPKqjwuuCvct8nfNcrdNdbJKsjdNcrZI9yLnhrgXRIVkhocmuvuE2NhR
H5lQn74gPHx2/4b2g9t3wnxCSvJLS4srCiF4FRYXFhbCg6LC3Py8zJzstNzc
VIK12bfffaWgeAJfJUMZuxr1NjShQ/UtSuoYyqqKior7ygvNdUc3hv3MYh8o
L2VsTsUJQAWchaOqeup94HdM70V2D/Vu3l50k0ezNbCNNjTkbt362tPdNp4e
JODFiJLokLzKipNrKjM620pbm4o728p7Oqt6u6r7e2rFffUgL0lvfV9H1WBP
3XB/I1Zvq2yvL2qqygWRtTcWivgRDraPgSBv22RORGy4u5ezpflTXchfhBcG
UUGuFXnJ1YWpqRyaiBMdH+0fRwv0dCUb3rtx7rTSyWOfHj38sdyJQz+Tl0xh
mID+/yWvgwLdgVJ756b3gG22grPLTfCZfBo/pvADNWKz36XScfwA74yNQX1i
dHS8tbW9vLyyo6NLlphkDkIjgQC6XAUPUQc0swL6g/7AYhCd0CgieiLS377s
/PrQbefwoMxfO4cT/ykvdBw0VT4wMDA+Ph6iNLo5bnZ2Fv8hrIC83vywNT01
trwwub0+11iRn5+cON5ZM9lWOdNaNt1YOFOXC+baaC3abC5crMuers1aaCka
r0gHFpuLQGE1nPBGIW24JLU/P6WIEcX0dBKEBHQUF6wOSV7Nzi1MQWBexPaf
mVqZlS5Ojc3MTszNzy7MTE2DvIakUrF0ZmR2c2DqVVHDBE3QoGceBv7SJ9H1
iLHaVrRbFlE6VnR890kmoI/PM8T2QLHl3bF9tysKlYdt74XLCwOX1y1rJqBt
hUgEdCw4t6w4t8hJVwnsb83irj6P1H8R8sI6yIUSHObgE25NYBLN+cQnfMsH
SUTDNIfnma5W6e5WOX62XPsnSY4mFRHOnYlB4KmhpOjhZJo0NW4qizmRwRAn
RXVxQrp4od38sE5+RAsnrJEd1sgMq6OHVIb7F/q5ZLpRUhwt01yt0zyIIm9b
obc918uV7uzk+cLS4s6jp7pGBjfvEZ+TXCjuZCsHf5/wrIzi4uLqjOyCktLK
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
ES1Gub4unJ6eFQpF+nidaEL8yXjpy/UOvF6cs52H2q+Jnb4y5+F13uv8BLxO
sHUmXqjnCzI24DU9PY36ueDD4SeG8Dp6+erwFdQLqKOXL55jdfzi5eHM7ASz
mV5TXdZArayuKMzNTk9LjCZHBgb7uJFD/TLjyaXZj+qLnlKLc6vzsipyMtKi
IyP8PeDdqZvb/YeOt27etbnjeNMp0NmB4oV7FBqQG+OYEOAY6xf4hMIYaxe+
0oiO1JJnKvm+BvxCPsF/d9QawAtKa5r2fi/wSa2BQuM2NHK1XCRTiJXbyp0d
1a5KsSWWSoQy2eqmZFWsXJXtdo2tpeU1ugZlehCLnYKLnCOqXUlNEKweRjY7
RnEdyTx7Mgfh5UBkg1xOkTz7SM5DIssljv8Qm5G+CUeu9Y+pCaJUBEfkF+Qy
2fXcxzGJ8SHhufHxpWkJtZlJzIJHvJKM9rJHQ/W5U82lc6yKBU7VKrd2mVM7
31y+zCqDWmJh3WEj9Iqu2gpudXVTRX3+k/Kk5GJCdHFQTGVAHN03juWbxPdP
a/NNEfhgfrX7PWqHvXeqwDuJ557Y4pPMxydwvBK5HklcXAy2pKZ7HNuV0oSL
hYRIdSRWORNKnCPyHwakXXcIvWLncMn0hoGpNQpf2C1fxpdMjb+EumZ+BTUP
Iqp0dWazoY2tBeBla2umw0vn18+Fl04uHV76cv3Alp0FVtfNb964evtrc7zb
nfzclEZ6aWc7o6u9cWK0bXq0fWasDQ3VWJnFpoESrQxJhWObwlGFfAZKuDGy
vjIItTDbNT7E4bHKmqi59VWPS/MSHiWGpMUHQQqrKEjs4lWP9zOGumj97XUD
nfSJQfaStvlxtJ/b39nM59TXVeWlJhLxLnesrhlC8jIy+rOh4WcGBp/q0EEA
nSBJh9E78DrTry8ufHpm/f8eL325PgQvCF8Ir22sm+FHfp3GC2ACvCYnp9E8
G2fOJYWWV/4JeJ2Q658IL32/9KH5pfE6LRf6vvTxevn2fi7Aa3Z2FvCCF3k3
Xlq/jqGmZ8aZrMa6+ioOuwmKRqssKnyamhQb5OsZ5udNCPQjBgeQggOjggKI
gf6RAX6B7jj7u7fu3r7hhnP08fdwcnf8+v5Ni/s2LnEB9gm+TklBjomBd8me
D2N946qzm0bbxK+2Jc+3lEc76mc7W/vb2IjDnd3dnS19vLRyvcELG9wBJ2Qq
qVACeIFcu+o9hUwpV8rgUqlStS6WCZW7E0vSglqBR0SWV2SRU0gB4IWLanIi
MBwimM5ELvgFctmTmY4ktkMUC/ByILaAXA+iWG7JrfcpDS5xTW7Rdb4x1d6R
RT5BT3JyGjgNgoLUzMfRMcWpyeVpidTsZEHZk67q7P6arKHa7JH6pxO0vAVm
xTq/fp1PW2JXrfNqljgV04zyscbKfnp1a20NvayqrKAm83F1TFJFSAw2k5Vf
IguE8k7p8H3U7Zkk8Erh+6S2+6a3+aZ1AF4eiRhb3iltQBg865nMc4vluMWx
8PFcl5jm+4T6+4S6++FV90JLHMIKHUJz7nrGWd/3v3D11qWrtoamlsYmpljz
oPGlq0YYXldNjU5kLlRnd3uBXHp42VqZ/nJ46Xq7EF46tn6Qy87i1o1r9+5Y
Ozy87u/rVFmezWqu6u5kdLY1AF6j/ZzJYf7CVNfqQi82geFiPyQvhXhSo16Q
K2c31ofn57pWlvtl0im5ZAoIm59q18hnJRujDFre45RwauXj8QH23Lhgfb5H
IRyZG+POjnNBLvALjf2YHG4VcOvqq/OL89Pjo0Od7W+am16E5GVmdunKlQvg
F4iDOqr05fpYvE77pb3t638cXrrWwnfjtbCwBNEJ2AKVwCxED9ab8BavE6Wz
DC5Tq7fm5xfn5haUSjV6Sn+CXxS79CH7kFuYP3BGRD3sfsr2s4P13u30yMPT
wwL1tw/B68R2nl/Pnz9/rR2qgc7A/vDwcGFhYXFxEX4UcP74+Bg9+/q7bw9f
PMfuHH5+jOrg+OjwGJvsfWxitKmZTmuoa23j8vjsZiadzWFwW5iVpUXZGWmk
iFBvvCvO/gEU3uEh3tnB1eGBjwcuNCTgSXZGazuP3comxZOsH3z1dZDTvWhv
9wwi1INY/wfRfm6Joe7J4fz5waU9ydZ3z1TH24p91bMXB8cvjra3NWKRcFsl
Pz7Yff5sbx/eXikV2yolcLatUm8pVVsKDRTkL1RKuUIq25SppRsS4aZcvrAu
ke085/XNRaaUQvhyJ5Q4hpQ5hNS4R3OdiZz7IQxnMtee1OwQrb1/mcRwo3Dd
YvnA2TfhNEfINckc1/hGfHy9b3ytd1QhIbasqITFpnPpxWXF6elPY8k5pNCi
+DBGThzINULNGal9MlqXPUXLX2guX+FUL7FrFphY59cUq3q4oWKQQe1vZvCp
TWV51SnJhcSYosCoYm9SlX8iC0tYaZ0eKZ2eqd0eyW2eKa3w0Ce9wye9yyu1
Dc7gE3n4RIFHssAtnvcwqvEBsckpmukcw3EgMx4QG+4RaHcj6u4TahyJlU4R
hQ7Bjx/6JWKdX2Zf/dnA/LKxmQlkLxMtNGbGlw0unDlUHmUx/TgGfllamdnZ
WtjZven2ArOwdUnMDLGJds/B60TPF9LqHXVe8jp9HnvKxvTWTfOH920jQvGl
RelcdnW7gDbQxZwebYVwBPvFqY7lma612R7hYp9sfUQlnlxe6tsUj4NfYukk
ELa+NiQWjQNhe9srW6qFjeUBSGGjA6yl2S7Z5rhaNr0y23WwtbCvmd9Y6lmc
ap8a5SIWRwZ5bXxqI7XkaXaiv6+znY2x8eXPLn7xCfiF6vLFP0IZfPkHVOih
7sylC79H9d4+rxN13u3M56z/9cl5Ny+fh8h56JyH3cfevHwauDP1/INuvcu3
bH1ITU/Prq1tILbQDV+6/q93+KXDC+wDvNDNYqfxQtNx/Gbx+jX9+li8Prhv
7eR2Qq7TeMGmwwuegs8FeKHOLxDw+By8xifHmpobaQ1UfmsLl8tpZjaw2Uw4
6GhvZdBpuU+ySIQIPy9PHw/3YF/fiJDgqIjwpzlPqqoqOFz2inBVopSy+JzI
lFhLt9tGzjduBDl7ZZICc+M9M6Jc4oPtKX6hOQnV3aylHbH69b5oR7YiW5dv
y5+/PHx2sPNsF/KXakuJDcvQKOSAF6QwTC4tXjq5IIUBXnKFWK4SS+UikUy6
JpJKtw87Rpbis6qdAlJxEfkuoSVOodXuZJZzJOthSLNLVIs9qcExuhGbm5fU
6BbNglDjSGF9E1H/ILrRJYnpkkB3i632iCn3jMyPTKiorBb0tPY2lFcCXiWp
iUXxUXmkgOqk8Lbi5I6S5L7y9NG6nNmm0mVO7TKXtsihzTLrR7SBq4tW00al
smoaqorqMx6VkWNLQihl/uQa39hGbEhGeqdXWrdbUodrYjs+AdPKKxWTCwoU
80xphzPuSa3abjg+mOUUzXaJbYGCAwcK6z6x6W4E9V5knQOxximqwplQ5ByW
ZfMw+EvzO58ZWF4yNofwdcXEyPyK0bWrEMEMTk69e9b4wzeJzNxEf8CG/mjD
D8HrvXK9A68TnV9v8td1c8DL0f4GmehTVZ4FUQhi10AXY2pEMDHEmxkXLE13
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
S8jhcnK4khysIvor8V5KrEqOc/ckqH0J7gHSyJTE8s7kil7fxHJFWDbfW5uQ
35pS2quvHi5pXwpKbpIFF+Y1LZV3r0bmPE6umM6on8v5dIarJ71+Rlc2oomv
FgUXKKPKPRPq/VNao/KHQDe/lE7wKyC9PzJ/zCu5l+pV5CrPpHgWsgOqUL8g
LJ9ylk8pFC6KRz7VA5wqpHvkkeSZIBdemkaQpTM0OUzPXHFohSq6URPf6pPY
pU5oU8W0emg7oXxBVIl9qsR+ZeJjiCIJtv0qbZfhurBeZDKhbkhg8EuYOCTW
9sm17cqoSp+oouiEwkx9SWt1C7St5ccDy72dK72dz7qaltuql1sqFurzR4p0
A7mxLWlhxZHe0XKWgojhYu1oDpZOpj/hHBCwgLBb/boVL9gKBJTISN+igtSG
uqL21ore7ronw61zM/0vn48vLwxPP2lfmu3fXX96svfscG8ZGhZy5mtjFgI7
8CGYBZDBPvgFB1+/moA6BlleGBztrx3rrxvuqZyfaB/prepoyM5M8q8rSyrL
i0uL93MXUrlkjK3Jd4CX9f3vsTbmf2+8br3+67f49XfC6y6/bpwp+6t43T2c
+Ffw+n2dyzhsCH4BXmZmPzrYW9FpRG8vj5RkbW5OFjQvqF211XUdbd3Pll7A
b+jIaZA7Ohc6TwOCjiIa9+fm5sAvKF+oSiCOcfzw648bb/t3TfC4szH9NaRu
5K5zYXfxdH0IzmjuDZSvfy93UfStDQ7+5ss3p2+uzm7k/OL47Pzo9Ozw5PQA
tvAhHLx6e46uxg/78KfgOHwIOT7Zh6cuLk/gCHJJ+PEe/Cn4I/Cas9NDA177
x0d76CVXBzubkNaGGjGfRsbbc5hYOsmKQbbiMmxVUjw0LxETC80L/HLnE72l
9AAVJ1jNh6TG+TaW6ntbivuaStqqcprKMprL9SV50YW54bn6oPRkn8R4j+hI
RXioLDRIGhmhiozwCPCTSkRkKs2ZTHGkUJxJJNjBUagE9EwWhEojkil4IskN
QiLj0MARNCQInYg2Lx6XKeKypGyWlMmUMBgcEpHHpLE5dBKT5MokOHOIdmzc
Q5rjv5LMrOR4cqiYEamihihIAQqcp8RZKcIoZQ4SGUbmQfcL0+hywvNqo/Mb
I7PrfOMLgpNKw1Oro7MaYrNbozNbU0tGqnpXs2qexhcMlXW9ruxdj8zqTa4c
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
/bjVrzuNO/4114X6R+GF9sob38iJ4TTft+J1W+s8NowWHkFFQsUBbnb3NnZ2
19ECBV3s8s0JdDG0an34+AYIg8Bx+CPwenjx9s4aukI77KPSGVZ93zSs2f76
5GTn+Hj78GAbuWXJ1ur2xqvNtecbq8+qynKFXCKVZMek2VEJ5mw60ryYZDMU
LwHFHiKiOkgZzirwi4v1FRH8xPhAKTFEQYpQUiJUpDAZPkjiGiBz85O5eklc
NSKsio+R8TBiDkbIwTBItnSqM52KIRKd3HCOrm5OWFcnjIsj8AQkoYTBFmXL
2dnRqBUEODOGQHQlkXFUGhHYYrCoNDaVyqJQmGTYITNINMPiG8jIIYvGZdKE
XA6fy2OxODQGncSgYOk4G5KzNQ1jx8PT/KWMICUrTMMO86YHeZN81DiNO85d
yVBp2Aovnoe/KijWOyJN4a/jqePE3snKwGxFYHZgQk1YcqMyJF8WmOMVXQbx
jC31iCpShBaoo0qlQfmSwDxleCnDI9Ujtgaalzy8WhRUxg8oo2vyBIHl0LwY
mjKmZwWE5VXJ8arieiPh+VTzvCp5XuU8TRlXUwx4sT0KIRxVHlupZylSKaJE
PC+eLE0V+Zd4xDRB+XKPa1HEt8gS2qQJbRJtB0Sk7YII4jukuk6Frk0VV+cZ
VxWoLY9MyI+JSUmL11WkJ/eVZT2tz1tpzllrzthqSd9py9hozQK8djsKAK+T
7hLEr3bEL8Brr610q7l0uSZvujxrqipvqDijOjEqyd9LzaYby5eLtSnG+hHI
9SVe9ga8vLwkusTQ4pLUuvr8ro7K/t664aFGwOvl85G5me6Fp72ws/ZiFLL+
8gngtfFyEniC/oVqBTtwBESDwA58CLVrYbp3fKgZnaP4an50vL+5r7UsMzEk
yJMX6iOELeBFx1lhrX+y+PF/mN37nzYPfnAwNXE0NbU3ffQ78Lp1xad/LF5f
+nUXXnedC7sLr7vuuvKPGjZ88OBfAS9oXg72VjbWZm6uzgq5ODQkCMpXfm5e
S1MrlC+oYB3N7YvzS4f7d+KFjh+ieF3b3wO8FhYW1tfX0Yuz0EV3v4LXrX7d
2dCOjiFf+nUdtVuB+435j+CFLIr15d97evzr9uT04g6+rvmG/hCOkW/p5Mgw
uWLHOHJoBAuoQrWCgFxvro5R42AfXoDWNPgjp2d7p6fww98+OtoCp87P9y8v
9y8uDs7Odo6O4LeLtbOj9eP9V3tbz9dfza0sTczPDE2P900+6S7ISeSyXBhU
ez4Hw6LacBm2DLIFlWAKePFpTiAXn2wHWzHdScZ0VrCxap4L9C8vIVQwQrCC
EqwkBUgI3kKsj9jVU+ziIXRR8pwlHCch055Ls2dTHQhuljSKE5PuguDl5oDD
Y/AErBsOg9w3ytnR2LAwcMDJwcHB7jpYgBoaAI5CxoNcDMM6G2wug8Gl0zk0
kIstYIFigBe6+CHgJeAwZSIhh8EE5eDB4bEpPJoTxcUCb2dKsMNKaTg1jxYg
Z4dqmCGetEANxV9D9VFTlQqKREISSjjuPjK/SIl3tMgzxiNIL/VK0QTneYWX
+MVWRqQ2R2W0xeV0pZUNx+V0xGa3RqQ3ZVaNxuX1eMVWxOT1BuvbYwsfeyc2
xRSOhGb1+SZ3yCKqvRPb+AHlAv9qgV8t37cGAmaBXBzvciSaUqhdLI9ihqqQ
rsyjynOQIURpBlmQRJemAF5OtEg7ajhRkiIOLjfg1ayMb1YkNMsSmg2KfYo0
phGOq+MbPGMqA2KKI+LzE+IyEqPiS5IT6/UJAwVJs9Vpr5uzdjtzDrqz9rsy
t7vzd7qLDvtKTwcqzgcqzweqLnorzrsrAa/Dzor9rqrV5uLF2rzFhqLJquyW
jPiCmBB/CYfhZEWwgZ8iMgvdyfKhs80jdNjQyelm8woJVaemRZWVpDXWF3R3
VkHzGhpsmJrsfPFsFPBanOt7/eIJyLW6MmLYjm6vfSpZRrzQGJsXEIaMFj5p
n37SuTgzsDI3PNJd391YmpcaHRfqER+m9vfgaiQMMsYCY3UfvcLL/tF924f3
bR88ALxsTL9twsZdaxX+k+Bl9Ov/Srx+uv8Hk0ffm1vct7I2sbE1d3K2JRJc
GXRysL9PYnxcQkx0dXlFW1NzY21deWHx1JPJzdcb8Ov/2cnl3s4h5HD/BLmG
de/YsADeyf7BjSDv5Kurq9C8nj17trW1hcJ0dPfjLs6+Pmz4ZVDUvgy69tGX
OT87QZf1M66P9Gl9v88X9l7L9cZ0eSOGpSmQGD7B8dnR8blhefYPV2/eXSJ3
eDw/2j/d3z892L3YPzg/PLxCpoW8uTi7PD+9QL9s9Oewu7u9s7O1ub2xsbW6
sbW+tbO+s7e5d7C9ub22vbsBO0cn++eXJ1fvLt7//Objn95++OXy/c8Xbz+c
XVwdnV7sH51u7R9t7h9sXL45ApuMYB0fb54db52fbL+72r+63H1zBvuroNXB
7rPdrcW9jbmNleHX8z1LE23Tg3XDneXt9TlVxYmFWVEhvgIO3c7N+T4ZZ0qn
2DCothAqyYpLc4TwqEhAMUMcBHRHpQAPUfBxSq6bguMq52BlLKyMjZFynSU8
ZzHXScRx5LMceUxksQ42w4lJcwK8SAR7V1dbw1Rq5E5PGKw91sXR0dEegp7k
ArYgwBlsQTFADcwikQg0GoXJpLPZTCaLej2Mz2Fx6EjYNDTwFItJNawfxWLT
aUwqMoTIE7DZIjaBTbanYH9ytnDkETkBSlG0D/hF8pESfCRUXzlWQCGJmSQx
lyIRc901Io8AkXuYQpMg1yRJ1Eky73TviNLQpCb/+Fq/uBogLD6rNaNsQF86
UNb2NLX0sXdChbZsUFc5HJbXHVc2nFo/nVQ56ZfSzvHLp3lkcHwKBL6lIv9y
SWAlRORXyfcuY6uLGKp8ijKXqsqjuedDYIckz8ZLsnCCNIoonSJMZSmzuZ55
FHk6hp9AUumlkZVQrDS6JrW2Xhld5R5T6ZNQB/GMqfKLrQ6IrgiMKAwKz4oK
1ydFpmbG6grj4xpT4wcLk2er9CuNGdsdubudWbsd+qO+3L2B4t3H5fsD5Qf9
5cf9Fcf9Vad9SI67q076ao4M8+e3uyvXOsoX63NHylLrM6KTg5RSsgPR5ie8
3UNXWxOMrYkbxtrJ3gx+Pba1NXVytnZ0trC1f+SMtaBQnKMjfTL1sWVF6XVV
eV3tFUMDjaNDLZNj7dMTnQtP+58tPn6+NAjlax2ZZzj+amV0a3XyZgx4rb+A
Oja7sza38XJ6ZWFkbrJ3dhzJcE9jd3NFQ0VuaW5yvj4+OyU6MkAtoONsH92z
M/3RkPv2ZsgVXvaGqfLIHAzL+781n4YN0btSmlibPURjZfrAuP+XMfD0+eaS
12Nl9sOt+fI1lqbfQ+56/V03u7xrwsa343Xv1vzFKhx/uSLH/Qffo3fvun6d
8tevPjby9OW1zH8xbGhx38z8J1OzH2HH2sbMwdEai3FwdXHyVqsS42N0cbGF
uTnlhYWF2dlpuqS2hqad9e3zI3ibvQC59nePULxQuW7gtXsIOYKqtba2BuUL
8NrY2ECnyv8OvH7LsOF/BK/jowM08C0Z7vm7hwatPH+Z649zdFFi4yUDRryO
0AuqDg5P95G8OTm7Oj39cHb+8eIM8v7s5O3R4ZvDI2SixOGnr+LTV254wK8F
x/BZzg5BqIs3p7A9uzw6OT94//Hq3Yc3kLfvL9+8Pb98ewpBwYKcnO+dnO8c
n21DwK/jU0Srk5MtFKzz082zk43z4/Wzo7XjgxdHO89215+uvXiyMj8wN9U5
PdoyOVQ30pnf35jeVqGtL4yqyossywotSAvKSvYL9GbzGLYEl4dUgjmNbA1+
0Wn2dIodstoG1QElDFGM7oRGLiBAZHy8lIeTcN0gYo6rmIMV81xEXIyQ4yxg
O3FZThymI8jFojvTqc5UsiMRb+fmYoXBIDFcBGQLeAFSgBd6hguFDN1HznDh
3VC5WCwGh8Pi8Tg38DIGChf7M17Gg4AXg0JkUUlsGhn22YYpHDQujcSlmrva
WlMwGCGFrBawQ9y54RpoYa7ubJKKRVNzyXI2GfqFTMaSurOE3jxpkEAWIXHX
Kn3SoX+pAvO4Hsks90RlUE6CvkmX2RSZXJNa1BOX0xaQVJNcNZxaNw54xZYO
JVSMhuX2ySOrKB56kgJZMYOuymZ65LI1+VyvQq5XEVtTwHDPpSmzkYU1ZBkE
qR4nTnMTpbqIUlyFaTghdK50siCFKkmlKfREaRKGG+XMjyYodeqEGr/kxqDU
Rj8dgFUeGF8eHFceEFnsH5wbFJIVHqpPiMzQx+lLkzMaMzM7c9IH8pJnKvUr
DVnrbbkHvQVHffnH/XmXT8oPhiv3h6uOh6shJ0O1p8N1F4NIzgbqzocazgbr
D/tr9vtrt/uqX7QUTlbp2/Nic6M13jw828WcijHDOT5ysTfFYa0wjlY2No9s
DHhB57KxM3F1tebxSInxwVDqaypymuuL+7prRgabx0bapsa7psY7AK+V5SHI
i2fDqy/HAC9oYZuvJ27GMEljd30e/HqxOAp5tTzxfH50ZqxnpL95cqijq6m8
uiizQK9NTwiPDfF2F7FxDpa2j35A5fqEF+oXOoHwt+P1ya+beEGMB/8yn+/I
/EX+q+CFXNf8bXj98PfDy9bOzMLywSPTHyAWlkj5srUxt7Yy5bMZkaFB0Lwy
01KzUlO10dFhAQGF2bn7W3vwZgvvzHs7+/DuDu/06CAhOk9j71p2DpDAA8wC
ucAv4wrz/4R4Xe9cvwp0fHhb2TtH77l5cfEGqhZy/+jji+Oj86PDs8OD073d
Iwg4DvvQ5+CzXhyfX56eQQW7ODlFCUP61+Hh2e7e0c7OwfY+/A6A/iQ/9TXD
YOnV1eXbt4DU2w8/v//w81swC0oWaPXx56vPA4OnZ+eHxyc7h0dbB0fr27sv
d/Ze7e6/3jt4dXC0eni8dnSyDoF6heR8G8w62l/Z3oD/xydeLY8uPe1dmOqa
Gmka7q3qaSlsrtXXlSVVFcXVFERWZAUVpvjk6jTZOq8srWd6nCY51sPHg8Zn
Ime7GGQrCtESAnIxqPYsij3H4NcNwoxmfWYLiYiNEXGxqFxQuwxyObDojlC7
QC4y0R7vZuOK/bQmOVK+MPYoXmjJcnHBQOeCAFsEAg7YolBIaOdC5eLzuXfh
ZexcRryQoUUGhU7Cc+gUPovOYVBpVCIyU5FDY0k4WDrOmuhkgrO1Y+NYfnJl
fCAvXOOiYtH9REw/MdmdixOzyGIRiS8lc+UMvjee6s4SBEk9EtR+aR4BGTKf
FE1YbkJmc37ZoD6nMyaxNjG7PS6rPSK9KalsKKFkKKqgP75kNLZo1De5jR9Y
QlVn0dW5bO9CdN0nsjKT6p7NcM+BAGc0ZRZFnkGSpuPBLH4iBCtIxAmTieJk
niqbK0tnyVKY8hSaTEcUxmA4YfZ0f0lQlmdUYbC2IiShNCimKCSmICymMDwm
PyxED4VLF52RlZhdkVnQVlQyVFU2VVcyVp6xWJ/zqjkX8NrrKzgaKDgdKrya
rD6bqD+daLgYb7icaHwz3gx5P9YCeTPcdPWkBXI23Hgy3HQw1LDeVT7fmPe4
LKUyNSRKzVPSMTyCHcnZ3NXOFO9i7eJsA3hZ2zwCvOwdzQAvMtlJrRZmpEZX
lGQ01RV1tFQ87qt/Mtw6PtoOeE08aVucG4DOBXKBX8iZr1fjkLvwQm+bAnm5
9GRpdgg618Rwx9hg2/jjtuLsxOggz/gwX8BLG+Ev5VANN538m+F1fbb8X50q
fxdet9axW9vZ/x143ZVvwgt+F0LxMnn0vanZfXOLhxbmSLCOdnKxINjfLy0p
MTstLcTPz1OpzExJ2V7bOtpFSgmKF7JjmJ5xF14HBwdbW1srKyuLi4uw3dnZ
QZE6vOPxzcOJd+B1fHh0a74ybIjm5uDhr2B9YgsNyhbsILXr8OzA0ECBLTAL
PoQcI3JdoEOs4BfyQ9vZPdja2d/chhxub5/s7Z0dHBmM+gBMvbt6//7thw/v
Pr5///7Dhw/wAXKzsjfnhm6HVLBTw2XIxyd7Jyc717JlyMbZ2Raa07MNyMnp
uiGrh3vP0VnEr5+PLM30TA43DvVU9neUdjbmtNdntVal1pdoK/OiizNC89P8
c5O8SvUBRak++UleeYmegJc+zkMbJosOEKilBAHLnk2xYVFtqAQLEt4c8GLS
HNgUe2OuKyZkYSEitstfBiNgf5KLxwS27OEzMKiOEBLBjoCzgdrlgrFwcrL4
Ei90bgZKGA7nCmxRqWSQi8GgobWLy2WDX9eR+jK/DicyKSheXAZVxGII2Aw2
nUIiItdBkxkkpoBpuASMYIGzNyc54uUsUZinMNyT6i1mBSshFC8RQc4lyUVk
kZQsULAkXjypv0AezJcE8cSBPEkIRxQkdo/yC9Gn6Jui4sqCwgpCY8r8o4o9
I4q8Y8rdI0r9dA1B6R1+SW3i4HJwiqTIoKpy6B55yIq78jRoYWSlnqbMgFCV
aRCKIpUiSyFJkohiLRqyNJEmSRQoUsXKVJ5cxxBH00VRdFEEnhuIoarxbG+u
IswzIDEwLD0kXB8eoY+NyU7U5uh1eTnJucXp+XW5xZ2lZSM1FbNNVcttlYuN
ea86ita7C7d68vcflxwNlpyNlr1/2ng12/JmtvXdTOv72bYPMx2QP013Qq5G
mt+OtUIuRpvPn7QejzZD+VpqKRyrzWrJjUsPUfpLKFI6loa1dIGS5YysJG9r
awp+OTpb2DmYQjgcQliYV25mQm1lbltTWVdb1WB/A+AFmXjSMTbSAnhB1QK2
ni8NouVrw3Cd8q14PZ8ffrU8trYyCXg9negbH2p/8rgVtu31JTEhnjIuxVcl
jAv1CfVRsohY0+//598crxt+/bPhdedaiN+K2jfjdfuw4d8EL1Pz75GY/Qh+
PTS598iwSBSUL7OHP7k6O0gE3PjoiFy9HuQScTjQv57NL++sb+/vHuxu78EW
8EInxn8FLwDr5cuX8/PzUL7QkcOvPL5Sym593NWw7sLrequ6HuOw4V+MHO4f
fFp5GGoTuv2ci/O3kPOzq7PTN6cnl8bydXp2BQXr+OTy8Oj8YP8URNtFTg7u
w48L+Ylt7QFhJweH0MLeXb75cPX24/uf37/75f37j+/eIXephn6F3oHl3HC/
SMMyxnv7B9vwszRcSrx3cQrZgVyeb6N5c7Hz5mL79Hjt+PDlwd7zna3F9dVZ
dFVt+L/+yUDtcF9Ff2dxV0tOW52+qSqlqTypsVxbnhtelhNWmhlUlO6fn+qd
k6TJ0XpkxavytOrsOJU+RpEWJUuKkCWEiMJ9OIEeNKXQFfDi0e05dDsK3pyM
M/vUvMh2xlwnDB085DOcIQIm5rNlGD7LCdjiMhw4n+Syp1McIHg3azcXS5DL
MCHN0snJ6jpe0LbQiRnozEMiEU+nU9EAXtC8IEAYkr/GllEuZC49nQxsCaG4
0SkMCpFCRhahojGQqYlQvqgiJvgF/cuagnEV0ZjeEm6gihep4UV50gMVJC8J
VaOgKuVUiZwjV/PkXiyBB42pYHM9FKpAd3WIuyrIUxMVFJCiVMaqVAly9wSx
Il6iThJr0oReGWz3VL53Ds8njyxLc+HpIHhRKhQriiqDrEwjylMIsmSCRItE
HAchSuIokniaTEtXJDDkSOiSOKYkRiCNlam0MlU8TxLGFgYLZGFiRZhQFuyK
57E4So1HcGhQbExYQkKkNj0+LT81py6vsLmgqLO0ZLCqYrKhcr6teqWz6mVX
+Xpv+f5w1dFo9dFo5dlE7eVk3duZ+l+WO9/Ot72da//wFMnPT7sg/zbbDYHm
heJ1+aTlYqztdKx1d6D2RXvJTGN+T1FSfqwPlC9PPontZuti8xA97YWuAe7o
aA5xcbFSKDiJieF5Wdq6qjwjXiODzaNDLWMjbXfhtfFq/GZeTkKArReLo0uz
jxdnBqB5zU32Q+0a6KrrbCzLSIyA5gVyBXvJhQy8m70FsPW3wuuutQ3vmphx
1+f5Laj9k+B1a25dpuMzXvcMixwi9/z64UfwCNz5V3Tny3wTXg8f/fGR2T30
tBeKl7WVqaOD9YMfvrM0fUh0w3q6K9ITE92lUjaV6qfRDPUPvHr2Et6Nd7Z2
4d0YxQudbQjZvZbtfST7+/t7e3uvX79+anigI4fonMNbH1+n7cvHXXgdHRze
mrvwujFg+Amyw6MbZhmDditjjMd3do8gu9DCkJOAp4fI0uxIF4OGBd3q49WH
X95/+Pnde2AL8Lo8h15mPGuGXi6H/LjgJ4vUvPNTeAWyaMblKZQ3ZMnc093L
063L4/Xzw9Xj3RcHW0s7a3Nbr2c3Xk4vzfbPT/XMjLeNDTU87qnsbitub8pr
qc+sr9DWl8ZWF0aW54aWZ4dAqnJCqnNDC1O8C5K98hM9crWq7HhZZqwkI0qk
jxTrwawQQZwfO9KbHunFDPdmhmgYgJecjxWxHARMRy4yVd6CYmheDJIt83Nu
EGaEDFrYdb+ALS4DBLRn0+wMctnRyPZUkp0r1gKVy8nezMHBAsXLBeuA4oXB
OIFZBAIOj3eDLdQuNpv5SSsWA8ULFENa2G/rXOgyv4AXsMUmE+kkPINMYNHI
yEXNbBoyx55LowuZFD7die5mirU2dbHBcEngF8jFi/dhRqgZQe4sfw86+CUV
sWQyCofP4oulUnVEaExJYUVjTXN1SU1ZXnVSbE6Qb2JIQKqnOlYqj3L3TJJ7
JCp90tmyOI57Ctc9jalMpUqSoVXRFHqGKpOiSCbJtHhxnKswyoUX4cILc0MS
QhSEU0ThdGkkWx7NUURxZJEsSThHFMLl+Spkoe7KCJk0UCzycVcG+npHBPlH
yUVKT4VnlH9oanR8drwuX5dYkaZvzM0ZKC8erS6Zqi9faK160VW72luzPlC9
9bhie6DseLwW2ELkmm44n66HvF/sgNp19bQNahfk42wnxNi83o23vZ9ovxpv
u5rsvJjsOBhqeN1VvtRWMlShL08MTvaXhyrZYioWZ2/qbPPQxcnSwfYR+GUP
Hzqb02hYX195enpsfrYO8GpvLu9urx4aaITaBXJNjnXeNWx4F15Qu6Bzobet
XJwZnBnrAbyG+5qGexpLc5NT40KTY4IDNVImwcnZyuQreH3Fl6/gdZ2wf068
/laofSteDx/8HfEyt/zRzOIHY/+ysHwA1d7e3tzk/j0by0dOdtYUgltMeIi/
lxpZ5lQgqKuqXnw6t7+7t725tbWxidSCA2Q+PPrY3f8124bsGx5g1uzs7PT0
NFSw34fXXa+/q2Hdhdf1hnU9F+ent4wcIufOzk+gJ6GB/c9ZX93YWNvcXN/a
3twxllDQZ2f3cHvvGBrb0fH56dmb84u3by6RPvXLL3/+05/+7U8///LLx58/
vn0HtQ3Mg68HnaGBDHWeGFrkJz33Ly8Qs67O4esBJvcO99Z3Nl9vrS2/Wnzy
YmFoebb/6Xjn5HDTSF/N466K/o6y7pbCzqb8toasppr02vKkyuKEsoLYsvyI
ityQsmy/skyf4nTPwlR1frJ7fqIqT6fMjBVlxAgzogX6KL4+nJsexkkLZaeG
cJJDePH+7EhPWqiaHKamhXrSg9X0AHeqjIe5jheNaMkk29EI1gyiDZobhKFH
YOeGXxz6J7lYVFuDXLYgF4Vgj3U2xziZgVyOdqbwnx+UL4yzHeCFwTqgeKGX
KqOnumg0ilDIFwh4fD6Xx+NwuWyjZejEjC9jZMsoF4oXYhaJgGypJA6DCngx
DNc1kxkkMotM5dNJXKojEWOOsbYnOruJ6eQgOSXSgxbuzghRcUI0TF8oXwKW
XODu5x0WEZ6WmlxbXv6kt2+yv/9xc3N7dX1HTUdBRnlxVrUuOiPEPzE8VO/u
Ea3UxCk9tXJNklSTLPVKE2rSBOp0oWemxDebKosjSqNwonAcPxTHC8Lzg0iC
EIo4hCEJYUmDudIgvixYqAgRK0LFymCZIpDPVirFnl6qAG+ln7fKJ0gTAGAl
hEQkh4enRUTkx0dXpyc156S35qT1FmWPVuXP1RcvNxW97Chd763cHqjaHYRU
7AyWbfUVHj+pOpuqA7MuZ5tPpxqOxmvPZ5rPp5ouppuvppC8m2qDfJxA8mG8
/efprl9muj9Md3182vd+ru9svG1roPZVb/VEbW5DamRupLfOX+7Fp9Iw1i52
Ji72po72Jra2D+zsHrq6WgsElLBwz4zMuMLcpMbaQpCrv7se2Jqe6J6Z7Jmb
6b9rwsb6y7GbMVzk9Xx+ePX5BPwWB4pB7Rofage8Jkc6W+uLk+KC/DWSAE+p
B/wCjrO3Mf3h4b3/Dltbsx//Ykq82e/By976IcTO6gHkL1AzHPntuevz/z+8
vjZhw/6RpfV9KF8QkMva5hFyXtXaxMzkR2cHa0dbKxsL0xB/n7jIMPBLzGMX
5ubNTEyieG2ub6B47e7ufgUveMHa2trMzMzk5OSLFy/gZf+EeN3oXOjIIdLU
bsfrFLongIVMKUSVurh8+wa5xfOHj7+8/find+8BKGhXyIzAy8srdH145Iow
QyeEMnZ+fHB5evQGKtenv33/9OTg/OzozfnR1cUxkrOjM2Bw89XqysLS3Njs
5ODMk/7pka6B9rLHbSV9zYVd9bmtVelN5Sn1JYm1RdrynMiy7IjS7NCSrJDi
zOBCfWBBekCB3jcrQZajleTqpJCceHFmjCA9kpsWykoJZqBJ/Zz0IEZqEFPr
y4iBzuVJM4QR6kH1lxHVQhcFFyNk2gsNeNEJlsjavBR7Cs7SiNcNv+gG1+BD
6F838ELlYlJsjHJBQC5nR1OQC34/v4aXI3phF4oXsAV+kaEo0akymUQqFUsk
IpFIAIqhhHE4rLvwMsp1HS86jcSkENk0MpdB5TJpgBdwht5yhQaeUfFUFoUr
4UIFcyZh7XGOTgwccg22v4gYJKMHK3nhGl6AgqkWclWCgHD/tHRtTXnh47aG
+aG+xaGeqc7mibbWhcGx7rrWwda+2sLqgvTCfH1RsG+0lyZM7REmk4eKJMFC
ebhAFsERh0OZEqrjGfIImjSMLAomCQOoIn+mJIAHWqlCJaoQsTJQovCTyn2V
Sn8PjwAvTbCvV7BBq+DE8Oj02Pis+PjchITiJF1FWlJ1iq4yMaY+Na47P3Wo
NOtJedZ0dT6w9bq9ZKOjaKe35OBx+eFQ2d5g6c7jwu2Bgt3BorOpmrfzLe8X
294vdV4+bT2aajh72nI60QC5nGhEJ2xcTbSgEzb+NN39b3N9/2u+/8+QxcE/
LQ9dzXTvjzRuDdbPNRW0ZcaUxvlnhXqGKDhcvD3ewQxja+JkZ+Jg9xDwwuFs
ZXJmdIwf4FVSkNrSUNLXVTfU3zw13jU/O7Dw9DFyD687psrfhRew9frZ+IvF
UVDs2dzIwvRjkAuaV3lhWnykL8gFfskFNCLW2t7iPsj198DrukH/Dy80f1e8
TM2/g5hZ3INAC4NYWNyH2Fg+dHaw/PHev1iZP5QKOBHB/gnRET5qVbB/wMrS
8vrqGryxA2EHhmoFeO0YHtu7SHb2diFbe7uA18bGBhyHF6ysrExNTS0tLcG+
4TqmXx8ofGhH+1bU7sJrDyrQ5/6DLnWInghDJ8AfADz7AOwOZM9wOgo+BESg
bUEFg4Bi8NTO1vbR7vHhzjG6YNLB9uHxHjJ14uL4HNmeQDO6eP/m8sPVGwjs
XL25eP/+/dv3767evX3z9spwF8tz9HaQe7ubx0d7Z0f7UKMuTg/eX519fHfx
7s3puzdAFXSrnYPdta31Z6sv5laWpp4tjC1MDc6O9U0NdY0NtA73NPa1VbfV
FDSW6htLkhpKtHVF8TUFsVV5keXZYWVZoaWZIRU5oWVZwcUZ/gVpPjlJmowE
VVqsND1GlBbFTY9kp0WwUsOZ6eHMtDBGaig9LYSeFECG6PyIiT4ErRcuwdMt
QeMap3aLUOHD3ImhSmKwkhAoJ/jL8H5Sgo+MIGE6CBh2XECHZMUgIoHmBX7d
kMuIFxQu2Ifj6OAhepxHd+LSnXgMZz4TA1tkhjzFgYy3I7rZODk8gtrlZG8B
cbC3MsQaAmahMwwhjo72bm4u6HkuMMsYFC9ELjZTIOTwBWwen8XhIue/gCoa
nUSlEa8PGKJHkFAIFIIblYijkfB0MoFBIQJnxhuHgV8UGnJ3MBafSefR8TQ8
MoTIcnP2FrIiNYIob0GYmuUj4mh4Cj9ZUlpUaXF6W13hSHvV076mue6Gp601
cx2Ny4/7Fh73z/X3j3V09Nc3NBYXl2TkZCfrIwIjgn3DfTxDQCKJxIsv1HCF
apZAQ2QoSGwVnafhiH1BK5UmxNM7wts30tc7zMsz0Evt5+8VEBkUmRAVlxyf
mBafUKpPL89Iq8pIr81Kb8zRt+ZldORndBfoHxdnDhWnj5SkTZSlz1ZlLDXk
vmwtWm8v3usqPuwpOh0svxytvByvvJysgpxPVb1faHw73wR4Xc23vZmDdFzM
dZw/bb+caYG8nUZyvXm9HW35ONX57wsD/9/zkf/9fPTnxceXU53HT1q2H9ct
NhR0ZcVVaYOLovyj1SIR0YlgZ+pi+wjwgvJl9ugPXB7Bz1+elZ1QXJKKztZ4
3Nv4ZKh9cqxzdqp3cW4Q8Hq+hAStXYAXdC7IKrLCITJJY+PVOLC1BgfhqWdP
Xi2PPpsbWn46uDgzsDDdv/x0eGl2aGK4o7e9ujg/JSM1OjxYExrowaK5wNfw
073/Zm7y3adxuWtDfHaWpp8GAL8Fly+1usHZjXwrdndN3rgTuzsudv5SKxSj
b8Xr6+fIPk1K/OmPaBC8rt0C7Kf7f0Dz40//atxHP0QDeN1188obMzog3937
l7vwMn/0A9bJ2tbK1M7aDI91lIt4sRGhgT6eKpl0fGT0xfMV0AHe2/cN8gBA
29vbX+IF2dzchKfgBa9evYLyNT8/D0f+E/ACuSAgLGzhi9zd3kHHOeEf8HUf
GC5RM5Ys5HouQyeC4/As+pp95Eq2g+21nb3NfTDr/Oji6uzt2/MrZFH2yzf/
/qc//69ffv7zxw8/vwO2zt9enkBdujBMCDz9dLMSZJF2ZOFBMO9w882bo/dX
R28vobZtnx0h11udHm4c7r482Hmxs7G0+mJm2XBlyuhA00BHdW9bWXdTcVtt
XlNZRn1xSl1Rck1BYmVOfJk+vCY3siYnrDo7tDIzuCzdvzTNrzjFpyjZO0/n
nqtV5STIP53AihHrowXp0TxdEEUXTEoMJEJ0AQStP17ri4PovPGoWfEa13i1
S6w7JkaJjVa5hCtxoSpCiIIQLMcHyPD+UpyvBA+RMhxEdDs+xZZFsmISDHiB
R38NL9hB52zAh6AY4IVcF0Zz5BoUY1AdoXmBXHgXa4Nct+CFw7lisc7Iuk+G
E15UKhlFCgJgCYV8sViI9i8+n4uULy4DWUDj2lVd6Amv653LiBdyjzASDoKs
y0EhIAGz6CT0BejJL2SZKS4dKhiJTiRwKT/i7Ux5BGcFk+onEUeopSFKsbdA
7sUNCfdITwmuytN2VmQ8aSiYbiyeaylb6W54Mdj2fLB9caB9rrdlqqNxtLnm
cV1Fb3V5S0lJXUFBcWZWhi5RGx0bGRoWFhgaFBCq8fTz9Az08Q729wsLDggP
C4mMCo2OCYuKDQmPDQnVhodlxMeXZegbi4vaKko7q0pbirPbi7O6SjJ7S7Mf
l2UPV+SMV+ZMVmXP1ebO12bP12Qu1GY9q8t62ZSz1law1Vl41Ft8NlByOVLx
dqLqLVSt2eqrmarLmaqr+fqrucY3881v5lqhdl0CW7OdFzMdF9OtxmHDt5Ot
kA/jSD5OdPxptuf/LA0CXv/+bOT9XN/pWOv+UMPLthL4ex8X6Dqy4+qSIxO8
xGKiA8nR1M3BFMqXo+1DK4t7QhElKNg9Oyce8GquL+5oqUCb1/hoO+AFzWtp
fug6XlC4ULlu4LUKx5+PgFyQpxM9kJmxruknnbPjvdNPuge66ppqCgAvfUoU
4OXlIaSRnBxsHlg8ugd8/FfB665zYf/MeBn9QvF6cJtfNyy7lj/+Xry+hxju
kPKjlfl9eBtxtDO3tzG1MTfhs2i62MggXy8GhdxcX7cw/3RzY21rc33XMG8D
qSjbgNTm1s7m9u4WZGdve2vfEMMDbIIKNjc3B369fv0aHWm8Fa+7Hnehdufw
oGHkECUMVQydyHH9Yq5fhwevCbe9tQE78Oyby/MP794DVR/evP/57cdf3v0M
W8NEi4ur8xPErKuzS+Sat+2j/Y3DvfXDvdWj/bWDg7X9Q2R7cPAa3R4heQU5
OXy5v/189eXUysLIwtN++H9tYrjlyWD9yEDt457Knvbijsa85lp9Q0VKQ2lS
dV5cWVZ4UUpgYXJASUpQaVpgWWpgSbJvcbJ3UZKmMFGdr3XPS1DkxMmyY6VZ
MZLEYEZSCDMphJEcykwJg57FhkDhMoDlBmYl+OESfNwg8d44SAxohYKlwECi
5M5RUudImXOY3DX0/2fvLZzjyrY83Z7puX2rymUUJjMzZ0oJSjEzMzMzpJiZ
WbIliwxiZrJku/D23IiZeH/OWyePLKsMt6fm1fT0mynHFzt2HqVkW+U6n377
rL22EzfYkRtk5IC5/B04vgauj57jICPrpEQ7EQHkJedhb+Rlfrb1RXmBqmDU
SKkGNdtBw0H9BS/RvKYUUwGpkCrkEsFcHAb2jrxutIUCaYtCISHt4s29eSF2
gbwUChm6MRmEBfIyGg0wovnr9sxlpBL+zg6vu7ELdROYCz3g8hbkJVyED5lR
qmUKlRQpPjQ39YVRYVBhxEwbGQsjY7IdpIZgJ88oD/dgBw9fdUiwQ256YEtZ
8kh97lxb2Yu2irXO6r2R1uX+utf9dcsD9WYaVwZbVodal4faVoY7l/raptsb
BusqQED1RZmmvLSK3HRTYUFVYZEJoaC6oKC2IB+oK8htLC5oLsprL83vrymb
bK0DDz7vaZ7tbhhvLJlsKn7aVDTTXDzXUrzUVvy6rWS5tXi1rWStpXC9JR/Y
bMvf7So+6C076S+/Hq1+P17909P6X543/DLf9Mti84+LDe8X698tNLxdaHq7
0PJ2vg1sBc66nu0ErmbarmZabpcNgZ+mEFB5QfL6b69G//5y9Mf5fpDX8WjT
VlfV66ai2eqcyarsrtykJC+Dnk+W0jF8qi2DZEEhPKZRLF1c1dExPgWFiRWV
mR0tlai8IHnNzfSj5lp+OWE21wQauz6R123suiuvxZkBc1eNPvDXwrNBkNdQ
T0NzbVFJQUp6cjjELjslj0WztbH4Bmt9/2OBxB8gr4coJNwjFDL+MXD78hP+
z5bXJ/4yy+s3nXsfPfkrym0LKfTlw8f/gvAHyYtOweIxTzDWD0l4KzLOxtWo
y05L8nB24DDohbk5c89ndrY3wV+HZmfdAvK69RcqL4hjELXQdPbq1auZmZnl
5WV0IfF3yetrv2719Ak3rZbM/oLx6vLNO6R44gcIWeAm5HHdzhb6V0BDFprF
QGrv3l79+MO7X37+8W+//gxAwvr7r38Df72/ur46v3hzdnp5enR5dnh2vHd6
tH1yuHF8sH58uHpytHZ6vHZ2sv7mYvv8AlS1dnL86nD/5f7egvl08pn52Z7F
2Z7ZqfbRgZq+9tLu1oLWupz6qpS6ysT6yvi6ijigviy2rjSqviSqvjSyOieo
IsOvNMULPFWZ6mVK9zGleVemuOdF6nIj7HLCNdlh6qxQVWaoAn1ilegrSPLj
A8n+vJQAfmqgIC1ImB4sivdlx/kw4nxYsd7MWE9GjAfTDDvKmQ5EO4G2GOCs
KCMz2siEMdTIDDGyAx3YAQaWn47lo2N627O8tCyQl16CyEvFxyLy4mH/sbxQ
wFloqw3kaZe5hF4GbxYS5UIyIOaTIXaBueCucmuuT+RFIhGIRDyDQYPkhVbI
Q7xCKwxhhDn4627lBuqmz/kkdn00l4TPl/BQhOKPILuVFWJQGF/IQY2G9EXU
qwR6Jd1OiBPRSBKa3FFi9LVz97f3C9KmJvs0VCY96y1fHWvcHW/dGqjf7a07
Hm1e769eG6zZGK7bGm3YHW3cH23aH20BVntql7tqF9oqZ5pKpxqKxhsKQUOj
TaUTbTUTrXUTLbXAeHPNRGMVMN5QudDdON/VsNRV/6qvcW2wbXWg5WV3/Xx7
+VxbyVx74UJ70Yv24lcdRSsdxesdRVswgrOac4Gtlry9zsKD3tLToarzker3
Ew0/TTf/Mtvy60L7r0ttyGrhi+b3S01Xc3VXcw1vnjdezTa/edZ69RTovHra
fjHdfDHdeDWFcD3ZDLwfR0FK5ZGajYWBvy0O/TDXB+8/n2i9HGvb7TK9aCya
rSvoyktIcLW3Z+ElNFshHdnwRSM8FvFI/r6GlNTQouLkKlM2uj0ZYtfcs8Gl
+WEA5LW2PA3muisv1Fy31Ya38tqAXPZ6cv3VxOuF0VfzI0uzg/Az4dLsMPhr
fLC1s7nCVJ6dlxUXHx2gkrHhX5qt5bcUguVHKfwprz9IXl/OX+ZeiJ93nr8r
r9/463fL6zvABgP+uvdBXghwM8HaPLCxvA/Ji4K3NmqVcZGhGrmYTafFRkZM
T01sba5DSAEL7O3tQPLahzlw+NFfe8cI4BfIXGAomKysrIC8lpaWtra2fq+8
jr/yC6kY+RJgKwhfMDGHwn0Yjw+PIF2BsEBbaGZEVwvBVj+8fwvC+vmnH8BW
//q3X3795Sd4+fb6DdJ54/zszcnJ+eHx6f7+6cHu2eHu+dHe5cnem7Pdq/Od
6wszl1tvzjeQhksny6dHLw4P5ne2nq4uDy/O9z6bbpkarR8fNnW15fW2F3S1
5DbXpjRUJTRUxdWWx1YWhVUUBVUWBFbkB5Tl+pSaCwJLUt1KUl3Kkp2LExyK
4vTF8YayeIfSOF1hpDoXgpW/GEj1E6X6IY+rgGQfXrIvJ9Wfl+rPSfFjA8m+
rCQfJpDozYhwIYe5kMJcKKHO5FBHUoiRDAQbyJFOdABxliPLDAfBmRusZwbq
GQE6hq+W7mPP8LKne2oYHnYMg5SkExM0QvxHefEJSgHxa/K6XTN0tOcBWgUD
LZ6X8okyAQmVF9zH+Gw8m45hIhXymM/kRQTQR123yQucdasqiGDgL9AZpDD0
QRiiMzsFumwImeuuqr6wYIh6Sibgy/gAT8rjibkAV8QBwGUCKZ/DY7I4dPTT
EQNqZFKdSqSVMaVsqoDEVdDVDjwPb1VkpGNtRcJET+n607aT+Z7z2e7j8ZaT
wcaLifaTidbj6bbzmc43M11vzLf3o+GG/YHapfrcpbq8hbrchYa8xebCF+0l
y90VK301K30NwGp/I8pGfwPK1mATOtkeboRAtzvctN5b87qz9FVX8evuguXu
grXuwvWuws3uop3Oor2O37DfU3o8UHk2WnM5Uf92CglQyDOshc4flzrfL7W9
W2y9Wmw6m629mKk/f9pw8bThcqr5zUTT1Xjbm4mW84nGs8l6+ETgzXjjbXuo
65Gmt+MtyFavZ10/zPSg5joZbbqeaD/oqXndVLJQX9SblxjvYmdHx4iIlmIa
lk22gvBlr+JFhnvkZscUlyTV1uV3tZkgdk2Pd89O90+OtY8ONc9M96DyWlue
vLtmeFsqj9Zp3MQusNurCQAtkofwBckLXTYc7W/uaCovyElISQoNC/EQC6lM
uq2t9XckvAXG+j4e88jME4CAtQCIOGsi7j+cvH5X9ci/g7y+eC7YXdDjwwBb
s79uG/l+4q/PdYaALCH+AfKytfqeAN8NnCWVZAt/FyYFZ9SqBWw6i0Z2c3Ls
6+1eWX4F8kLyy87W8fEhKq+9AwTUX6i8zs6QI70gap2enqKPvebn59GyjS/K
62uSOvrKr6/JCwIXjCCso4NDACaovOAS5LH3767BUP/1X39FVfXTj+/RIguw
GLjs+ury0vzYDOx2eXwM8ro+O3t3efb24uT6/BDMdXGyfXKwenKwcnzw6mB3
YXtjZvX12MvFwYW5nomx+rGR6pGBsv7uwq62nNbG9MbaxIbq+KrSiJqyqJqy
yIrCkPLCwOriEFNRcHmeb0GGS0GaU16KMS/RkB1vlxWjzoxUZkUo8qKUeRHy
nDBxXpgkP1SSEyTM8GEmuFGTPJiJnmwzzDvQ0/25af6sVD9msg89wZMS506M
dSNGuxLCnIiItpzJIU6IuYIdSGCuID0pzEALMzAiDMxIB1aUkRvtyAOinHiB
Wrq/luZnT/O1o3ppaJ5qqruK5qakGj/IS8nDyLgI/6a84CJELb2KZVCzNVIq
upaIakshogASAUXAIXIYeBYN+zV5gbnIZCK6zwttrIF031XI0PwFLyGRoVvA
RCKBRCLSG+x0eo1Wp0ZOnLyjsE8WDNF1QoGIK1QIeQoBV47IiyvhskVsjpDN
FrBQkbG5DPCX3Hw0s/zmjBWZWqdSaRUKe5HeUebla58Q71VeHDU+UL7yrPlw
sed8oe8KYsiz7h+e9f79xdibme7r5z3v5vvez/W9e9p1MdJ43Gva6yjbbC5E
2WgtgKC001t+MGg6Hqk/GKw7HKoHjkcawQUnY81n4y1n4IWx5kOw3mDdwVA9
6A/esNtXvdFdsjlYujlYvD1YvDNQvNtfvN9XetSLcDVSczlkOhuoAm0BJ8Om
k7Gas/GGy/Hmq8n262cd17Pt13Ntl3Mt57NNp8/qjqdrTqdrzqbqzibqLsYa
kDaGI40XyJ+h7hg+cRThfKQOeDOEAPK6HmsGf12Nt5yPNsMfCf482z1Ve11V
Ox0V6y3lLxpKenMSYh2VKoolH/tARLPhUKw5NBt3Z3VCnH9RQWJJaXJzS/Ho
YOv4cPvUWBeMXe2VLY3FI4NNK68mzeaavLtmCOba2XyGmuvjmqFZXmsvx9FS
Qwhf80/7wFxTIx3drVVVZVlRYV5+Pg56rZhOtSbgHoK84Gdyi0d//VNef6y8
Pj/+EmNOYXe70N+NYJ+fBfYHysvy8TdUkvm/Jt4K/bvwWRQWlUgl4oRcVk11
xfzcs73dza3N1a3ttQu4oe9vIRxsA/uHSBf03SNg7+LiAlLZwcEButsLYhf4
a3Z29o+SF+KjL4GuFr65uLx+c/UO6dx+w9Wbi2ukYdMVgGarM7PkrtCWUh8e
fqELicCbU4TLk0MIXEe7m7sbrzdW5ldfPZuZ6ns21T013jY6VD/Qa+ruLG1v
LWxtzq2uiDWVR5nKIsFWFcWh5UUhZYWBZQUBeRkeRZleRZkeuSnOOclOBamu
+alO2Yn61BhlWpQsLUqSFilOjRClhgnTQnlpwdycMGFWMC/djwlk+TMy/ehp
nuQkV2K8KyXBjW6GmuhOA5I86Eme1BRverIXNdGDHO9GjHXBRzvbRjliIhwx
4a7kUFd6mDMNCHWihThSQxxogL89GQiypwVr6WFaVriOHaHnhBs4/nZUPw3F
R0PxVpM9VBR3JdlVQQE+l5echwd//YNlQ7RaHu12iOoMqeIQUZRiqkrCUIrp
UiFNxCPzWERz1/EvywuPx+JwGFAYm81EG0NBBONwWKAtmKA9N+A6WtEB0ew2
ed3Wadxmrk9jl4gL8uIrhTylkCPnc2Q8loTDFLOZAiYA4QtCGbpaqLFXaszl
i/ZalU5n72jUORq1rq7asHDP3Jyo5sbcqZGa17NtBy/7zl4Pvnk58H5p6Kf5
wb8tjP4/q0/fPe97N9//w/P+H2d7f5jsvB5pueirPe02XfXXvOmrvuipOu0p
P+ktP+2vvBiqfjNSe9BVcthdChz1lB33lh/1V5z0VYB9riebQRxH/VWHfZUw
Ans95ZCz9kbKdkZL9kZK9oaKDweLD/tLjvtKTnpLrkdrwV/ng6aTwarjweqj
4ZrjsbrTiabj0eaTsbazibbz6fbTp61H040Hk7V7E6bDyZrjCaQHLzgOfqOL
IaRp/AUiyppDc1d5c2P5GuBiAOG8v/ZsoPZ8sO5koPawv3an17TRWb7WXrre
ULjfUbnXWbNQW9gQHxyo5ErxD0FeQrIVn2otYGGC/I2pySGlxSkgr47OirGh
NtAWJC/wV39PbUdr+dhwy+rrqbvy+miu38oLMdfrMTAXgG5Sfr0wCvKaHu3s
ba8uK0iJi/ILD3b3dLeXiGgMmg0e+4BCsgBnwU/mf6i8HgAk3EMUMh4M9ej2
5W/53fL6vVL73yivz/0F8rKyumdpfe9zf30xjj1+8t3vf+b13W+feZmxRlYO
rZ7cw1g/pOCtCbZPWFQ85C88xpKAsc7Py5qaHN3eWttYXwZ5XV2fI+ba20HD
1531w4PLy8sD5BdiKLS9PMhrcnLy35LX6SfyOvzKL+TTj5AlwZvxAxChfnj3
/ucff/rlp59hhPn7q2sQ1A/XV28uT8+PDw72tw93tw4Pds6O9s9OD96+OX1z
efLm/Oj0dPfkcGt/f31/Z3Vve2V9eW51CSlcn53shR/nxgaaRvoaRvrqulqL
O5oLWupzGmvS602p9dXJjdUpTTXJ1aURptLgiqKg0nzfohyv/Ez3vDSn3FTH
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
oL01/gflBXO4k1ApeGcnfWND9dbmKsjrYH/3/bvrvZ3dw32YHkD8Ojo4Pdw/
2d85hkxjrjg83ds/3tre397ZQxW2s7sP5lpdX0PltbO3DTENHHV0cnh5ibRk
Pz46398/3N3dB/b2Dvb29tbW1tbXV0Fb4C/w2MXlydu3Vz/8eP3jT2/f/3QF
5nr77uL67QVkwOsrhIvz4/Ozo8vTo4uTw/PDw7MDpJH76cHuD1fn7y6P353v
nx9vnewu72wsbi7PrLyaXJzpezbVPjnSMDxoGu6r7O0u7mzNbWlIaalNbK6N
azBF11VG1pSH15aGAfWl4aaCoMq8gPIcv/JMn5I0z8Jkt/xEl/wEx7wEbW68
JjdOnR2ryo5RZkYrMqPkGVHylFBRcqgoKViQEMRPCOTF+nNi/dgxviAszs1m
KzPxHqxb4tyZKDdl7WYiXOgo4c60cCc6EOZIA0KNdCDEgYESbKCjBAEOVBgD
DZRAPQ3GAB01QE+GOVjMXwuJjOprR3JX2HgosAE6uqea7ianuUgprjKqm5L+
NXnJWZZyjhUiL44tKq9P/HXbYQOV102fQwldLWQoeQw5DxTGuCsvCtEK2ZpB
wZNJBPhFJlNpdDaTySZgbMkEW8hidAaJwabQOCQqh0Jhk1GoLAqNTUXzF8qN
vDgskBcojM5hsDhsxG5cLgdyFV8gl0lUMrlEwBdyeSAvdG+XTC5Cz/zS2Cns
IG2ZgZzl5u7k7OKg1anhut5g5+bq6Oqkd9SpPBw0ieF+3aaS1Yn+8xdPr15M
vX8x+X5+6P1c/8+L/b8u9KK7en9Z6Pr1xbDZX4Oov97OdF89bUeq+MaaTofr
D/oqd7vL9rrL9nvKD3ordvuqdobqt4cbgZ2Rpp2RBgBV2HpfxfZQFehme6AM
OBitAkA9612l4Kn1jpK19mJgta1oxVwqD37Z6KrY6Kna7DVt9VVv94N06nfB
jAMmUNX2QAV8kZ3+iu2+0u2+chhX2gvWOgs2u0pgvjtQidhq0IRkrrHqnZHK
zYEKYGvQtNFfudJd/rKt5HVHxcu2iqXmivmG8tnakumqwonyvPHS/OGigs7s
zNLIsFC9nZJBIFt/j7X+Dod/gCc94Ajwrp6a1Izw3LyYhvq8zraytuZiMNfE
UNOz8fal2X7UXKsvxsBNK0ujMIcRRLa9+nRrZRq1FYgMXgLgsu1VpKXh3HRv
d2tFW0Pps/HumYkeYKy/NSHSH6K9p5Mm0NdFKeXQSNaQd+B+DrdrGP+U17+P
vGwsEX6XvNDm85/76w+RF42Mw+OsZVJBfl7m0uLzvd1NMNb11eXu9g7IC8y1
u713CPraO9zbOQSLIT3VwUR7x5sbu5ub2xCjLpGziN/u3Pza+sgukqfg07c3
dzbXtzbAbOsbELNAi/vwtQ72jo/2IJldXpxcvTm7vjp7e42cdA/Ouro+OUdi
1e7xEcLpCbIMeH15gnB+fHV29OZ0H6kPPN4FLg43wVl7a/NrL6dfzAzOTnY/
HW2dGG7o7yjrbMlvqUtvqElqMCXWVMZUFIeV5AcWZnuXZHuV5niX5fogZHuX
ZnmVZXoWpboWprgUJDvnxRtzYg1Z0bqMSPuMCHVKiAQ8lRosBE8lByKeSvTn
xvlz4nxYiKp82eCsBD9OfAAX2S8cwIv1BE9x4tzZKLFurFtiXJko0S4MFIha
YU5UhBthUc3Q0cdYwQbqjbB0DJRALT1Qz/A30PwNDD891U9Ph9FXR/PVUYKd
ODDClWAnFoxOUmsnqa2PPc0sL4aTlOoso7kpme4qlrOcbpRQ9EKilo9XcTEK
to2UZfUxeXFs0ZD1ib/uFsx/REj5IC8q5K+78qKRbRhUHINOotMoJBIIjESm
gIw4JCKeRMQSiXgiGUemEsgMIoVNoXKoNC4NgU0F6OYWiAw6GYA5cgVxFp3F
AfvRmEw6fJTJoNFpJLCZgM8WiwRCAQf8JZUgLTWQM5TtleAmsJWjkx5GAF0k
hOQFV1B5Qf5ydjI46NQ6tRTklRUbOt5Wf/zi2U/rSz+tPP9hCZHXD/MDvywN
IIHL3MkWJvDyF5DXwsCP873vn3e/m+1CiiWAqbbL8ebjweodsE9bIbDdWbLT
Wwmi2eirBdZ7a8A7wEZPJfC6rXC1q2i9qxgUs9FdtNNftjuASGertwLiFXgK
SUPtpai5gJWOMmC1s3wdPmpW2AbylSF/mRBz9Vdt9Zdvwuf2lW30lG/0lr5o
znvdng8qhCtbfZUwrnWVvu4sXO0rfdlTtNhRCCx1lix1ls61Fj5ryB+ryhqp
yOovSu/ITqxLDC8J88vycUl1c0xwNISoFEY2XUqwZWMfU7FgivsY7PfWmG9E
MmpYpEdGdlRZeWpjQ35vV1VXS6k5drU+n+qCnx5fzQ+BudZejqPmAoWh2gJQ
YZmj1jToDL2IVmhMjbS11BW21BUP9TQ8HesaH2ytKEx3N6pAXt4u9s4OKiGX
QiVaAeg9n/hZF9w/5fUfSl5f9Nf/d3kBFKKNjfVjuMnERIdNToxsb63t7W4f
Hx3sbG0f7IG5EP+g8jJb7AQAf4G81te2IWtBkjo/v7y+vkYfcp2ipzCenyKn
Br85vbxEitvRQou3aE/1d9fm4gp4efHuLcLb6/M3l/CJuwcHkMJWj4+3D483
Dg83Dw7WUI6ONk6PNq8u9q/O9yBeHe+v7G+/3F2f31qZ3Xz1bGasc3qoeaS7
prelpKM+v7U2u6Umq6Umo6Umrb4yvro0sqo4vLIotLwguDjXNy/DIz/NtTDd
pTgDWQ8sTHPLTzJmxxkyo+wyo7QZkZr0CLu0MGVKsDIpSJoYIEvyFyf48cxb
q5B9VTFejGhPepQHLdKdCiPMAbgIH4I3wNsSfLhRbr8xFLr96pa7q4IAaAut
dQ9xoAQbyChBesotgToqgpYeYE8D/LU0b3uKlx3ZS4OMnmqyp4aEjoEObLgC
tgp14QUYWGAuR7Gtr5bpqWK6yuiovFwVDPDXrbzsBF+UFxbk9bm/NFIq2lUD
QPMXEsd4xK/Ji0HFgLzoNCKLSQXd0Gg0kBeFSieTyYjLQGAkHIaItSViMTAh
4UhMEkBhkmkMMp2BaItNpwB4nA2BiKFQCSAsNouGfDUGBbQFcxqVCAkO3slh
IwpTycR6nQbc5ORsgHgFngJggvoLtRVMHIxatOWUwcHe2UmvUYq0CpG7TpUW
GdhfV7H1bOTt6+c/Ls++Wxh/+3zgh+eQvAb/tjiALhv+6xKkrW7UWW9nOsFZ
kLneTLddTrVeTbYiheijSPja6ihGToHsKt0fqN7tr4WItNNXt91bu9Vj2uyu
Qt201lH2IWQVbXQWb3YXQUoyTyrXu8FcFSsdpcutJa9ai141F71oLlxqKoDx
ZUvRq1bztuX20tcdZcBWHwgREhl8FqitbLm96GV78cv2wsWWglcdRas9FesD
lev9puWe0qW2otnmvMn6zLG69GFTKjBSnTFYmdpdlNiaE10W41sU4Z3p5xzj
qPGT84xMkgJrIbJ4KHzykHn/W8q3f6E9+o6Dt+BSbajEJza232Hw97QGYUp6
WGZWVG1NdnNDwUhf3UCXaXywcXayc+FZLyovtO4dXTnc33x+uD0PCQucBSO6
cogqDHUZyGt5cQx+/uzrMA121/e2Vw/3NnY2V0DsMtqJXfTyYB8nuRj+CWAo
BEsIX+gOr4/tNf6U1//6ZcPfL68v++uPkhfO9jHcJIL8vQb7One3Vg92Nve2
1nc3Nw53d/a2Nnc3t4729g939/YQnR2Cy2Dc3z3YWNtcXV7b2kAcd3x4hFR2
mHtZnJ+dXF+d//D+6uef3v3y8/v3V0gr9R/fvgFggtRRnB9dnB6cn+xfnO69
OT94c753cbpzcrhxsLuyu/Xq+GD98HD1aH/tcH95b+fl9ubixtrz9eWZFwsj
L54PzT/tezrWBj/dDXZV9raVdrcUtZoymypSaovjK/OiyrLDS7OQHrZlOYEV
ecEl2X4F6WAr94J0N3BWdrJDRpw2N9lYgOCYn+SQE6/PiFInh8gTA8WJgRIY
EwLEiX7CeB9BnDcv1osX58WN9+bEebEhT8V4MKPdGVFu9EhXWoQLFd0dDFdu
L6J8svp3J0/dEGJ+dHVHVSRz3QUZBXmYpaXc4mdPNYMUuqMgqkKgeqhIHioK
jO5KsruS6G1Hd5XjvTS0MBdBsCMf5i4yQoCB465iuMjpjhIK+MtFwXBVMp1k
NAcxWSu6kRc46668JGyMmINB/XVXYf9D8hLTFSKakEsEeTHN1fIUMg7uNUjd
hUBAZ3BweDKZQiNSEQg0Go5CsaUQrUl4KyIORyHgqUTksRcFTzHXKDJATGSk
oRmFCB4kcJgULosKsBlkFp0EI9JomoJns6giIUepEDsY7Dw9nP38PX183T29
XNzcHZ1dDE7OekcnyF+QvJQ6vdrgYKc3aLQ6FQAv4VPUMoG9XOikloa4Ggpi
w3vL81/2NO+N9xyNdx+OtJ2MtF5MtoGYLscb30w0vZ1uPZ9oRDkbbwBOx+pv
Qa8fj9Tu9Vfu9Jbv9lUcDNZsd4Owqjc7TevtlWttZSstJcvNxcstRasgoJaC
1835r5ryXjTkLNSmz9dkzNVmLDbmzzfmL9QXPK/PnavNm6nNnq3OeVqd/awm
B5ipzZ2ty3teD+8pBBaaCsBlILgXrcVLrYWLzYizFloK55vzJ2sznzZkP28t
XOgsXugomWnLn2zIHq5NH6nP7qtJ76xIaimOrcuNLE0KzAxzT/A1+NoLPBRc
o4CqomEFmEeMx9+R7v0Xwjf/TP4GGYn3/kKzvM8iWDDJlngs3Gf+QmdZe/vp
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
GG/1EGf5gI6zpNg+JFp9j7e6R8DcJ+If4gkI7q6qkqJkMFddZXZrXf5Qp6m3
sWRhqnvxWS+6bIguBqLV8mjZxu2TL4hdEM3gf/++jkp0dRE+Cm+bnex+Nt45
Pdo+3Fs/1NMA8mprKE2M9vd106EFG0yS1a28YGJj8R346095/YeVF+Iv5GHW
F/z1e+X1YR/fo998N+BHLBIGYNMIfp7O3W0NW6sv9rdWNleW9rZeHe2uH+2t
wsud9VfA3uby3ubqzvry9tprmBzvbZwdbp8ebB3vr11f7J8ebhzuvgZhba7O
vVyYWJobfbU0tro4PtZf39tS0t9R3tda2tFY0NmY39GYX1eeUlOWXFOaYCqN
NxXHgKQqC6PKCyPzM4PzMoLyMgJy0/1z03xyUj2B3BTXnGSX7CTHrAQ9sik4
RpkUKUsKEyWGCpFqwBBJarA4OVgMI9gqJUiAVLD7ceL8WQl+rA8jIwHwgzkn
wY93g7kfOxDvzUE3W8V8gjMDsZWBjhKup6GE6aihWsrnhOiQEouAL/HhGRYZ
5XZtEDzlob4D8iSL9OFJFgr1LmAl8NHnBBgkjmJqjJcuL8YP5q5ypo+9wEFI
Rp0FwMQgpToqGABMdBIK+EvBx4GzQF6AiG0t5tgIWTa3/rr7zOuuyNA+G8hh
lAq2RsRA/CWkgbykfKKYixdwcQCTbgP+IhItCXgbEhmHdOIVCkQypUStF2sc
RRpHsZ2TUG1kijUYGv8RhkrnyegcgVAk02q1Tga9Uav2dNJF+HslhQcmRwSl
x4TlJsXkpsTmpcaV5KbWlOVlp8eFBnq4Odt7uRtAXu7ueicXOxc3rYurHnB2
0Tk5ax2d7I2Odg5GMJdGb1Ch6PRKrU5hr5Uj2Mu0apFBKTIo+PZCpo5PD3ZQ
tedn7E8PvFmYPBjvWe6qXe40bfbX7Q43wfi6o2y5qwRY6y3fHqreGjSt9lau
9VVtDdVtDNdtjzVujTW+6jWN12W35UXVpgaaEgNAJabUiMJovyQfh3AXVYij
3F8v9lRzfbVCdzXHScY0ypiuSo6rmues5DjKWa5qkadG4qdXhrnqE3zdMsP8
C+NDy1KiqtKiqzNiQW3NeYktuYnNufENWTF16dH1qTGVcaH54b6Zge6x7jo/
e7GbjO2iYKtYWAnDhkd6TMPeI9r8FW/1F5zVX/DW3+BtvydgHqDcudM+QXd9
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
kN+9vtzf1TgVaAVzHdru2z87uHdmcN92P8jrWw9uf+DerYcPTWDDyIO8Dh+a
evihPd/51t4H7toO/vr2fTvvv2fb/XfO3ntw+q7dk5i8NtWXYpFXtcNY7TJV
OU0OpUhEzmZmL1+U142QV2Ijja9KXrF1XrEklVfUXFF5XfUmY/JK59BW8RiZ
2PBQkWmV8EJmNvpvpc3PkMLMQWsfeCQlnxzbTiPaVEMtpiUltgtY1FNRkUW1
FTMix8LklUo6sUWFSWvHkpJ4tlSO+7rIyyFjxIFN/RnbixnTljkyuWSsuaJ9
k6PySvQXNghzdExmrZB4daKSikMtIgOJClPxSIAiBqyNx1zjDR4Ba3wICLi4
+covwjwk3jwUSjaLRWJFZgdjc2hMFoVGJzJYVHAWRsRcVMxcDAYhYj2sKgr+
C7gI6KRj4JcbCmgL++thIxXDMqRGJaehIrevY/W2iaE790w+dNeOH3z70M+/
f98vfnD/T75314+/dwjS7z28955Dk/t3hbZN94e863z9zb2dteub86rLDHlO
sdXA0inJSjlOLl4lEa+QCleK+StF3HQhKx3rDgMPqHYdv6ncvnltWV9blW9z
w6R/A8hr33T/PXvCDx6cvHPPMPhr/97wPXdOQ/CFjcT77W/tefjbe3/0/bse
eXAPOqThnokH70bN9cCds3fvn9y/dXjrcF/f2ppSi6rWZQaqnMZKh6HUojUI
WXxCBpu4alFe15dUwzqlarBxs8krrsDwC+RFWfUl5BVnrqvIK7ZEManFohvR
HUTkLyevxIAo1lzRo75QXon++u8tr7nxeOfNBcQFXNEWhknjL7RR4nWVV6K/
UskLa/IK8or6C+3fwYsoLGKxKHwuQGTQMtlsIotFYDLxbC6JySLRGQQOlw7+
isJEoaCOYxHAd5gBhWw8hD8R0KHvU0kHdkvKQuWFvQuPlsGnZ4Kd4c8I/0RY
gD+dyyRtrHR3tdaFBtq2jPbvmQ0d2IkOkLtjy8D2GaAf2DnbPzPeOdTb0N1R
2dNZ0b2xrGN9/toGW1WJKs/Bs5uoJi3BoMHrlNlqaZZciE4JCv4SMtLlPLzL
KFpT6exqKYfIC/B21o4Ntewa7757Z/DB/RN37QqDvA7tHb738NTdh6cO7R+L
DGm4/cH7djxw19atkwO+nnWBvg137Zu4+8DU/Ye33LNv8sBseDbY091UWWxS
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
1ddRsr7asKHGuLHB1tdaPD60ZvvYptmxzsnQxk1rqzY0lNWX5lYW2krcRqOS
J2DkcOlZMgGFTc0AedFIK0FeAIRdi/L6yuVFIaQn5SuU11VuTtztJeJWZGcv
xRFX0vkkMpeEX3lHI0+eh6SXL6VULqXU3k6puoOavxKlfCkdlqsz6JWZ1MqE
tDaHXYtjxqc57DocJyn1eG5SmsjCpDQS+Yk0EfnNJAGwhhifbqBJ19OlN3kK
NOZwgKbs+HR1Frshmx2XAvDqQkl6/lQpvFF9DvvaU/QQHOcaU+xdgOas+HRt
Dm8NjpeQcppyGI04eh2eUYtn1RA4tXj0VHBIczq9Dc9fS2BXEelVUj4va4lI
kCVXkqPywvyFEVVVVGdRoyWOWRE7/lKsubCGRmAlkJRJzcYwqlggLJBUtOVG
tP0hJq8vHAUxjlTySgqfl83j5HC4c/C4WQCfA2SwGSt47FVgLgE7nctYzqYt
5dGXi1jpAuodrJxvenTM1hr76iJ1Q4GyuUQN8iqx8lw6WnONHYKsPdv9e/eg
kdedd08fPDAK8jp0YPjOA6HDe32H9wzumGj3d1f2txUNdZQGu2tGh1ZPBdZP
hdsh7Joe2dzd1ri2tqSq0JFn1xqUfIWQzmfgKDnLWOTLisF6lc6RQjqpSCW7
hUrwC/sR/5tJJS8yfnlSYlUYJ7XocnRnEm5ZapI32EjVciOlpK6cs/LyS+m3
YeBX3Y6BeSq6GsuC5AW/KBmXxqPiyGBb+KIZBD2d/u2Gzp8Utv+huv+PlQNP
lw/8sXLoV3VDv6jz/bHS92T50J9qvY/XDyXyWO1AEmoGf1PRn5TfVg4k5Vdl
vUl5rMablN+V93+t+WOND6U6EJc+UeV/otqbmP6+bPD35f2JaeIZvlz6eLX/
8WrvtadP1ASegKu95vTJ6uTAzywZA09V9z9Z0/uHuv7H6gZ/Vz8EPFE79GT1
0OMlPU/WDP62pueR6g2HGlvKxFybjK5X0eOqva7iry+UV2yBIWYupYiAyQuc
hWFQMr9CeQFRecFCjLyy5uWVicmLQ52XF/l2LmFJnp7VXuNor7X1NHkGWvLX
lGpKLNx8A3NttX3ftqFdW7379wyjxYYHJvbtHd61079rh2/71v6ZiY4t4+3A
WKh52Lt61N88EWqZCrdOD2+cCndMhDaOBzeBvFqbq1ZXF5bmWUBeYg6JQ80C
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
HZrsf2jvBARf+7aH9u4aPXBgdvvOsS1bQxB/jU32z4CtdvqnZwemt/TPzA5s
nfVumw1snfFtmfTNjILChgZ62ysr81UqUFcOgbCSQslk0nLIhPRFeX05eV2d
/8nyQksOqVk0WmY2K2sVI2sVPl25Cv94af97eeHTFv95k/+cKfieJfSWI/SW
Hc15zkP+Zh09Yxs9Yx2PS0+ZRk6Zw4npSaP/hMn3ltl31OZ71u17xuM74kSX
37B43zR53zGiwAKsvmz3vuTwHskLvuwJHs0NHnMG37YHT9rgAuaA5TedwTdc
l189YQu+Yw2csAZOmVHetaBgy6etoVjetYfecoWO5aLAwhlr6H0z6GPupZP2
0DuO0NvO0PHIPmh7Eje6EV6Ffc5E9gGwo6IHxnEmwns2FGwV2/NMwm7Yxsie
4VPGwClj6KQpBOn7OhRYfsccehduoDn8bgynIpwwBo/ags+4g3/OCz6bG3zZ
ETxuDsJGOCoKHA7ELgNvW0LHraFXHaEXc0MvuUKv20NvWuaA7cds6EtH4S5Z
w9G3PmEJv2MNw5Y3HOEjueHnPeEXPOFXXej290xzO7wbufLIMwy6AMAWeC84
1ctO9L0ghZNj7/KmNXASviaTPxHsW0sgiJ3zpGn4HfPw2+axd0xjpwwT57QT
n5m2fmSehut8wTn4s/xNddksPREvZ+MjU1iS44KvOH/FVoGlklesuTB5GSSU
qLywaEvMyb4J5IWVE+Kj6ZWR1xXyUtBWOaSUOqeswSmvMQmbbJJGi6jewFnn
lLa4FCPry3YOrBveWHtgcmD7SNe2ke6tE/0QVc1M+WZnfFPTQ5NT/bt2Dx+6
c3Lv/hGIv3buDu7aGdq5Pbx9NjAz4Z0aHhgN9a5ZXZnr0Iv4NApxFRG3AszF
55DZDPyNrvNalNd/A3l94ee9IvKirOJQMpi0dBIzg8TKIZGzLBnkv+b3nbP6
zplRc0WeipOBPUJfQ/q2ZvD93PGXTYM/VLTs87TdWdn7Pdfmn2vbntR2vqjv
g9z7gmfyGfmm36vaH5A0POLefE/uxm/ndz2sbfmdsfPv+p5Xdf2XPNNvq9D0
L6LW36rbf+PsfUTdAmf7m677iK7vdXvgDYvvHe3QKa33XRPIK/iuwf+uznvO
NnJS74NluICzxuDp3LHnPIG/lo/8sdD/R2PXRevoBcnABZXvvGX4BcXmk0WT
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
    
    "], {{0, 323.}, {575., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, 
    MetaInformation -> <|
     "Exif" -> <|
       "Orientation" -> <|
         "CameraTopOrientation" -> Top, "Mirrored" -> False|>, "ExifTag" -> 
        38, "ColorSpace" -> "RGBColor", "PixelXDimension" -> 575, 
        "PixelYDimension" -> 323|>|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{575., 323.},
  PlotRange->{{0, 575.}, {0, 323.}}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{3.899743093052505*^9, 3.8997807377024317`*^9},
 CellID->1987742438,ExpressionUUID->"3a1208cc-c3b0-4ffb-808b-7432d5fc9e01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Description",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LongDescription", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a short paragraph explaining your paclet. This is the first \
text that users will see when visiting the main landing page of your paclet.",
          "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLongDescription"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "060720a9-b894-4171-972e-ff1c5e6f71ab"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LongDescription"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Basic Description", "LongDescription", "TemplateCellGroup"},
 CellID->433339604,ExpressionUUID->"2fd44193-7c8d-4285-8be6-e748c47a5886"],

Cell["\<\
A package manager, that localize the given list of remote packages (paclets) \
and keeps them up to date similar to NPM.

Currently only Github is supported\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8997431025826683`*^9, 3.8997431685943823`*^9}, 
   3.899780744088149*^9},
 CellTags->"DefaultContent",
 CellID->441612482,ExpressionUUID->"7e46ccb1-ebd3-482d-abc4-c748023a878a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Details", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Details may include a long description of the resource's contents, \
history, methodology or other relevant information. Give references here if \
they are directly relevant to the resource. The details will appear above the \
examples on the webpage for the resource.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetails"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "3cc1cec5-eee9-4aa8-8cc3-e9357ba0115c"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Details"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details", "TemplateCellGroup"},
 CellID->484110581,ExpressionUUID->"12ceb020-2141-4c90-bd0d-f6f4118ea0fd"],

Cell["Example", "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.899743182631015*^9, 3.899743183669414*^9}},
 CellTags->"DefaultContent",
 CellID->889292814,ExpressionUUID->"9ad7ef2b-a823-4af3-89fe-bb71e980b99e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Main Guide Page",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"MainGuidePage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose one of your documentation guide pages to feature as part of \
the main landing page for your paclet. This guide page should correspond to a \
general overview of your paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoMainGuidePage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e5424293-3c93-40a4-a0bf-472e03e9de6f"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "MainGuidePage"},
 CellTags->{"Main Guide Page", "MainGuidePage", "TemplateCellGroup"},
 CellID->587602718,ExpressionUUID->"2093df15-ba2d-4947-9635-5e437d9d6306"],

Cell[BoxData[
 TemplateBox[{},
  "MainGuideChooserTemplate"]], "MainGuideChooser",
 TaggingRules->{"Refreshing" -> False, "Relative" -> True},
 CellTags->"MainGuidePagePanel",
 CellID->614786987,ExpressionUUID->"dfd81203-4c64-4aed-8c43-13888026aebc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleNotebook", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide examples showing how to install, configure, and load your \
Paclet along with some basic usage. This section will be displayed on the \
main landing page for your Paclet when deployed to the cloud or published in \
the Wolfram Language Paclet Repository.\n\nThe usage examples should provide \
a succinct overview of what types of features users can expect from your \
paclet. Detailed examples should be reserved for the corresponding function, \
guide, or tutorial pages.\n\nThe default content appearing here shows the \
recommended structure for this section, but any of it can be removed or \
changed as desired. Use additional cells and cell styles as needed.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleNotebook"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "43e3e894-4a32-4c02-8d33-28bcaa620d6d"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExampleNotebook"},
 CellTags->{"ExampleNotebook", "Examples", "TemplateCellGroup"},
 CellID->365974185,ExpressionUUID->"e32b0765-140d-4704-9729-e1a8ec1c91ac"],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellID->462042388,ExpressionUUID->"c5b65110-ae73-4fba-b502-659dcf95ea54"],

Cell[BoxData[{
 RowBox[{"<<", "JerryI`LPM`"}], "\[IndentingNewLine]", 
 RowBox[{"PacletRepositories", "[", 
  RowBox[{"{", 
   RowBox[{
   "Github", "->", "\"\<https://github.com/KirillBelovTest/HTTPHandler\>\""}],
    "}"}], "]"}], "\n", 
 RowBox[{"<<", "KirillBelov`HTTPHandler`"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.899743281805772*^9, 3.8997433036014757`*^9}, {
  3.89974526988083*^9, 3.899745270375111*^9}},
 CellID->822249881,ExpressionUUID->"0fbd41c6-483f-4d59-993f-aa68bce24031"],

Cell["\<\
now it will keep HTTPHandler package locally in the project's folder and keep \
it up to date.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.899743310573029*^9, 3.899743332634139*^9}},
 CellID->1853025127,ExpressionUUID->"f34d935c-b8b8-4610-a298-ee5ef97c3b60"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->871630328,ExpressionUUID->"931e043b-2bc2-469f-b3e9-e1cd6e50150a"],

Cell[CellGroupData[{

Cell[TextData[{
 "Creator",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this paclet.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f1d06b07-8880-4145-b23a-12fdb821a32b"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Contributed By"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Contributed By", "ContributorInformation", "Creator", "TemplateCellGroup"},
 
 CellID->57534933,ExpressionUUID->"dbf4dac2-199e-4c7b-a913-1bc68600afb9"],

Cell["Kirill Vasin", "Text",
 TaggingRules->{},
 CellID->72347480,ExpressionUUID->"298cde8c-0a86-4263-9da9-fad3232545a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source Control Repository",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SourceControlURL", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "If this paclet has a corresponding source control repository (e.g. \
GitHub), you can provide the URL here.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceControlURL"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "47baacf3-7917-4a4c-884a-101f0ce1dafc"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SourceControlURL"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Source Control Repository", "SourceControlURL", "TemplateCellGroup"},
 CellID->221376991,ExpressionUUID->"36912b24-84a9-4f39-9c36-bb062923e3af"],

Cell["https://github.com/JerryI/wl-localpackages", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8991259264416103`*^9, 3.899125926586451*^9}, {
  3.8997432135896597`*^9, 3.899743217516705*^9}},
 CellID->74996155,ExpressionUUID->"8ad77644-2e35-4ad4-a53b-3f21211ca536"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "License",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LicensingInformation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Choose a license to specify the terms and conditions regarding how \
your paclet can be used, modified, and distributed. If submitting to the \
Wolfram Resource System, this also includes the terms outlined by the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"publisher agreement\"", "Text", ShowStringCharacters -> 
                False], BaseStyle -> "Hyperlink", ButtonData -> {
                 URL[
                 "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], None}, ButtonNote -> 
               "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], 
              MouseAppearanceTag["LinkHand"]]]], ".\n\nSee the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"style guidelines\"", "Text", ShowStringCharacters -> False],
                BaseStyle -> "Hyperlink", ButtonFunction :> 
               Symbol["DefinitionNotebookClient`ViewStyleGuidelines"][
                "Tag" -> "ChoosingALicense"], Evaluator -> Automatic, Method -> 
               "Queued"], 
              MouseAppearanceTag["LinkHand"]]]], 
           " for additional information about choosing licenses."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLicensingInformation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0ba6dcb2-3eed-4899-9507-cd65b2194562"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LicensingInformation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"License", "LicensingInformation", "TemplateCellGroup"},
 CellID->279656547,ExpressionUUID->"c9adc21e-011e-446e-ad3a-347132f18e0e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           RadioButtonBox[
            Dynamic[
             CurrentValue[
              EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
            "MIT"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"MIT License\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
MIT"}, "HyperlinkURL"]}, "RowDefault"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           RadioButtonBox[
            Dynamic[
             CurrentValue[
              EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
            "Apache-2.0"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Apache License 2.0\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
Apache-2.0"}, "HyperlinkURL"]}, "RowDefault"], FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           RadioButtonBox[
            Dynamic[
             CurrentValue[
              EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
            "CC0-1.0"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"Creative Commons Zero v1.0 Universal\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
CC0-1.0"}, "HyperlinkURL"]}, "RowDefault"], FontSize -> 12, Editable -> False,
             StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           RadioButtonBox[
            Dynamic[
             CurrentValue[
              EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
            "None"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"None\"", 
              "\"A license is not required for personal deployments\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           RadioButtonBox[
            Dynamic[
             CurrentValue[
              EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
            "Other"}], "\" \"", 
           StyleBox[
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}, ""], (
              CurrentValue[
                 EvaluationCell[], {TaggingRules, "RadioButtonValue"}] = 
               "Other"; CurrentValue[
                 EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}] = 
               Replace[#, "" -> Null]; Null)& ], String, FieldHint -> 
             "Other License Name or ID", FieldHintStyle -> {FontSize -> 12}, 
             ContinuousAction -> True], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJylVE1PGzEQBfLBV4QAtVKPq6jXJLTqqSfCBkokCihOe+jN7M4SC6+99djA9tRrf1Nv/\
Sn9JR3vJpvQElUtl5V3bD+/efNm+\
q0OazCbS2DNC2czZztsPZxAdANxsoL1M4EUaQwtpJg0yv9kDesjJyFZxdpI3yW1Msy23w/\
HwZmIQCGw2s+v3+jg5mmegZFC3bC1H9/Z4cTaDN/2egZQOxMBdu+\
0TAxPI6ld3I102rvkkQQ7gkyjsNrkPVlCYo/wWY0+\
ywjs9zMeTWDGIXjdPVjC492TeJTPdDz81ny9jNXL0AC34haCUKepVhh8AqOD21fdg+\
CDorhBLpfwHDyJZxgedOgVKmi5WGC4MeJ3R/\
oekGLbY0gzyS1QwB8pWDfb51pBm71p94MpYCAwUNoGBj47YSAOEm0CYotacRnEkEmdp6AsttnzSwPW\
5mOtpRXZDJ/\
VPWbFooFbQ0WOOxEgY4quD3LFUxGRcq3QGUNQH7l0QD7cOb6lFamoVQhSzlhia8yvr4W69njI9lkGk\
UgExFMHDAdsxSd74lTk7xLyPhUh007Fx/cZiYo+uoY1Bt7W//fs7ojHQh85a7UqbrLGhZ2AeSruI+\
l4lajSkke+iHUmtQ1XZ4Iy6tdzJ+X022TWENZsFzcLnU+FsuxFwa/qk3OeQkC1LPDLwzvzw344+\
McWW58k1bQlvkDYqmK7IcWEctphv5Ab62NTqdFhG5dGk11szp6VLxO7oSITpYUSNHgusuLarHXmrx3\
HwvIrWjVOuESY5zQA8v5jOw+k/J3+o9KS6yqjkq5L5J+\
iDyDhTpYFLfWu9vaGdNb4RCrbLVqwKpsftFq6VKFf7wyVBUOWtIUYbLOvcuauEGj8bocOrU6LZpnmO\
Q/6yYxFYxHglNYfuewx0imyf03lwXj9h0xao+l8GtP4Ys1yJHVYvfhtLfQH/gK4wD9R", 
   "RadioButtonValue" -> "MIT", "SpecifiedLicenseID" -> Null},
 CellTags->{"LicensingInformation-RadioButtons", "RadioButtonsCell"},
 CellID->253890516,ExpressionUUID->"0cda9f25-ee3d-4f05-a0f6-6775e8d3ea8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the paclet in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "33f12ed3-959e-46a3-8968-1f47d6994023"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->913860664,ExpressionUUID->"7526864d-d688-4225-87f9-7e441fa3bd54"],

Cell["Packages", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.899125939059265*^9, 3.8991259393849697`*^9}, {
  3.899743221820261*^9, 3.899743230675535*^9}},
 CellID->1833806963,ExpressionUUID->"b61f7790-de3b-42fb-a481-a04bc0f57ed8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your paclet. These choices \
determine which pages your paclet will appear on when published to the \
repository.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "dd7df859-5cba-4f0f-9c66-5add495b205b"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->651640710,ExpressionUUID->"74aa1861-70e9-4f94-b217-c9e12f1ac40c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud & Deployment"}], "\" \"", 
            "\"Cloud & Deployment\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Data Manipulation & Analysis"}], 
            "\" \"", "\"Data Manipulation & Analysis\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "External Interfaces & Connections"}], 
            "\" \"", "\"External Interfaces & Connections\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geographic Data & Computation"}], 
            "\" \"", "\"Geographic Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
            "\"Graphs & Networks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Images"}], "\" \"", "\"Images\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
            "\"Machine Learning\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            False, {False, "Scientific and Medical Data & Computation"}], 
            "\" \"", "\"Scientific and Medical Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Sound & Video"}], "\" \"", 
            "\"Sound & Video\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Symbolic & Numeric Computation"}], 
            "\" \"", "\"Symbolic & Numeric Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
            "\"Time-Related Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Visualization & Graphics"}], "\" \"", 
            "\"Visualization & Graphics\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            "Core Language & Structure", {
             False, "Core Language & Structure"}], "\" \"", 
            "\"Core Language & Structure\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Engineering Data & Computation"}], 
            "\" \"", "\"Engineering Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Financial Data & Computation"}], 
            "\" \"", "\"Financial Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geometry"}], "\" \"", "\"Geometry\""},
           
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Higher Mathematical Computation"}], 
            "\" \"", "\"Higher Mathematical Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            False, {False, "Knowledge Representation & Natural Language"}], 
            "\" \"", "\"Knowledge Representation & Natural Language\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
            "\" \"", "\"Notebook Documents & Presentation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}],
             "\" \"", "\"Social, Cultural & Linguistic Data\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Strings & Text"}], "\" \"", 
            "\"Strings & Text\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "System Operation & Setup"}], "\" \"", 
            "\"System Operation & Setup\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "User Interface Construction"}], 
            "\" \"", "\"User Interface Construction\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdjkEKwjAQRRGsbUV6hq7c9RClq4LQ4vQCMY41mCZhZgLm9salbj/vv//\
7qoMCJFmEwxQlROmgHJ6oX3h/7Hh/MSzQgJBxK7fndsF3JopRcGOu+yh+\
U2J0B9VMPiBJguOgBFdPBjm7piDGu1+2HLyN21/YjE6QAqGobwPq3iWIN8a8d7oi+0galxTy0Vlpi/\
IBQ+5Baw=="},
 CellChangeTimes->{{3.8991259577427464`*^9, 3.89912595784303*^9}, {
  3.899743233879806*^9, 3.899743233969006*^9}},
 CellTags->{"Categories", "Categories-Checkboxes", "CheckboxCell"},
 CellID->494100439,ExpressionUUID->"0763b617-738d-4cad-9466-af1e2acc696a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "570b4943-f8a6-4fbc-aa04-8fd983c534c6"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->280622473,ExpressionUUID->"af3fe84c-2624-448d-aca8-f78bfbff4597"],

Cell["Resource Name (resources from any Wolfram repository)", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->694609509,ExpressionUUID->"accd4e06-1f1d-4844-975f-ff17e3d6a4a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Original Source References and Attributions",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
paclet and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "2be6960a-6623-4267-9f29-215918d3de9c"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Original Source References and Attributions", "Source/Reference Citation", 
   "TemplateCellGroup"},
 CellID->687116677,ExpressionUUID->"524924f4-88ed-4124-b358-674e32f43050"],

Cell["Source, reference or citation", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->702019342,ExpressionUUID->"ec02b0c0-7d9a-42fe-8ae5-6334b15ec176"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "647b9f7b-b53e-414d-aec7-313cc4fd0ccb"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->179193585,ExpressionUUID->"51397ba0-ec1b-41b9-81b8-4e795ebec514"],

Cell["Link to other related material", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->938599834,ExpressionUUID->"0a0a64de-00a3-48c7-96d3-1fb2647374d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your paclet to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "5754ed1b-b285-4d9a-947d-6a4886bd72d5"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->31633819,ExpressionUUID->"95792a92-cd95-4f9d-8294-eb47c3fca399"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "56c007f7-e711-45ac-a74f-3e14e2a0cfe2"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->267876551,ExpressionUUID->"77dcde33-78a7-4669-b9bb-de488bdf546b"],

Cell["10+", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.899743254183613*^9, 3.8997432544486923`*^9}},
 CellID->101469050,ExpressionUUID->"189a29e0-4631-4c41-b4a1-c6c76b1738b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your paclet is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "305aa985-7276-4755-892e-69b4fe5607cb"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->54346056,ExpressionUUID->"5d1fee2b-5013-4578-ba6b-556577249e94"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Windows", {False, "Windows"}], "\" \"", 
            "\"Windows\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", "\"Mac\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Unix", {False, "Unix"}], "\" \"", "\"Linux\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJw9T0sOgkAMTQQUE+\
MJvAKHIKxINBCq0S2OVSfCzGTaicztrQvYtX2fvlfmBWTAcUBYN4Fd4AI21RvVBx/\
PhNKjJobNVZuH/RKsT71q4AbpxehJhDXjSDPtuaK0C2K00OdhQRLRzybLMTtqE6bZM2+\
9deg5wqGyo+tZ3/WgOTZylMW8IJJ8lZSNY20N0bYMbEfB1D+6HcJoqEoK2NeG0TuP3P+\
JsC1NhHAnlIq7DskGr/AcnTRvezUg/wDD31vo"},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->26815324,ExpressionUUID->"1af256d8-9bc5-48b1-b20c-00dee1dddbfc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your paclet."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "509aba8a-100a-4e00-8c6a-3687ad13149a"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->666988317,ExpressionUUID->"19ea4840-38ab-49ca-9419-7d318c8a70c7"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebooks"}], "\" \"", 
            "\"Notebooks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
            "\"Parallel Kernels\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
            "\"Cloud Access\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 TaggingRules->{},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->1861068245,ExpressionUUID->"347da229-babc-4ade-9f93-23092164847f"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your paclet is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "48aa1422-1a0e-4ec5-ba76-b5702320e499"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->701114648,ExpressionUUID->"fb221001-d61c-447b-b793-4054d4d420e3"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Session", {False, "Session"}], "\" \"", 
            
            TemplateBox[{
             "\"Session\"", "\"Local or cloud interactive session\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
            
            TemplateBox[{
             "\"WebEvaluation\"", 
              "\"Cloud evaluation initiated by an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
            
            TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Script", {False, "Script"}], "\" \"", 
            
            TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
            
            TemplateBox[{
             "\"WebAPI\"", "\"API called through an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
            TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
            
            TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 TaggingRules->{},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->874675160,ExpressionUUID->"212c560e-4da0-4d92-ac6c-a66a58ee219e"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your paclet is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "61571a36-26bd-4226-8c25-37db3da221f9"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->677592290,ExpressionUUID->"48eee440-3276-4c8d-bd69-6bc82886c761"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[True, {False, True}], "\" \"", 
            "\"Supported in cloud\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 TaggingRules->{},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->1139850405,ExpressionUUID->"219262a3-a79a-4ad3-a6ca-552090d98fab"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Disclosures",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Disclosures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Contributors to the Wolfram Language Paclet Repository can include \
a list of disclosures with their paclet. These disclosures tell users how to \
expect the paclet to interact with their environment.\n\nDisclosures should \
be selected if your paclet interacts with the environment in ways that are \
not otherwise obvious to the end user. For example, if your paclet needs to \
write information to local files somewhere to store persistent settings, you \
should choose the \"Local files\" disclosure so that users are not surprised \
to find files that they didn't expect.\n\nFor cases where the interaction is \
inherently part of the paclet behavior (and clearly documented as such), the \
disclosure is unnecessary. For example, an exporter function that's clearly \
meant to write files in a place specified by the user would not be necessary \
to disclose.\n\nFor each disclosure item, additional details can be added by \
starting a new cell under the cell containing the checkbox. Use this space to \
clarify how your paclet interacts with the environment for the corresponding \
item. For example:\n\n", 
           Cell[
            BoxData[
             FrameBox[
              StyleBox[
              "\"MyPublisherID/MyPaclet utilizes the local file system to \
cache data by writing files in the directory \
$UserBaseDirectory/ApplicationData/MyPublisherID/MyPaclet/Cache\"", "Text", 
               "DisclosureDetails", StripOnInput -> False, LineIndent -> 0], 
              Background -> GrayLevel[0.9], FrameStyle -> GrayLevel[0.8], 
              ImageSize -> {Full, Automatic}, StripOnInput -> False]]]}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDisclosures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "198881cb-80fb-43f8-9318-5f6a114fd19d"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Disclosures"},
 DefaultNewCellStyle->{"Text", "DisclosureDetails"},
 CellTags->{"Disclosures", "TemplateCellGroup"},
 CellID->376414000,ExpressionUUID->"556f3b24-d8fd-49c9-acf2-f92bcf73dfc9"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["LocalFiles", {False, "LocalFiles"}], "\" \"", 
            TemplateBox[{"\"Local files\"", 
              TemplateBox[{"DisclosuresLocalFiles", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following during loading or normal usage:\n\[FilledSmallSquare] Creates, \
deletes or modifies local files\n\[FilledSmallSquare] Imports data from local \
files\nFile operations related to normal paclet installation and loading are \
excepted.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresLocalFiles"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQhpC0SVOVC3DgZCGOlAfgUjXbFiK1ahXnBdzd2cSq17Py2G2XKw/By/\
AI8BKII+IZGLvZTVoVib141vP3zcw3Phzuy4H0jQG5dR58Hfy+3M6WkF9BUT6l/\
qkmL3dOMVfmRBsgtp56qKjVlT3qz4IB/n82w5v4m1zGyUWU0Yd1w5m6meAtyz0az6GqjfLAF2V/Zf/\
ySFNukIIDWmcrB9TPwBiOsM3WR8qrcouGJ05Vybt3p5ZfetkSkUD4pSaBtddohS5Fg8GJWuUGvCi0g\
9ybRhQIJJRtBJZsD6JEY/BG24UogouHQVXEE52w6CouI5BawIedn1+/\
icwBQ6d3ogCOypHYqsJCl5plsy46GU+\
rGp0nUTBwUTqs7lnEEhksOBXxknAQu1IIj23eFXRtyStjkhkjLzqEyoGA2xxqdnsvd8/\
QwdSWOIfbbjC0M1H51cJhsHGgo49ONadwDcaV6ftz0Fnupr6eKbfghNmLdYR0n0hyP8KP7/\
H7vY6wN4tpGNmM8QXKBp1mNK24hVJ/hpYiHGpLcjOgWMX5dUCjw+\
Cx4jrzfxQzOopdV5cs9ucuQKcYRh7M1aIjpnwredzcsDbO4wRr/cfRf1V6h3B1ZpNs0snPs+\
ecYvcTmiJD5jFzoHxCe8fXyoQ0oETI15nR+RVTK5KDh6QZgKuSXr6ZWqMttLjOa7DgJsF7tO1m3N+\
44YWLLPGNHG8UwXt6nohO7RL9VzE8CbsEp5kxG2JX3uDB5V1zjwt91/\
TBiTIEj43jgaabh3y1iXmzrO0MTagsbUx9X+\
5NrQdXO46amjU6tI0MlwT8Lu3OgHihc5g3NT9XF2k5/gLmcbOx"},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-LocalFiles"},
 CellID->1911625595,ExpressionUUID->"65f34ae2-5b80-4b4b-a072-eebcd943a0b3"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "WolframAccount"}], "\" \"", 
            TemplateBox[{"\"Wolfram account\"", 
              TemplateBox[{"DisclosuresWolframAccount", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Requires, uses, or records any \
information related to user\[CloseCurlyQuote]s Wolfram ID\n\
\[FilledSmallSquare] Interacts with the user\[CloseCurlyQuote]s Cloud account \
or Wolfram account\n\[FilledSmallSquare] Creates, deletes or modifies the \
user\[CloseCurlyQuote]s cloud objects\n\[FilledSmallSquare] Creates or \
executes cloud deployed scheduled tasks\n\[FilledSmallSquare] Uses cloud \
credits, service credits or Wolfram credits\n\[FilledSmallSquare] Makes \
WolframAlpha calls", "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWolframAccount"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQhjZpkzZKL1zoyeLEgbwAlyrZtBCpVas4iLPrnU1MnPXisZsuJ94CceJFeA\
R4iYoj4hkYO9ltGlGJPSTj8cw3f9+43+rxJnelBr536V3hXY/\
vJzOQc0izJ9g4V0ia5sjBArOnq3O2g42x10Dn3bFZhmNQ86P3RmdWLJiQ0vjc0X1rLJYDcwtIRocTW\
BRaOCBF1lj7PB8qlNqgt4Br9/\
7au4mNBLQmlH3yGAonsj1snZFFRNhZXfNvu8nMGATmZgqZKZwyOVMZK423rBBSg2OpsiCdLllqAJnI\
S2YysgeWGa3NUuXT1wd3X76zMXz0ZIqvmMfwaywjR2PTlZPKM2MXIkawEEpJmTPB1t59/\
oqsqn80jGij3IEV0iFbKjeL8WrTRBufVo0KcbZ6FwESCxSD8kiBqqDMyW5hUpUpkh/\
AyQhnrj9QmbjpG1zgFqQP8soqhUKbklJHOYOU5khFCJyv3N5hbSctpMpRdApyoyRUis1s16roeiHmU\
Pegr4uZYFJojbxzYSyMqHcTuK3JgwcDIedTS8WmNOL2GyvKc7gBbbP4/\
TmpLTtx5hfCTlWOybN7hKiP5H2I8PNH+\
H7fI3THIQyNeSxS5TFp1jft0UJMgatPUNGYoPY4JQ7pGufXCbb73pkwePlIMe1hmJC4JrExsR7qi1b\
g6ERM6+XhLznNiBhU4Ty+ABXGYcBYl19nuf5PBsmglo+SIwrTeWt0mhjaNeIM7XD39EZoH1kbF+\
Y40UrOifqBTBY2Wc1fjHKtcqhyuywgBzvwzpm82l7efZhmj7eurCnAupIfbhRD78hlXEaslv2/\
CqKJ5DOwinZrQ6xLbG4pV00+JRLG5jfPhEb411i2buq58OPNnLdL20+\
M9oscNxjQ49242IUl5Ni0dj8vub9GIIfOGJAeHgmTsqAn9Sq+P38Bxkb37g=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-WolframAccount"},
 CellID->188532398,ExpressionUUID->"0190f571-e4a6-41be-a606-d0bf34703e54"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "ExternalServices"}], "\" \"", 
            TemplateBox[{"\"External services\"", 
              TemplateBox[{"DisclosuresExternalServices", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Makes requests to external services \
(http, ftp, ssh, etc)\n\[FilledSmallSquare] Creates or uses service \
connection\n\[FilledSmallSquare] Send emails", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresExternalServices"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVN1u0zAUZqPp2q3ahsQVcGFxBWh9AW6mNuug0qpNcV/\
AS04aq44dfOxt4UV4F8QjwEsgLhHPwEnaZKX8CF8k9vn5zt9nj3pDHnBXKuDdS+\
8K74Z8L8wgXkKSPsDOhUSSBFMHOaY7q3O6i53IK6Dzw8jcVsdKzB9N7hxYLRRDsDcyhsqjF4nbsbmj\
/S4ezCEvlHBAgrSz9np6JjFWBr0FbAB44x9gJwSlCGePfM6EE2kXe+dW5DXG7krNP+\
6EmTEIzGUSmSmcNJrJlJXGW1aIWIFjibQQO1WyxAAyoUtmUrIHlhqlzK3Ui9f7Xz98YjOxJL2Fdx7Q\
IXOGwXZZ7EXmXHHC0uqDmJ0wcPHL2ju0QPVRDpZ5pP/ahcVGawpPedVmHHTCIBdSIR/\
MjIWpTs2cAjW9xf2xiJcLa7xOqPr+GyvKC7gBZdN6/ThtLQd1O2bCLqTG8PE9Qi2vZ/srwpfP1fp+\
j3AYVWGoA5FIpMcwaDX9aS4WwOV7aKZMUF0eCwXJGufbKfZH3plcOBn/pZj+\
GdAIxDVtO3ProVX0qvHNxaLlFn/FV21qcP7FjgbloEJZN6DNc/0Px+G43R+\
FRxRo8NaoJDRERXBAJD+c3AjlRRW1ZtOTUMl4SbywLKcsmKQ0bF7r+\
fOpVlJDk91lARrs2DtndENufryd6JD3rqwpwLqSH2wURFftsuYqNrfhv0qiqegMrHSQbGzbIoMt4ar\
Rk0SuBhCcC4Xwp9FsadrZ8GebOf9e3F5olM81bvBgyA+nmuwKS9h14/ojXXJ/\
jUDPySACpJsZw7ws6N25qi/oTyONokw="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-ExternalServices"},
 CellID->1125633861,ExpressionUUID->"0a132b91-e9af-4936-b45d-4509cc16d3bd"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "WLSystemConfiguration"}], "\" \"", 
            TemplateBox[{"\"WL system configuration\"", 
              TemplateBox[{"DisclosuresWLSystemConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Creates persistent local scheduled tasks\
\n\[FilledSmallSquare] Modifies WL system or environment settings\n\
\[FilledSmallSquare] Modifies <+$Path+>, <+Directory+>, or similar\n\
\[FilledSmallSquare] Installs additional paclets or dependencies\n\
\[FilledSmallSquare] Creates or imports non-public <+ResourceObject+> content\
\n\[FilledSmallSquare] Makes FrontEnd modifications\n\[FilledSmallSquare] \
Internal handlers", "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQpiVpk7YqFxASJ4O4lYg7Qq2aTQuRUqWKI/XsrGcTE6+\
98thtlxfhZXgEeAnEEXHlyqyTbNOqFexlbc/M529+Ph+\
3OrzJfamBbw2DL4Lv8O1kBukcZPYIGwOFdNLse8gx21jss01sjIIG2j8e2atqWx3z5xcDhiWSK0uty\
dQ0OOEVrTawNRJXXXsNSM67Y8gLLTzQQdZYxrKewlRbDA7wYsAjSnILpImNBLQmsG0K7Akvsi1snTq\
RR6DNhZn/2Uxm1iIwP1PIbFHFMpWx0gbHCpFq8EwqB6nXJZMWkAlTMpuRP7DMam2vlJm+2/\
nx5StLHBBNZAU4JJJgPNM2FZphOgNJFZDMC5xjdD6zUmWKvG+qYB0Dc6mcNXkVi+A9Yd9xf3/w+\
lz42cHhG1r2IjPrympL4ahypYWLEX2DXmhNhKVUVVpEZJEQVq4SCjASTEqgt9iTTeWFdeRmrOkUYaJ\
VSneNAKkmKQwnn+jOg8OqaVWOC3piTqGnRN2fGMnyyDaNncAlGw+\
uojATRmoqEN87sw76JrNjuK5nBHe6Ip1PnQ1GUuvaH5woB3AJ2mXx+31Ue+\
7FXp4JN1UGk6c3CPE8zuhthO/fqu/XDcL+qLqGSjwSUgVMmrWl3c/\
FFLj6DKtpJagtTr0EucT5eYTt4+BtTkmmDyTT7gGVW0xo2Ri7ALWhVc3eWExrjfC3nIpK1Vrh/HO+\
V1C7FdSyCjXZ5T/pJt16/\
SR5QrftfbRaJpYUBR5Isfsnl0KHCBn18CKhbs9psh010QFTxMXl0c5f9Y1WBlYUhzRA4LrBe2tWGuX\
P7mXb4a1zZ0kXvuS7a6nR4zGMksOVsv8rL+\
qPmYFTHuTass60eedwUfITUkFsRfNUaIT7mnTHUneJv1zn/ECG24nVITe4NhYdvh/nvnB0QSxh+\
9iUPExI2h2+t1LUuCzoOT2P2vwLc4v1vg=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-WLSystemConfiguration"},
 CellID->1344855404,ExpressionUUID->"762a5fb6-7855-4956-b8cc-6716f50548d0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "WLSystemSymbols"}], "\" \"", 
            TemplateBox[{"\"WL built-in symbols\"", 
              TemplateBox[{"DisclosuresWLSystemSymbols", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly modifies \
definitions of built-in symbols such as those in System` or other internal \
contexts.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemSymbols"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVMFy0zAQpSVuEpJJDnAqFw03DuEXOonTlsykk46VmV5R7HWiiSx5tFJb8wV8HPwFR4\
ZvYO3EbkiBwRevdrVPu/ueNO6MeMBdoYCfLbzLvRvxdriBeAtJ+\
gJbc4nkCWYOMkxPduv0FFuRV0Drl5F5KJelm7++\
m7OVl8qNpGZYZCujypxOJB4m5hGQNvaWkOVKOCBH2trnnU8lxsqgt4B3c14gHcb36QG2QlCKYNqUMh\
VOpGfYubIiqyBOd2H+\
5STcGIPA3EYiM7mTRjOZssJ4y3IRK3AskRZipwqWmUSmEpAlkEoty72Ukz6rnaGPN0wggZbQFNjV9o\
kZy4zbgCWfA6uFYrEh69HhB96/MRZmOjVLWtejwlcTEW/X1nidUC/dayuKOdyDsmn1/\
bxodvar5m6EXUuN4ZsnhMpfUfU7wrev5ffjCWEQlcdIvY5EIj2GQRPpzjKxBi4/\
Q00aQZ3xWChI9jjfL7A79s5kwsn4L810p0ADFSsyW0vroQl0SjKWYt1Ihb/\
nNHMacI3zD6prkF4Jsu+/KXP/DyfhpLGH4ZDO6X80KgkNyQockGQHl/\
dCeVEeWknjPFQy3rKUOMuoCKKMzKyK83czraSGurhFDhrsxDtndC1UPjyqc8Q7t9bkYF3Bewft0L1Z\
VLrDWtj/1RFxoklJ0kFyYDY9BkfO3ZgvE7kbf3AlFMKfiDmKNMzwt4c1P+\
utHRrlM40HIhjxwayUeW4Juhpbd6wL7lcI9DT0I0C6ZDEsi5zekNvqrv0CBTKNJA=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-WLSystemSymbols"},
 CellID->719390353,ExpressionUUID->"9340073c-fe10-492a-9278-57105f2508a6"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["OSConfiguration", {False, "OSConfiguration"}], 
            "\" \"", 
            TemplateBox[{"\"OS configuration\"", 
              TemplateBox[{"DisclosuresOSConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Modifies OS settings\n\
\[FilledSmallSquare] Makes any use of <+SystemCredential+>", "MoreInfoText"], 
                   Background -> GrayLevel[0.95], FrameMargins -> 20, 
                   FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresOSConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVF1uEzEQpiW/bZTwwFN5sXhDVS6AEFXithCpVao4F3B3ZxMrXnvlsZsuJ+\
AGXIYjwCUQj4gzMLvJbtPwI/yy9ozn83zzzeyoMxRN4XMNojUNPgt+\
KNp8CdEK4uQJNq4UkqU58ZBicrA5J4fYmAUNdH46s+\
viWJjFs6lgkTWJWgQnvaLdAXZmcj2294B063gOaaalBzIkjW3QybnCSFsMDnAq+\
KPwJjY4aE0wbQo5l14mLexcOpmWEIcbt/h4wJfWIjC/\
VMhsVsQylbDcBscyGWnwLFYOIq9zFltAJk3ObEL3gSVWa7tWZvH66Nunz+\
zaxipRdIW4IHhPDtw45GobGOglCn5zKnKksnAHMRivpD59K3rX1sHEJHYO93Wd8Ggso9XC2WBi4tJ9\
52R+BXegXVKun2f1zV5J7lq6hTLInz8glPZSp8cIX78U68cDQn9WPENpz2SsAvJm7elOUrkAoT5ApR\
hBtUQkNcRbnO9n2B0Fb1Oqf/QXMt1zoILKW9o25i5A7egUYszlou4T8UpQzUmMCucfUlcgxwXIln+\
d5vbLx3xc7wd8QO/03lsdc0ttBR6oX/\
sXd1KHErJsjROuVbQikR1LKQmmKAuXln7xcmK0MlAlN83AgBsH762pGlUM9vIcis6Nsxk4n4vjHTo0\
NNOy77Bq7P9iRJqYJTjlId7Z1hybe8ZNmS9itSl/81JqhD8Js+eplREvdnP+\
jVubWx1SgztNMBT9ifHgMkfQZdm6I5OLcEvDMRS9GSANWQTzPKMfyE05a78Ax3SL9Q=="},
 CellChangeTimes->{{3.89912599307894*^9, 3.89912599316789*^9}},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-OSConfiguration"},
 CellID->460730261,ExpressionUUID->"fba081b5-0efa-4c1b-b8e6-2ac8ab9182f2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            "LocalSystemInteractions", {False, "LocalSystemInteractions"}], 
            "\" \"", 
            TemplateBox[{"\"Local system interactions\"", 
              TemplateBox[{"DisclosuresLocalSystemInteractions", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Executes Shell or RUN commands\n\
\[FilledSmallSquare] Uses external evaluators via <+ExternalEvaluate+>\n\
\[FilledSmallSquare] Interacts with external libraries\n\[FilledSmallSquare] \
Reads or writes to streams or sockets\n\[FilledSmallSquare] Launches parallel \
kernels, subkernels or GPUs", "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresLocalSystemInteractions"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVE1uEzEUhpK0SRuVDRKClVWWJQu2CFE107RESmk1Tg/gzLxJrHjskZ/\
ddLgIWw7CEeASiCXiDLzxJNO0oojZjP1+vvf3PR93+\
rzNXamAb194V3jX5zvRHJIFpNkjbI0lkqQ9cpBj9ri+Z1vYir0Cuj+JzbK6VmL+\
YmwSoRiWSNZMagdWJE4aXXl2YrEcmBtAMt+\
bQF4o4YAEWWvlfXAiMVEGvQUMQDzgjDZh2tiKQCmC2yHXE+FEto2dUyvyALVVq/\
mXrWhuDAJzc4nMFJUzkxkrjbesEIkCx1JpIXGqZKkBZEKXzGRkDywzSpml1LO3uz8+f2XDG0i8IxM+\
J2hmLIuvPrLE5LnQKQaTKyQ13FCemsqHa6G8cMYiu5aCvTscrjTDWgGH74PXujBkS+nmt/\
5KTq2wEmrsGESKVdSllVUWzjB0FkQehGhoTq62HAuvkzmZFMIKpUCxBQGCwtcM/XR1rpzOLq+\
Q986NhZHOzIQCrweKuwORLGbWeJ1Sj7tnVpRjuAZls/D9Pmose6Hp58LOpMbo2S1CkAdC3UX4/\
q36ft0i7MdVGOpzLFLpMWo3mu4oFzPg8hOsqUVQ25woAekK5+cRdo+\
9M7lwMnmgmO4J0KDFlI6tifXQKDoVSSZi1hCav+EQGLbG+Q8qrsH2KrBVH5p0V/\
9oEA2a89PoKcXrfTAqjQzRHxzQgu2vWEGYgbovIyWTBZHQspySoS2iYx70/\
GCkldSwTvKiAA124J0zer1Q/PkD+fZ559KaAqwr+d5GebTtF0VdUevudv+\
zMpqRnkNFyXTj2NTavies2z5MZT2O9qlQCH8b1D1NMyn+\
ajPnB2vciYzyucYNcvT5frApLIUIbewe65L7KQI9bL0YkB6FBCZlQS/gZXgb/gAVUNjA"},
 CellChangeTimes->{{3.899743264480146*^9, 3.899743264569089*^9}},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-LocalSystemInteractions"},
 CellID->1814949192,ExpressionUUID->"b8bdbc0e-7f8b-4913-bd5c-bafffc1eeddf"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Other"}], "\" \"", 
            TemplateBox[{"\"Other\"", 
              TemplateBox[{"DisclosuresOther", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Add additional text as needed in a new cell below to \
document any additional disclosures that are not listed above.", 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresOther"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNU91u0zAUhtGsLa06kLjiBov78gpTm25QaVOnui9wGp+0Vh078k+\
77BnhLbhEPAMnaZKWARK+8fH5+c7f50lvzCPuC4X8chF8HvyYd+MtJjsU6QvXuZOONNHcY+\
bSl8d3euE6y6CQ3q+W5lA+\
SzWPFn6LlrS9JRym5hEdmQYrzHIFHkmRdmrPNzPpEmVcsOiOQZHrxKgUBXfJcQYe0kvXu7WQVYEXRz\
N3EyEYCCG9NBoU8/joGTimEQUKJjUDkg8sIWe2RmUOzBsmTBIy1OSpi/NocaqC+\
S2Q3SLTxjNFRRIcrM0eP/HhvbE416lZUbamefd6CsluY03Qgqruf7ZQ3OEelU2r8/\
O69RxWbdyD3Ujt4ncnhEpfDf93hG9fy/PjhDBalmmk3ixByODiqLX05xlskMsnbNZAUJc8AYWixvl+\
7fqT4E0GXib/aKY/Q4Ue1iR2VjZga+iVY1/Bpl0+/\
8AxKefX4PyxyiZ0UIbWXbfF1Xc8jaetfBVfEfrwi1EiNkQW9EjUG93sQQUoU1Wrfx8rmexYaizLKDX\
tmsSssvOPc62kxqakRY4a7TR4b3RDv5qdY957sCZH6ws+OCudWL/ISyzXkPS/+\
qD5a0KVxJYzse0seqY8jvSGCFiNOroF5fBvS3hmabfA357XXHfUjY0KmXZnax7z0Vx7tLklwGpE/\
YkueFg7pO88XKIzwSa4KnL69w+QUN5fC7dukw=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-Other"},
 CellID->993347956,ExpressionUUID->"d44723c4-2976-4264-9b6e-fb30cbd07640"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the paclet documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e7c20ad0-022f-4d3b-b4a9-563f788d518d"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->951557313,ExpressionUUID->"c67ab9bc-8d4d-49f3-ba31-713591bac7de"],

Cell["Additional information about limitations, issues, etc.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->908162033,ExpressionUUID->"05a2ac10-f22e-4f6e-9389-0f4bea114980"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1117, 711},
WindowMargins->{{Automatic, 152}, {Automatic, 14}},
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
   RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
   CacheGraphics -> False], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
   CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
   CacheGraphics -> False, CellOpen -> Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         ItemBox[
          TagBox[
           GridBox[{{
              OverlayBox[{
                StyleBox[
                 TagBox[
                  DynamicModuleBox[{Typeset`var$$ = False}, 
                   InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.90509380223394`16.34420645946119*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.90509380223394`16.34420645946119*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{
                    Style[
                    Dynamic[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.90509380223394`16.34420645946119*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    SingleEvaluation -> True, Evaluator -> "System"], 
                    FontSlant -> Italic, FontColor -> GrayLevel[0.5], 
                    FontSize -> 0.9 Inherited], ""}, False]], 
                   DynamicModuleValues -> Automatic], Setting[#, {0}]& ], 
                 ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                 DynamicBox[
                  ToBoxes[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.90509380223394`16.34420645946119*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   StandardForm], SingleEvaluation -> True, Evaluator -> 
                  "System"], FontSlant -> Italic, FontColor -> GrayLevel[0.5],
                  FontSize -> 0.9 Inherited, StripOnInput -> False]}, 
               Alignment -> {Right, Baseline}], "\"   \"", 
              ItemBox[
              "$Canceled", ItemSize -> Scaled[0.75], StripOnInput -> False]}},
             GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          ItemSize -> Fit, StripOnInput -> False], 
         ItemBox["", ItemSize -> All, StripOnInput -> False], 
         ItemBox[
          TagBox[
           ButtonBox[
            TagBox[
             PaneSelectorBox[{False -> GraphicsBox[{
                  GrayLevel[
                   NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                  
                  PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                   0.42426406871192845`}, {0.42426406871192845`, 
                   0.282842712474619}}], 
                  
                  PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                   0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                   0.42426406871192845`}}]}, ImageSize -> 18, 
                 PlotRangePadding -> 0, PlotRange -> 0.7, Background -> None],
                True -> GraphicsBox[{
                  GrayLevel[
                   NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                  
                  PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                   0.42426406871192845`}, {0.42426406871192845`, 
                   0.282842712474619}}], 
                  
                  PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                   0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                   0.42426406871192845`}}]}, ImageSize -> 18, 
                 PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                 None]}, 
              Dynamic[
               CurrentValue["MouseOver"]], ImageSize -> Automatic, 
              FrameMargins -> 0], 
             MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
            With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "6ceb8720-d1ab-4148-9937-3d2f50e84321"]]]]]], Appearance -> 
            None, BoxID -> "6ceb8720-d1ab-4148-9937-3d2f50e84321", Evaluator -> 
            Automatic, Method -> "Preemptive"], 
           MouseAppearanceTag["LinkHand"]], ItemSize -> All, StripOnInput -> 
          False]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.905093842703733`16.344206463961928*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  
                  GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 TemplateBox[{
                   ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"JerryI__LPM-0.0.7.paclet\"", True -> 
                    StyleBox[
                    "\"JerryI__LPM-0.0.7.paclet\"", "HyperlinkActive", 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File["/Volumes/Data/Github/wl-localpackages/build/"]], 
                    Appearance -> None, BaseStyle -> "Hyperlink", Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   "OEM6eJxLYyzmCEosd8qvSC1OYyxmC8oHsdNYill8MotLglncMnNSgxmj05\
iKuUNScwtyEktSQfKMUHk3Jf2w/JzS3NRifZfEkkR998ySjNIk/\
fIc3Zz85MScgsTk7MR0oGRSaWZOir5XalFRpWd8vE+\
Ar66BnoGeuR5QQU5qiVIwD8gex6J0oEl5JcGMsQDnejLW"}, "ClickToCopyTemplate"], "", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "0c60a067-8ddb-4afa-bc83-a2e1a8dd3032"]]]]]], Appearance -> 
                   None, BoxID -> "0c60a067-8ddb-4afa-bc83-a2e1a8dd3032", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.905093842703733`16.344206463961928*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  
                  GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 TemplateBox[{
                   ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"JerryI__LPM-0.0.7.paclet\"", True -> 
                    StyleBox[
                    "\"JerryI__LPM-0.0.7.paclet\"", "HyperlinkActive", 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File["/Volumes/Data/Github/wl-localpackages/build/"]], 
                    Appearance -> None, BaseStyle -> "Hyperlink", Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   "OEM6eJxLYyzmCEosd8qvSC1OYyxmC8oHsdNYill8MotLglncMnNSgxmj05\
iKuUNScwtyEktSQfKMUHk3Jf2w/JzS3NRifZfEkkR998ySjNIk/\
fIc3Zz85MScgsTk7MR0oGRSaWZOir5XalFRpWd8vE+\
Ar66BnoGeuR5QQU5qiVIwD8gex6J0oEl5JcGMsQDnejLW"}, "ClickToCopyTemplate"], "", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "0c60a067-8ddb-4afa-bc83-a2e1a8dd3032"]]]]]], Appearance -> 
                   None, BoxID -> "0c60a067-8ddb-4afa-bc83-a2e1a8dd3032", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Build result: \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Volumes/Data/Github/wl-localpackages/build/JerryI__\
LPM-0.0.7.paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.328992`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Volumes/Data/Github/wl-localpackages/build/JerryI__\
LPM-0.0.7.paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.328992`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"/Volumes/Data/Github/wl-localpackages/build/JerryI__\
LPM\""}, "FileArgument"], "]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|"File" -> 
                    File["Kernel/LPM.wl"], "Hash" -> 
                    "480caff4e16cc09158de1cd05b47f1f330e1f9adc228da5d8d044965d\
36a717c"|>, <|"File" -> File["Test/test.wls"], "Hash" -> 
                    "6bccf40f52d7c5c12e4f13d2dec9f4ea652a174d18df5ce94daeae736\
f8e7f70"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 2, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 2], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 2, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 2], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 
                    2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/LPM.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "480caff4e16cc09158de1cd05b47f1f330e1f9adc228da5d8d044965d\
36a717c", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Test/test.wls"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "6bccf40f52d7c5c12e4f13d2dec9f4ea652a174d18df5ce94daeae736\
f8e7f70", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}}, BaseStyle -> {ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> GrayLevel[
                    0.7490196078431373], Spacings -> {0, 0}, Alignment -> 
                    Left, BaseStyle -> {FontFamily -> "Source Sans Pro", 
                    FontSize -> 14, FontWeight -> Plain}], LineBreakWithin -> 
                    False, ContextMenu -> {}, NumberMarks -> False, 
                    ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztHctyI0nRsh62PH7N7uyyCweMEARL4PF7bG9shEdu22Pv2jMal\
2cGgtjYKXeXrA63upuulme0BBHwARyAKwf+hANfwIGAK+\
yB4AJHuC1Zj35K8nS3PR57VzpYcldVVmZlVmZWVlZ1I0dHD/\
GLTesloY0ivb1nusSxHeJiV7dMeNzI0dKhxSo0CrSwr1O3MUxLR/\
gEnqAR1FZVQim6hdqtFnY6uwRrKPfTRp5Ob3VM3NLVA0trG4Q1H/\
ab5xFx6eRRxyaUuM8tm5jVKi3uYIMSr/\
SOV0pax0RDgA6pVlHxEOB3oM6tI9KyDXgoMBSA83Sqjk2CiEFU13KifRYOAQ2vkyIdeeDoWrSx9z3C\
gLCiEi1vtl3XG4YxSZGA+\
82d7bqjnwEKz3ccy3S3Te2QUKvtqASVd7Y3dbeFbYqm5cBAo0dAJ3EY8gyVLWLgDtHopOhip22qbMT\
7jU7hyGkTn4yxmm0T7GATBr/\
w0DKDkvImpgS5HYM0hmK0l7fPsNHGMDK0XGu7VgtYrPqlpQPiNi0NjdUdAmPr6mchoDVDPzFbxHS9A\
aUlhTBJ8b6DqnstfEKQ/jmBERuRI+a3ivRbPNJbhDpD/DN+338CDceVtuMA4KeAMEETOzC+\
CrZ3iX7SZCgU69YL6DNH79SOqWW0XRKuTycO8ImpN3SVy7DyJbB7dMfBLc7UPB3lw8PEt1j5x+9/\
VwGA5S3dAZlhNEP54YNNxTIsx/kG//x1w3mbf77YcH7MP3/\
bUN73KR5HrqPbj8w90267gRSLwkkFUAfE6ljTdPMkXjzG0eL4xPg4zksOsHOimzQsxuxbGVKG4r/\
741IKhN2Dk/O/vbmdj8/t+\
CSTTdFUpY5Vg7g1R23CeFVQofLhTAWNAZwt0sBtw0XvSJnfc0mrZpqW0CUo/59f/yGkO3Yqc0+\
Bd8DwuS3s4rkHuttsH8+9MGYNS8WGjdVTkCQ6d9zWDW3uY+IAwM8+268fzM7fnb+\
7etfmaFR81cN6uwhhtypHgKnBRDAzUdBbBLbUmKg8f3dpcW19ffE5yldoBY1QolqmRlG5gsSvChp93\
Mamq7udQDpQx3Txyx3LadE86NEoqV6tacncrjnq1UAjChtnk4ZGR0zHwj5pBNUKQG13nR6qYow9Av1\
FXBIX6CmJDMOQK4HEuHT3kxwhr1cEMsFmWeJeleH0nYU0bCGmYe+\
gpvWCTUHzRGmCelaZhowP0a2HbTBpDkzt066ySTApoCxAF+\
mUqa58wGUOmsuDUBfxpq9ZDPJHln19BWCa8cTQTVK3qC7NqGBwTsn5tYQNfSO2XzEsmtn2x43GwPgP\
jH8G418aGP+vjPG/AKnvVjbZoApGCtG3nE52qrvWh6iwo4PyhlVg73UaWs/K/AoaZ6Brzkmb6SOU+/\
TSRmVaSvYBBuVBqJt9PIohefB+lXosh8vR5fAsU/\
qoQwH284eAANHYvH1eF4PhmZsqFSvh2luz6NaeCbYOG2wMa7lZVGRj46uL2vCsYAQbFc6QiU+\
IYxJjDgbyLow1Kuxi2kT3l9fmVdxoLJOFe6o6v76wsqaRBVWbXzleXm0sNJaW5slCYx1r6uLimoZXt\
DVtfnl5/d6KtnQPry6sqj06OgL858A3cKEf6nd071hVG8vzjZVFbVVdURcWyXJjYUlb1Ii6Dt3jeyu\
LeGF1WVtY0xorKllf1jDBZHXpXmONrDZW52fRZM0wrBfbLCLAFSo36LNoXA4EamKbKdHvhoZSjh9Sw\
ZY+Z9EJ4vBqtfysJxw0D2D5H6Bgpl/bT0hnC9jfYR5Fj6ZiCPoUMfrBDynQb/eDvq+\
3dGA5INAXeeE3eTR+7xw8heHkFXP0O/0q1sAY80pOjhvh/fuXiGAiSH3HGuacYFJItF5Nh/\
KRFLVkVHOif/mr+\
1B7WqhBou2ZDR1kiTF52PdbfEbCs551AyeZVcr1qSQ9smDeMhRZoCyEao1SS4X2U+\
FngDEtiVUF4HQ7VPSU6+7YQ6jZVn1vQSpjMS7B8r+rA2+Y+/WsDINsowL4ibg2NIvKwKIj8E+\
Iq9yBCShYLx+MgSoaTMXBVLwBU7FwE+dgHbvNgITbWzq1+XISWKVYbVgsQaU7/\
lMhCqIAeDjOvIVwzSn2IFapjCzHZd3QoJ9J9kyulCwzXLCraxoxmVNED2DZW3jYNsC7GHtia+\
CqMFKUHJ1P5t1YbRfWLntb1arnFv0oWUMbkIVGQ1GfKmHjs7pFq1UeKEjTrJmt2Qk8BFTzdCLiEoaW\
eRzaQiJosO4FNSrKmNu7RWzD6oAPWhRhgBFa4EVBhMP/5h4zfLOIB3yPBR4tWxMfWG1KrDNYaMOa+\
IGD7aau0u6ogr/\
gV0rnBGMAMQSOPdGcJf750x8jUIMpUYZnnX1yRgxZ84sNFkmoW0bnBOCE4m3yWwQDuIYYPeTIY0P5k\
v8v4gnKl+fXSgIoQetEfV0eoGSkXZRF8DCZFFaRoassXnHKAzN3EzXia71dy9AyKIcuw04LYGwpGvV\
cA7E0QEUuxr3iU/GgClu7gN7qFRwb5636RWOKIkjLfxeUYrB+3wT0TxxQqVpUsBv88++\
N8wJsPCJLRz0uvXK6jm+fQfNdbGoGD8dNcbqDOGFkRks7Pix1hP+vxIbH21gELBIN++1v2OfPG84C/\
/x9w/kJ//xrA43u6+Yp6zsW3vTN3zjvWgEZOQV7xPTl8F4DBmU1Ed/VJlFP+\
bY0ZkE6sOAp18qNYVh/\
J5OxNrdZfLc5ZSfpDFU6y5TOIKW0Q6mn65uZ4J5Tf6O0knT85PJILHkGmuk8zSRdZE8zeR7zQDMNNN\
P11UwypnCzNBOPyX7FNVOipU46DeUH2aWKCoLuAx010FHXREcF+\
2B5WBBJGb3eGqonyjzMLJWT2M9Orp38UOq1VlLD5yqn3jt315mN+T6SJ/+XgVAeK0zLUOWjy+\
bkaDxJqWcH/flz8b3Tm8xK7kBkY6Uf8H8DHPVcoQlkY3PHsVq1Y+\
ss8USM7GzfPO4Nf1Un4kVzC24yK2/oROyRtBjPp73FE+\
heugfEbEczCt9SrJbNTPD2S9shlCXL0rVkI6sGMI8c/eQEuFiixWdNXWWhhpEnJsUt8pguJoNmYOo+\
kry6EmkItmCKiCOamWz6UXISle7WK5la+wdZenCwIbe+\
LoZXdjGQ3WcjjDFkExh76ruy6cCdGNYxNpDqWIYBKxF/\
3rzGtQ7r45nuNuOpaAmFGOhne8TVhPWrXgOvm2QzzGvFKlfTzEqvUbrudLpPcEOsOar0w3Td7YUap+\
u2yduInXS+913jAYHSAXbVZiplFCJ7vGbAut/\
ELLU5vJaKhn2gYnocH6dleuqogxi9uUStsGEEQ5eyyTWjxOykpsRrclWULCVqRcPpIsyJSaaXVZG5F\
Mk1SatfcikJC+e7pG4bz4tJpUOb+Iyw/BsW/8g/\
tJiPN7qDdaPtkMeJQ3waAKDEDWUDZ2RsMmdEp94mu481mL4dh5D0Ash37ZmD+\
7Glm6GILYtwwt9Hjuwh43CmnnTph4COQD9NlhaWp6PMD5Bn88ZEyhajCxXZ2a2ZxmjgZRa3f9YGTz2\
DBRSOPhq6GJCQLcjDz4sBi1gTVJLnu8RmwhBwQkavtl8Ste0SHk++\
lyKeHEovG0SV32BUOa1biEoOaVmhg2QTbHr0PIYmJnzhIhM+\
qbVkvN5u2W7ndVvLDNpUuH2pfZ4sLmYitQV1yUBtDdTW10tt5bGmvVpn0fIWMXj6vOOrLz570yuudI\
u8iBB3LfKiQh2kQ2ZY/Kb0oYIlWCHixoVCalkWDqhcoyoxtZiqQgXmdveepckQlpvVAGUwPd/\
cZAtx99VTLmSzLkOyxrZIT9EaPyRnxKFkZiBiXwURC7P5qmVMnusPS1cJ4A3k6ubLVezKhldLVNhj8\
DZxir6pDATkm4pld2a8gxkzrjWjGLp9bGFH6xaaXEKf1LXkJRke3ISSowIurPuki7jU7k+\
Y8nc55ez5K6hOGrH2qc4QFLv0AeopCBHG10G2SMB53Zx5SF7MKISfhr00xifjkAq9cnyuhvOCdM76c\
8m+Es5f+ggFViW4+8Uy3R3c0o0OmkL85qAZhE06U3esYBOdVeIntyajDZ/xu3BosW5g3Qyqb+\
lnOkuVEweogxb+NTPRfLX//Zd9/hnkq43G78+KXC8TZLPRyIVR4Q38fGwD/\
3WQObWvm2TTIfiU7V3qZtf9WuFN2fiBxXMv32JhWsaz+AVbKe7n0EUQ/rG/\
zR3KWUgmuZS4bfupTl7wmFO646/FPrvqImGYr+\
bSkcFXpz2PpyaD47Zs9rhKR6psW4NnNadr7oXzk9lzuRWSZQ8kf15GQjpqpe8Y2stJSW+mw7+\
J3UfRjJUM3MfLcx9TSnR4UmaTFCFqmU+Lp53B/Fh/RmUoNOlrTWXpnnKZDtC/\
E2oE1tChRBaMhwp20Xs/YJpmxrRmDMs8Ic4MUxhgGT/\
I0mv8UsAjB7OjHqjTOraMq0oEiqDwduRmAnGvXvxuhYS7J65lb2KHd+\
GbwlxCU9jCp4Q7LxqAAADfD7WSVcVNIqh97FnMY+BZOqM5ON3yJvXmq6Q/l076JU9TacXqseWCo+\
6Jqbw5o0RLQvaiTtzIIbENrJKEy68WP0vmJypXq/Ec18bwtU08lip/\
iOU1YvOUb95FTqhd45zpYXaTq8s2RugPE+8LV31aw+2TIWv7WzK9YGTZfvHhlHp6prCU2zNVh/\
AF2YVzXtPuhacZ1FSJkJEcxtRjL7u6QNpmJlalp/\
BKU8aTLj2ZveVD74APlYbFCXOcPfjbhpDauO4X+obdRGODhnWUsbjC8adE/zp9DUhWfd0jjBK/\
rTd8QiJ8H2/4Ft/egZTIrdrdxzRCISRlqke8JGkQsBdVt6VNe+\
Zg2ybyZRnRa65HjizxXpAyfXdLrKyfy295s3H4/\
nSZelngQprWXEsY0tlOBUP6Kh6MIvfQfCCpMyElJk9ZDn5KTM78rHoBYzcDjGYURumI+88+\
lPRet4BT3vR8HB9UJudIQBsNqa/\
ClSVyjANnTQ07GrsTOemq6fV46r7Mcb2fdRIOeXcNhK8jiFIlk3r1z73iFIm60VNDY4pD4OmTJ8C1d\
Mu9rihvLlbUPyIb6Waa7aSeEe0pdnR8bJBAN6eXBe+iOw+\
FaXlHs48k8mrk6Hue7vLfbeQpseDVAGPipUEcrVhYeHRb03sWvCXaMJqlOqQyfeyyLqX+\
VmXLUvlV1+JtTOw+7ENCgU56Gfd1e93kfo5yv7g0pIsVKM9+M/\
yEvIibE1sZvPKkD0KDV54MXnlyzitPgsOy8beJ9HA3Q+\
DRuJxv7JC1kcZQoNynzGX0XwgXmsW14iyaqIdfHIG2LuP1D7Oo7L+1Afr236HglA8/OFue/\
MsGGpEvWJhFd3q99MA/17+aFR00WY+8NoC9QkZal6/Dlfw36upkdm/5+30NapfDc6kuwf8BYHLCyg=\
="}, "ClickToCopyTemplate"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         CurrentValue[
          EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], Alignment -> 
        Automatic, ImageSize -> Automatic, ImageMargins -> 0, BaseStyle -> {},
         DefaultBaseStyle -> "OpenerView", BaselinePosition -> Baseline], 
       Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.905093842703733`16.344206463961928*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           
           Grid[{{"Paclet build completed successfully.", ""}}, Spacings -> 
            0.25], 
           RawBoxes[
            TemplateBox[{
              ButtonBox[
               TagBox[
                
                PaneSelectorBox[{
                 False -> "\"JerryI__LPM-0.0.7.paclet\"", True -> 
                  StyleBox[
                   "\"JerryI__LPM-0.0.7.paclet\"", "HyperlinkActive", 
                    StripOnInput -> False]}, 
                 Dynamic[
                  CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                 FrameMargins -> 0], 
                MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
               SystemOpen[
                 File["/Volumes/Data/Github/wl-localpackages/build/"]], 
               Appearance -> None, BaseStyle -> "Hyperlink", Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              "OEM6eJxLYyzmCEosd8qvSC1OYyxmC8oHsdNYill8MotLglncMnNSgxmj05iKuUN\
ScwtyEktSQfKMUHk3Jf2w/JzS3NRifZfEkkR998ySjNIk/\
fIc3Zz85MScgsTk7MR0oGRSaWZOir5XalFRpWd8vE+\
Ar66BnoGeuR5QQU5qiVIwD8gex6J0oEl5JcGMsQDnejLW"}, "ClickToCopyTemplate"]], "", 
           
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "0c60a067-8ddb-4afa-bc83-a2e1a8dd3032"]]]]]], Appearance -> 
             None, BoxID -> "0c60a067-8ddb-4afa-bc83-a2e1a8dd3032"], 
            "LinkHand"]}}, 
         ItemSize -> {{Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
           Automatic}, 
         Alignment -> {{Left, Left, Left, Right, Right, Right}, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Build result: ", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Volumes/Data/Github/wl-localpackages/build/JerryI__\
LPM-0.0.7.paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.328992`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Volumes/Data/Github/wl-localpackages/build/JerryI__\
LPM-0.0.7.paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.328992`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"/Volumes/Data/Github/wl-localpackages/build/JerryI__\
LPM\""}, "FileArgument"], "]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|
                    "File" -> File["Kernel/LPM.wl"], "Hash" -> 
                    "480caff4e16cc09158de1cd05b47f1f330e1f9adc228da5d8d044965d\
36a717c"|>, <|"File" -> File["Test/test.wls"], "Hash" -> 
                    "6bccf40f52d7c5c12e4f13d2dec9f4ea652a174d18df5ce94daeae736\
f8e7f70"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 2, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 2], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 2, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 2], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}]}, ImageSize -> 6, 
                    BaselinePosition -> Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/LPM.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "480caff4e16cc09158de1cd05b47f1f330e1f9adc228da5d8d044965d\
36a717c", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Test/test.wls"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "6bccf40f52d7c5c12e4f13d2dec9f4ea652a174d18df5ce94daeae736\
f8e7f70", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {ContextMenu -> Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztHctyI0nRsh62PH7N7uyyCweMEARL4PF7bG9shEdu22Pv2jMal2c\
GgtjYKXeXrA63upuulme0BBHwARyAKwf+hANfwIGAK+\
yB4AJHuC1Zj35K8nS3PR57VzpYcldVVmZlVmZWVlZ1I0dHD/\
GLTesloY0ivb1nusSxHeJiV7dMeNzI0dKhxSo0CrSwr1O3MUxLR/\
gEnqAR1FZVQim6hdqtFnY6uwRrKPfTRp5Ob3VM3NLVA0trG4Q1H/\
ab5xFx6eRRxyaUuM8tm5jVKi3uYIMSr/\
SOV0pax0RDgA6pVlHxEOB3oM6tI9KyDXgoMBSA83Sqjk2CiEFU13KifRYOAQ2vkyIdeeDoWrSx9z3C\
gLCiEi1vtl3XG4YxSZGA+\
82d7bqjnwEKz3ccy3S3Te2QUKvtqASVd7Y3dbeFbYqm5cBAo0dAJ3EY8gyVLWLgDtHopOhip22qbMT\
7jU7hyGkTn4yxmm0T7GATBr/\
w0DKDkvImpgS5HYM0hmK0l7fPsNHGMDK0XGu7VgtYrPqlpQPiNi0NjdUdAmPr6mchoDVDPzFbxHS9A\
aUlhTBJ8b6DqnstfEKQ/jmBERuRI+a3ivRbPNJbhDpD/DN+338CDceVtuMA4KeAMEETOzC+\
CrZ3iX7SZCgU69YL6DNH79SOqWW0XRKuTycO8ImpN3SVy7DyJbB7dMfBLc7UPB3lw8PEt1j5x+9/\
VwGA5S3dAZlhNEP54YNNxTIsx/kG//x1w3mbf77YcH7MP3/\
bUN73KR5HrqPbj8w90267gRSLwkkFUAfE6ljTdPMkXjzG0eL4xPg4zksOsHOimzQsxuxbGVKG4r/\
741IKhN2Dk/O/vbmdj8/t+\
CSTTdFUpY5Vg7g1R23CeFVQofLhTAWNAZwt0sBtw0XvSJnfc0mrZpqW0CUo/59f/yGkO3Yqc0+\
Bd8DwuS3s4rkHuttsH8+9MGYNS8WGjdVTkCQ6d9zWDW3uY+IAwM8+268fzM7fnb+\
7etfmaFR81cN6uwhhtypHgKnBRDAzUdBbBLbUmKg8f3dpcW19ffE5yldoBY1QolqmRlG5gsSvChp93\
Mamq7udQDpQx3Txyx3LadE86NEoqV6tacncrjnq1UAjChtnk4ZGR0zHwj5pBNUKQG13nR6qYow9Av1\
FXBIX6CmJDMOQK4HEuHT3kxwhr1cEMsFmWeJeleH0nYU0bCGmYe+\
gpvWCTUHzRGmCelaZhowP0a2HbTBpDkzt066ySTApoCxAF+\
mUqa58wGUOmsuDUBfxpq9ZDPJHln19BWCa8cTQTVK3qC7NqGBwTsn5tYQNfSO2XzEsmtn2x43GwPgP\
jH8G418aGP+vjPG/AKnvVjbZoApGCtG3nE52qrvWh6iwo4PyhlVg73UaWs/K/AoaZ6Brzkmb6SOU+/\
TSRmVaSvYBBuVBqJt9PIohefB+lXosh8vR5fAsU/\
qoQwH284eAANHYvH1eF4PhmZsqFSvh2luz6NaeCbYOG2wMa7lZVGRj46uL2vCsYAQbFc6QiU+\
IYxJjDgbyLow1Kuxi2kT3l9fmVdxoLJOFe6o6v76wsqaRBVWbXzleXm0sNJaW5slCYx1r6uLimoZXt\
DVtfnl5/d6KtnQPry6sqj06OgL858A3cKEf6nd071hVG8vzjZVFbVVdURcWyXJjYUlb1Ii6Dt3jeyu\
LeGF1WVtY0xorKllf1jDBZHXpXmONrDZW52fRZM0wrBfbLCLAFSo36LNoXA4EamKbKdHvhoZSjh9Sw\
ZY+Z9EJ4vBqtfysJxw0D2D5H6Bgpl/bT0hnC9jfYR5Fj6ZiCPoUMfrBDynQb/eDvq+\
3dGA5INAXeeE3eTR+7xw8heHkFXP0O/0q1sAY80pOjhvh/fuXiGAiSH3HGuacYFJItF5Nh/\
KRFLVkVHOif/mr+\
1B7WqhBou2ZDR1kiTF52PdbfEbCs551AyeZVcr1qSQ9smDeMhRZoCyEao1SS4X2U+\
FngDEtiVUF4HQ7VPSU6+7YQ6jZVn1vQSpjMS7B8r+rA2+Y+/WsDINsowL4ibg2NIvKwKIj8E+\
Iq9yBCShYLx+MgSoaTMXBVLwBU7FwE+dgHbvNgITbWzq1+XISWKVYbVgsQaU7/\
lMhCqIAeDjOvIVwzSn2IFapjCzHZd3QoJ9J9kyulCwzXLCraxoxmVNED2DZW3jYNsC7GHtia+\
CqMFKUHJ1P5t1YbRfWLntb1arnFv0oWUMbkIVGQ1GfKmHjs7pFq1UeKEjTrJmt2Qk8BFTzdCLiEoaW\
eRzaQiJosO4FNSrKmNu7RWzD6oAPWhRhgBFa4EVBhMP/5h4zfLOIB3yPBR4tWxMfWG1KrDNYaMOa+\
IGD7aau0u6ogr/\
gV0rnBGMAMQSOPdGcJf750x8jUIMpUYZnnX1yRgxZ84sNFkmoW0bnBOCE4m3yWwQDuIYYPeTIY0P5k\
v8v4gnKl+fXSgIoQetEfV0eoGSkXZRF8DCZFFaRoassXnHKAzN3EzXia71dy9AyKIcuw04LYGwpGvV\
cA7E0QEUuxr3iU/GgClu7gN7qFRwb5636RWOKIkjLfxeUYrB+3wT0TxxQqVpUsBv88++\
N8wJsPCJLRz0uvXK6jm+fQfNdbGoGD8dNcbqDOGFkRks7Pix1hP+vxIbH21gELBIN++1v2OfPG84C/\
/x9w/kJ//xrA43u6+Yp6zsW3vTN3zjvWgEZOQV7xPTl8F4DBmU1Ed/VJlFP+\
bY0ZkE6sOAp18qNYVh/\
J5OxNrdZfLc5ZSfpDFU6y5TOIKW0Q6mn65uZ4J5Tf6O0knT85PJILHkGmuk8zSRdZE8zeR7zQDMNNN\
P11UwypnCzNBOPyX7FNVOipU46DeUH2aWKCoLuAx010FHXREcF+\
2B5WBBJGb3eGqonyjzMLJWT2M9Orp38UOq1VlLD5yqn3jt315mN+T6SJ/+XgVAeK0zLUOWjy+\
bkaDxJqWcH/flz8b3Tm8xK7kBkY6Uf8H8DHPVcoQlkY3PHsVq1Y+\
ss8USM7GzfPO4Nf1Un4kVzC24yK2/oROyRtBjPp73FE+\
heugfEbEczCt9SrJbNTPD2S9shlCXL0rVkI6sGMI8c/eQEuFiixWdNXWWhhpEnJsUt8pguJoNmYOo+\
kry6EmkItmCKiCOamWz6UXISle7WK5la+wdZenCwIbe+\
LoZXdjGQ3WcjjDFkExh76ruy6cCdGNYxNpDqWIYBKxF/\
3rzGtQ7r45nuNuOpaAmFGOhne8TVhPWrXgOvm2QzzGvFKlfTzEqvUbrudLpPcEOsOar0w3Td7YUap+\
u2yduInXS+913jAYHSAXbVZiplFCJ7vGbAut/\
ELLU5vJaKhn2gYnocH6dleuqogxi9uUStsGEEQ5eyyTWjxOykpsRrclWULCVqRcPpIsyJSaaXVZG5F\
Mk1SatfcikJC+e7pG4bz4tJpUOb+Iyw/BsW/8g/\
tJiPN7qDdaPtkMeJQ3waAKDEDWUDZ2RsMmdEp94mu481mL4dh5D0Ash37ZmD+\
7Glm6GILYtwwt9Hjuwh43CmnnTph4COQD9NlhaWp6PMD5Bn88ZEyhajCxXZ2a2ZxmjgZRa3f9YGTz2\
DBRSOPhq6GJCQLcjDz4sBi1gTVJLnu8RmwhBwQkavtl8Ste0SHk++\
lyKeHEovG0SV32BUOa1biEoOaVmhg2QTbHr0PIYmJnzhIhM+\
qbVkvN5u2W7ndVvLDNpUuH2pfZ4sLmYitQV1yUBtDdTW10tt5bGmvVpn0fIWMXj6vOOrLz570yuudI\
u8iBB3LfKiQh2kQ2ZY/Kb0oYIlWCHixoVCalkWDqhcoyoxtZiqQgXmdveepckQlpvVAGUwPd/\
cZAtx99VTLmSzLkOyxrZIT9EaPyRnxKFkZiBiXwURC7P5qmVMnusPS1cJ4A3k6ubLVezKhldLVNhj8\
DZxir6pDATkm4pld2a8gxkzrjWjGLp9bGFH6xaaXEKf1LXkJRke3ISSowIurPuki7jU7k+\
Y8nc55ez5K6hOGrH2qc4QFLv0AeopCBHG10G2SMB53Zx5SF7MKISfhr00xifjkAq9cnyuhvOCdM76c\
8m+Es5f+ggFViW4+8Uy3R3c0o0OmkL85qAZhE06U3esYBOdVeIntyajDZ/xu3BosW5g3Qyqb+\
lnOkuVEweogxb+NTPRfLX//Zd9/hnkq43G78+KXC8TZLPRyIVR4Q38fGwD/\
3WQObWvm2TTIfiU7V3qZtf9WuFN2fiBxXMv32JhWsaz+AVbKe7n0EUQ/rG/\
zR3KWUgmuZS4bfupTl7wmFO646/FPrvqImGYr+\
bSkcFXpz2PpyaD47Zs9rhKR6psW4NnNadr7oXzk9lzuRWSZQ8kf15GQjpqpe8Y2stJSW+mw7+\
J3UfRjJUM3MfLcx9TSnR4UmaTFCFqmU+Lp53B/Fh/RmUoNOlrTWXpnnKZDtC/\
E2oE1tChRBaMhwp20Xs/YJpmxrRmDMs8Ic4MUxhgGT/\
I0mv8UsAjB7OjHqjTOraMq0oEiqDwduRmAnGvXvxuhYS7J65lb2KHd+\
GbwlxCU9jCp4Q7LxqAAADfD7WSVcVNIqh97FnMY+BZOqM5ON3yJvXmq6Q/l076JU9TacXqseWCo+\
6Jqbw5o0RLQvaiTtzIIbENrJKEy68WP0vmJypXq/Ec18bwtU08lip/\
iOU1YvOUb95FTqhd45zpYXaTq8s2RugPE+8LV31aw+2TIWv7WzK9YGTZfvHhlHp6prCU2zNVh/\
AF2YVzXtPuhacZ1FSJkJEcxtRjL7u6QNpmJlalp/\
BKU8aTLj2ZveVD74APlYbFCXOcPfjbhpDauO4X+obdRGODhnWUsbjC8adE/zp9DUhWfd0jjBK/\
rTd8QiJ8H2/4Ft/egZTIrdrdxzRCISRlqke8JGkQsBdVt6VNe+\
Zg2ybyZRnRa65HjizxXpAyfXdLrKyfy295s3H4/\
nSZelngQprWXEsY0tlOBUP6Kh6MIvfQfCCpMyElJk9ZDn5KTM78rHoBYzcDjGYURumI+88+\
lPRet4BT3vR8HB9UJudIQBsNqa/\
ClSVyjANnTQ07GrsTOemq6fV46r7Mcb2fdRIOeXcNhK8jiFIlk3r1z73iFIm60VNDY4pD4OmTJ8C1d\
Mu9rihvLlbUPyIb6Waa7aSeEe0pdnR8bJBAN6eXBe+iOw+\
FaXlHs48k8mrk6Hue7vLfbeQpseDVAGPipUEcrVhYeHRb03sWvCXaMJqlOqQyfeyyLqX+\
VmXLUvlV1+JtTOw+7ENCgU56Gfd1e93kfo5yv7g0pIsVKM9+M/\
yEvIibE1sZvPKkD0KDV54MXnlyzitPgsOy8beJ9HA3Q+\
DRuJxv7JC1kcZQoNynzGX0XwgXmsW14iyaqIdfHIG2LuP1D7Oo7L+1Afr236HglA8/OFue/\
MsGGpEvWJhFd3q99MA/17+aFR00WY+8NoC9QkZal6/Dlfw36upkdm/5+30NapfDc6kuwf8BYHLCyg=\
="}, "ClickToCopyTemplate"]]}}, Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         ItemBox[
          TagBox[
           GridBox[{{
              OverlayBox[{
                StyleBox[
                 TagBox[
                  DynamicModuleBox[{Typeset`var$$ = False}, 
                   InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.905093847202843`16.34420646446228*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.905093847202843`16.34420646446228*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{
                    Style[
                    Dynamic[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.905093847202843`16.34420646446228*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    SingleEvaluation -> True, Evaluator -> "System"], 
                    FontSlant -> Italic, FontColor -> GrayLevel[0.5], 
                    FontSize -> 0.9 Inherited], ""}, False]], 
                   DynamicModuleValues -> Automatic], Setting[#, {0}]& ], 
                 ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                 DynamicBox[
                  ToBoxes[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.905093847202843`16.34420646446228*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   StandardForm], SingleEvaluation -> True, Evaluator -> 
                  "System"], FontSlant -> Italic, FontColor -> GrayLevel[0.5],
                  FontSize -> 0.9 Inherited, StripOnInput -> False]}, 
               Alignment -> {Right, Baseline}], "\"   \"", 
              ItemBox[
               
               DynamicModuleBox[{
                DefinitionNotebookClient`Utilities`PackagePrivate`pi$$ = 
                 Mouseover[
                   Dynamic[
                   DefinitionNotebookClient`$StripeProgressDisplay, 
                    TrackedSymbols :> {
                    DefinitionNotebookClient`$StripeProgressDisplay}], 
                   Button["Abort \[RightGuillemet]", FrontEndExecute[
                    FrontEnd`EvaluatorAbort[Automatic]]; 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null, 
                    Appearance -> None, BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {"HyperlinkActive"}, {
                    "Hyperlink"}]], Method -> "Preemptive"], ImageSize -> 
                   All]}, 
                DynamicBox[
                 ToBoxes[
                 DefinitionNotebookClient`Utilities`PackagePrivate`pi$$, 
                  StandardForm], 
                 TrackedSymbols :> {
                  DefinitionNotebookClient`Utilities`PackagePrivate`pi$$}], 
                Initialization :> 
                If[$SessionID =!= 21959080849314238156, 
                  DefinitionNotebookClient`Utilities`PackagePrivate`pi$$ = 
                  ""], DynamicModuleValues :> {}], ItemSize -> Scaled[0.75], 
               StripOnInput -> False]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          ItemSize -> Fit, StripOnInput -> False], 
         ItemBox["\"\"", ItemSize -> All, StripOnInput -> False], 
         ItemBox[
          TagBox[
           ButtonBox[
            TagBox[
             PaneSelectorBox[{False -> GraphicsBox[{
                  GrayLevel[
                   NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                  
                  PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                   0.42426406871192845`}, {0.42426406871192845`, 
                   0.282842712474619}}], 
                  
                  PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                   0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                   0.42426406871192845`}}]}, ImageSize -> 18, 
                 PlotRangePadding -> 0, PlotRange -> 0.7, Background -> None],
                True -> GraphicsBox[{
                  GrayLevel[
                   NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                  
                  PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                   0.42426406871192845`}, {0.42426406871192845`, 
                   0.282842712474619}}], 
                  
                  PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                   0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                   0.42426406871192845`}}]}, ImageSize -> 18, 
                 PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                 None]}, 
              Dynamic[
               CurrentValue["MouseOver"]], ImageSize -> Automatic, 
              FrameMargins -> 0], 
             MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
            With[{
              DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "f9bbd44d-e3d1-46af-b087-a9e044c01753"]]]]]], Appearance -> 
            None, BoxID -> "f9bbd44d-e3d1-46af-b087-a9e044c01753", Evaluator -> 
            Automatic, Method -> "Preemptive"], 
           MouseAppearanceTag["LinkHand"]], ItemSize -> All, StripOnInput -> 
          False]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]]},
TaggingRules->{"CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "CreationTimestamp" -> 3.897320500351506`17.343341111096002*^9, 
  "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "ResourceCreateNotebook" -> True, "ResourceType" -> "Paclet", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {"PacletResource`", "PacletResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "PacletResource", "SourceID" -> 
    "28e913fdefe16776d9d4a0b6f7e1ad001e3994de"}, 
  "SubmissionReviewData" -> {"Review" -> False}, "ToolsOpen" -> False, 
  "UpdatedTimestamp" -> 3.897378475033433`16.343347571405637*^9, 
  "TemplateVersion" -> "1.5.93", "AutoUpdate" -> True, 
  "PacletBuildData" -> {
   "FileHashes" -> 
    ByteArray[{56, 67, 58, 120, 156, 115, 100, 209, 13, 230, 245, 78, 45, 202,
       75, 205, 209, 247, 9, 240, 213, 43, 207, 113, 100, 210, 13, 102, 11, 
      206, 47, 45, 74, 78, 245, 73, 220, 39, 191, 251, 198, 134, 239, 97, 64, 
      145, 144, 196, 162, 244, 212, 18, 36, 17, 222, 128, 196, 228, 156, 212, 
      18, 207, 188, 180, 124, 52, 93, 83, 83, 95, 173, 242, 159, 32, 224, 142,
       208, 133, 16, 17, 132, 232, 242, 77, 204, 203, 76, 75, 45, 46, 65, 213,
       89, 204, 226, 151, 159, 151, 138, 208, 86, 250, 247, 155, 239, 53, 227,
       48, 101, 160, 101, 33, 64, 197, 250, 37, 16, 29, 197, 200, 150, 237, 
      186, 85, 185, 190, 72, 112, 187, 5, 66, 23, 76, 4, 0, 158, 229, 82, 
      32}], "LastBuiltArchive" -> 
    "/Volumes/Data/Github/wl-localpackages/build/JerryI__LPM-0.0.7.paclet"}, 
  "StatusMessage" -> ProgressIndicator[Appearance -> "Necklace"], 
  "TryRealOnly" -> False},
CreateCellID->True,
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (February 4, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
       CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontSize -> 14, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], 
               CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], 
               CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2790153672590285854; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2790153672590285854]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", 
                  ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
                  True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", 
                  ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
                  True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "],
                   "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4138174468017918531; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4138174468017918531]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", 
                  ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
                  True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", 
                  ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
                  True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "],
                   "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1887802176716758884; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1887802176716758884]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", 
                  ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
                  True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", 
                  ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
                  True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "],
                   "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", 
                   ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
                   True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", 
                   ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
                   True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5800166344906378520; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5800166344906378520]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    533841403879783297; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    533841403879783297]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4413051590217973467; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4413051590217973467]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    9150037060110806081; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    9150037060110806081]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2347719643166780208; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2347719643166780208]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", 
                   ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
                   True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", 
                   ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
                   True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3646530685697756512; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3646530685697756512]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1866935765212102190; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1866935765212102190]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert comment\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8817953515714839566; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8817953515714839566]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Documentation Tools\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", 
                   ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
                   True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", 
                   ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
                   True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Open Palette\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1266981032716546660; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = "Open Palette"; 
                    PacletResource`DefinitionNotebook`OpenDocumentationTools[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1266981032716546660]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Function Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7312678540702684447; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Function Page"; 
                    PacletResource`DefinitionNotebook`NewFunctionPage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7312678540702684447]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Guide Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8084030535806498779; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Guide Page"; 
                    PacletResource`DefinitionNotebook`NewGuidePage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8084030535806498779]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {1 -> RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.0025], {
                   FaceForm[{
                    RGBColor[0.96078, 0.50588, 0.19608], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.66}, {205., 212.11}, {246.02, 235.8}, {
                    369.07, 306.84}, {369.07, 117.39}, {205., 22.66}}, {{
                    30.929, 306.84}, {153.98, 235.8}, {195., 212.11}, {195., 
                    22.66}, {30.929, 117.39}, {30.929, 306.84}}, {{200., 
                    410.23}, {364.07, 315.5}, {241.02, 244.46}, {200., 
                    220.77}, {158.98, 244.46}, {35.929, 315.5}, {200., 
                    410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 
                    86.587}, {43., 123.95}, {43., 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.31373, 0.4549, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                    86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.78039, 0.86275, 0.94902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 
                    170.27}, {48.174, 207.64}, {112.89, 245.}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 
                    237.93}, {130.03, 275.32}, {130.03, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.46275, 0.36078, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                    237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.88627, 0.80392, 0.95294], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                    321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 
                    87.791}, {217.61, 124.91}, {217.61, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.43137, 0.60392, 0.3451], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                    87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.8549, 0.9451, 0.8], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                    170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.47, 215.77}, {296.28, 250.59}, {356.47, 285.27}, {
                    356.47, 215.77}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61, 114.06}, {277.79, 79.24}, {217.61, 44.566}, {
                    217.61, 114.06}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17, 78.363}, {182.42, 113.07}, {182.36, 43.614}, {
                    122.17, 78.363}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52, 249.47}, {43.272, 214.76}, {43.335, 284.22}, {
                    103.52, 249.47}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.87, 350.62}, {120.8, 281.08}, {60.68, 315.87}, {
                    120.87, 350.62}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.37, 281.22}, {278.44, 350.75}, {338.56, 315.96}, {
                    278.37, 281.22}}}]}}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], ImageSize -> 50, 
                  ImageSize -> {Automatic, 35}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Paclet Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    GridBox[{{"\"DEFINITION NOTEBOOK\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]UNDER DEVELOPMENT\[VeryThinSpace]\
\[VeryThinSpace])\"", FontSize -> 10, FontColor -> GrayLevel[0.5], 
                    FontTracking -> "Plain", FontSlant -> "Plain", 
                    FontVariations -> {"CapsType" -> "Normal"}, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    FontFamily -> "Source Sans Pro", FontTracking -> 
                    "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {
                    2 -> RGBColor[0.33333, 0.33333, 0.33333]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> 
                 RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> 
                 False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Paclet Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> 
               RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> False], 
              "https://resources.wolframcloud.com/PacletRepository"}, 
             "HyperlinkURL"]}, {
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Open Sample\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], 
                 "\"View a completed sample definition notebook\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"View a completed sample definition notebook\"", True}, 
              "OrangeButtonTemplate"], {
             "\"Basic\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3934291920460873112; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Basic"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Basic"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3934291920460873112]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Advanced\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7566953809767785517; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Advanced"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Advanced"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7566953809767785517]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            TemplateBox[{
              
              TemplateBox[{
               "\"Guidelines\"", 
                "\"View general guidelines for authoring paclets\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5906117565281445171; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5906117565281445171]]& , 
              "\"View general guidelines for authoring paclets\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5074018684552945401; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5074018684552945401]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[1., 1., 1.]], "Grid"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Check\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], "\"Check notebook for potential errors\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"Check notebook for potential errors\"", True}, 
              "OrangeButtonTemplate"], {
             "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8900916902137752067; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8900916902137752067]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], Delimiter, "\"Definition Notebook\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4301941258590251066; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Definition Notebook"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "DefinitionNotebook"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4301941258590251066]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Paclet Files\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1312802444570235546; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Paclet Files"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "PacletFiles"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1312802444570235546]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    6325522174070009817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    6325522174070009817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Build\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1579518736508902704; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1579518736508902704]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5625167833203047250; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5625167833203047250]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8714502586816766511; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8714502586816766511]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5593410685219912767; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5593410685219912767]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"In this session only\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2850084946728613817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2850084946728613817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your paclet submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3196298050911436087; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3196298050911436087]]& , 
                  "\"Submit changes to update your paclet submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your paclet to the Wolfram Language Paclet \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3704832848557640569; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3704832848557640569]]& , 
                  "\"Submit your paclet to the Wolfram Language Paclet \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[1., 1., 1.], 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[1., 1., 1.], 2 -> 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[1., 1., 1.]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.0025], {
                FaceForm[{
                  RGBColor[0.96078, 0.50588, 0.19608], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
                  1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{205., 
                  22.66}, {205., 212.11}, {246.02, 235.8}, {369.07, 306.84}, {
                  369.07, 117.39}, {205., 22.66}}, {{30.929, 306.84}, {153.98,
                   235.8}, {195., 212.11}, {195., 22.66}, {30.929, 117.39}, {
                  30.929, 306.84}}, {{200., 410.23}, {364.07, 315.5}, {241.02,
                   244.46}, {200., 220.77}, {158.98, 244.46}, {35.929, 
                  315.5}, {200., 410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                  "]}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 86.587}, {
                 43., 123.95}, {43., 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.31373, 0.4549, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                 86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.78039, 0.86275, 0.94902], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 170.27}, {
                 48.174, 207.64}, {112.89, 245.}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 237.93}, {
                 130.03, 275.32}, {130.03, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.46275, 0.36078, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                 237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.88627, 0.80392, 0.95294], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                 321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 87.791}, {
                 217.61, 124.91}, {217.61, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.43137, 0.60392, 0.3451], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                 87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.8549, 0.9451, 0.8], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                 170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{356.47,
                  215.77}, {296.28, 250.59}, {356.47, 285.27}, {356.47, 
                 215.77}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{217.61,
                  114.06}, {277.79, 79.24}, {217.61, 44.566}, {217.61, 
                 114.06}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{122.17,
                  78.363}, {182.42, 113.07}, {182.36, 43.614}, {122.17, 
                 78.363}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{103.52,
                  249.47}, {43.272, 214.76}, {43.335, 284.22}, {103.52, 
                 249.47}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{120.87,
                  350.62}, {120.8, 281.08}, {60.68, 315.87}, {120.87, 
                 350.62}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{278.37,
                  281.22}, {278.44, 350.75}, {338.56, 315.96}, {278.37, 
                 281.22}}}]}}, {
              ImageSize -> 12, ImageSize -> 50, 
               ImageSize -> {Automatic, 35}}], 
             "Wolfram Paclet Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, 
        ImageSize -> {13., 13.}, PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.80294, 0.80294, 0.80294]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 3145484069433207908; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[3145484069433207908]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAIJQygMsQf39/d3d3BwcHSxgAsoEiQHFiDAkJCXF2djbD
DYCyQDV4DAFaZG1tjccECACqQXYSsiFA84kxAW4O3D3IhuD3BVZ/oRkCdB5J
JkAAxFNwQ4AhT4YhQF3IhgBjkAxDgLqAeiGpEcgApgQyDAHqghgCyhoUG0IV
l1AxTKgSO1RJJ1RJsdTKO1TJxdQqT5CdREnJRgYgphgnprQHAMBNTEU=
             "], 
             "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlM1Kw0AURoPduHTnui+hDgOSksW0GwMxWWSZYFqKkEJaiO4EX0J8AF9T
T7gahmjs0MxlWqbffHN67/zNy12yPguCYH/OV1K0i6Ypnu8v+JHV++2mrh5W
9aHaVM1NOUO8/P50/c9j4eIhsmkxBonj2BgThqH6Cfoo6C6QNE2jKLoaD0bx
/APhj7TWONW1zs3j9u71KXuXRh8FnVE8dko2BL4QlrdJm7295B+/Gzqjwunz
sSFSBZ4/p9tNOPgHENKTKsZyGOQjdUlRPYSVR6TqowRpOPEzy4awg4isniME
J35mMVdOIx1OAiK74AjB2ZWvlEC6qzEZ4iUTj2viZXe8nBMvJ9bX3fFyi329
J3ZKU162E8LlGXd57b8AKuPmMg==
             "], "Byte", ColorSpace -> "RGB", 
             ImageResolution -> 144, Interleaving -> True], "Pressed" -> 
           Image[CompressedData["
1:eJytlD0OgkAQhYk2lnbW3sLW0lazDZ1G/KHAZDURr8AxuAANp6DmCJT2lPqZ
0Y0xChvZl2ges29fZmZnd7w6zDc9z/OOA/7my/NU6+VlMeRDRcf9NgrWs+gU
bAM9WfUJjp6/B7+1wUYDVDf8MonjOE3ToiiuL8CJELcx8X0/z/OGtFlF02Ci
ta6qikhd11mWJUmyewFOhDiraFB+NcFfHMqyDMPwa/nEWRUfk8+7iVSBprWT
4oP+w4SOSRW/cvjIR+qSPhsTOg+h6lYHAUr07Ho34QQhdM/SBCV6dsFlGiFM
AoRTsDRBiZ5dYvK4Gp1NnGTisCdOTsfJnCgXE6sc3R3l4habfDq+JwYdX7Y/
0JC2gc1rfweIxIKt
             "], "Byte", ColorSpace -> "RGB", 
             ImageResolution -> 144, Interleaving -> True]}, Background -> 
         RGBColor[0.33333, 0.33333, 0.33333], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.33333, 0.33333, 0.33333], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, 
                 ColorFunction -> GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["FileManagerBMPIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {
             12.638179999999998`, 11.}, {11.68506, 12.668}, {
             10.791059999999998`, 11.72708}, {10.62513, 11.553912}, {10.36001,
              11.522025000000001`}, {10.15775, 11.65091}, {9.221229999999998, 
             12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0,
              2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
             0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEiDhBawAGVr+Cwm1VIxP6ZBJyvW3ExfIKZlEPU
lJsKk3kUHNbt4rs6pUXaYdetrr+p2+UdTN5buLpPknF4tX098/M3cg56xw5Y
9eXLOszamGFlLSnnwPR3X/3nR7IOLM97NN6+lXGoSH+7jfusrANbyvry+j3S
DvZPZ+i8Oy/rkLYqISSIXdrhdFOnfdcsWQcfpitXNoVKOWQJq3+3NpF16Ftv
u1nlgKSDuxWzsv5pGYcaz+QtfVqSDg/fi29WtZZxWBTbOmX+FgmHrI+aDMcm
Szu8yWzfr5Yt4TDNuTvnebSMw6EPgoaqRhIOZ8/z+t7kBJqfY7eOd6u4Q+hH
t2cT62Ud5jg9Ny3jFHeI32r0cPovWYcgvy2rJwSJORTlCb+bainnsOOHCMPj
SlGHxcHhdqeN5Ryivu681TVXxOGVbF57m6ucA9eXThvPKGGHU1YysUtPyzo8
uaB0+6eckEMmMBRknso4OO1ZF7/BWtDBtPJU1q570g4cRQGHfKIFHDJWBHoY
dUs5PEh+6Sx+hd/B9HrmkqVGkvD4AQCmgKFd
             "], {{5.49393, 
             6.2940000000000005`}, {6.24061, 6.2940000000000005`}, {6.429096, 
             6.284750000000001}, {6.614185999999998, 6.34661}, {
             6.759240000000001, 6.467319999999999}, {6.890777, 
             6.587419999999998}, {6.962032, 6.759840000000002}, {
             6.953660000000001, 6.937759999999999}, {6.96995, 7.11698}, {
             6.9035910000000005`, 7.293840000000001}, {6.77343, 7.41811}, {
             6.613585999999999, 7.530479999999999}, {6.419682000000001, 
             7.58385}, {6.224849999999999, 7.56911}, {5.49393, 7.56911}}, {{
             5.49393, 5.8706}, {5.49393, 4.4308}, {6.31, 4.4308}, {6.509734, 
             4.41999}, {6.705573, 4.48902}, {6.854379999999999, 4.62269}, {
             6.9925049999999995`, 4.761840000000003}, {7.065081999999999, 
             4.953080000000002}, {7.05406, 5.14884}, {7.08081, 5.3499}, {
             7.011307, 5.551820000000001}, {6.866472, 5.693819999999999}, {
             6.721637, 5.83582}, {6.518383999999999, 5.90132}, {
             6.317889999999999, 5.8706}}, {{9.131169999999997, 8.}, {
             10.356000000000002`, 4.736610000000001}, {11.5814, 8.}, {
             12.221939999999998`, 8.}, {12.221939999999998`, 4.}, {
             11.727999999999998`, 4.}, {11.727999999999998`, 
             5.557409999999999}, {11.774239999999999`, 7.238630000000002}, {
             10.544139999999999`, 4.}, {10.16581, 4.}, {8.937809999999999, 
             7.231200000000001}, {8.986680000000002, 5.557409999999999}, {
             8.986680000000002, 4.}, {8.492740000000001, 4.}, {
             8.492740000000001, 8.}}, {{13.799369999999998`, 
             5.566080000000001}, {13.799369999999998`, 4.}, {
             13.305440000000003`, 4.}, {13.305440000000003`, 8.}, {14.68744, 
             8.}, {15.04065, 8.0207}, {15.387580000000002`, 
             7.899980000000001}, {15.65166, 7.6644999999999985`}, {15.88797, 
             7.431630000000002}, {16.01454, 7.109539999999999}, {16., 
             6.778090000000002}, {16.02146, 6.443669999999999}, {15.8971, 
             6.116339999999999}, {15.659, 5.88053}, {15.38536, 
             5.655040000000001}, {15.03595, 5.542569999999998}, {14.68216, 
             5.566080000000001}}, {{13.799369999999998`, 5.9969}, {
             14.687369999999998`, 5.9969}, {14.908019999999999`, 
             5.982140000000001}, {15.12579, 6.053599999999999}, {
             15.294799999999999`, 6.1962199999999985`}, {15.44357, 
             6.350040000000002}, {15.520309999999998`, 6.559620000000001}, {
             15.50604, 6.7731400000000015`}, {15.516169999999999`, 6.98493}, {
             15.43995, 7.19177}, {15.294799999999999`, 7.34633}, {15.13914, 
             7.49474}, {14.93073, 7.57494}, {14.71574, 7.56917}, {
             13.799339999999999`, 7.56917}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCDFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 3.5}, {17., 
            3.223860000000002}, {16.776139999999998`, 3.}, {16.5, 3.}, {4.5, 
            3.}, {4.223858, 3.}, {4., 3.223860000000002}, {4., 3.5}, {4., 
            17.5}, {4., 17.776142}, {4.223858, 18.}, {4.5, 18.}, {16.5, 
            18.}, {16.776139999999998`, 18.}, {17., 17.776142}, {17., 
            17.5}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
            1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
            0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 
            1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {
            1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, {{{11.76489, 10.215}, {11.80176, 10.266810000000001`}, {
             11.77555, 10.604633}, {11.58396, 10.907632000000001`}, {
             11.290009999999999`, 11.076163999999999`}, {10.99606, 
             11.244695}, {10.63778, 11.256947000000002`}, {10.333, 
             11.10889}, {11.05187, 11.20557}, {11.479730000000002`, 
             9.99811}, {10.727409999999999`, 9.33197}, {11.149809999999999`, 
             9.52223}, {11.50957, 9.82843}, {11.76489, 10.215}}, {{8.1958, 
             10.303830000000001`}, {8.202184, 9.241180000000002}, {
             8.904717999999999, 8.30847}, {9.924319999999998, 8.009}, {
             10.0459, 7.98489}, {11.0395, 8.27055}, {11.746269999999997`, 
             9.149949999999999}, {11.81152, 10.181730000000002`}, {11.44906, 
             9.569830000000001}, {10.80329, 9.1811}, {10.0929, 
             9.147189999999998}, {9.307032000000001, 9.191650000000001}, {
             8.59527, 9.625599999999999}, {8.1958, 10.303830000000001`}}, {{
             9.91321, 7.952940000000002}, {7.39209, 8.45477}, {7.04614, 
             13.89722}, {12.13989, 14.18054}, {11.451440000000002`, 
             14.616627999999999`}, {10.66164, 14.866693}, {9.84766, 
             14.90631}, {9.270579, 14.904569}, {8.706776999999999, 
             14.732987000000001`}, {8.22656, 14.41296}, {5.411620000000001, 
             12.47095}, {6.03, 7.93628}, {9.538089999999999, 7.93628}, {
             9.65967, 7.93628}, {9.784709999999999, 7.941830000000001}, {
             9.91321, 7.952940000000002}}, {{9.29089, 10.69141}, {9.25389, 
             10.639469999999998`}, {9.280137, 10.301669000000002`}, {9.471731,
              9.998700000000001}, {9.765674, 9.83019}, {10.05962, 
             9.661680000000002}, {10.417869999999999`, 9.649429999999999}, {
             10.72264, 9.797469999999999}, {10.00376, 9.7006}, {
             9.575790000000001, 10.908}, {10.3281, 11.574259999999999`}, {
             9.905787000000002, 11.384055}, {9.546119, 11.077912999999999`}, {
             9.29089, 10.69141}}, {{12.77489, 10.73059}, {12.771159999999998`,
              11.738362}, {12.10084, 12.621973}, {11.131339999999998`, 
             12.897090000000002`}, {11.009269999999999`, 
             12.921389999999999`}, {10.0158, 12.635689000000001`}, {9.309201, 
             11.756293000000001`}, {9.244139999999998, 10.72461}, {9.606552, 
             11.33644}, {10.25222, 11.725138000000001`}, {10.962520000000001`,
              11.759090000000002`}, {11.69498, 11.721043000000002`}, {
             12.366620000000001`, 11.339892}, {12.774899999999999`, 
             10.73059}}, {{11.51758, 12.969909999999999`}, {11.396, 
             12.969909999999999`}, {11.270959999999999`, 12.964357}, {
             11.14246, 12.95325}, {13.66357, 12.45142}, {13.741819999999997`, 
             7.11825}, {8.91577, 6.725830000000002}, {9.60423, 
             6.2897500000000015`}, {10.39402, 6.03966}, {11.207999999999998`, 
             6.}, {11.78508, 6.001780000000002}, {12.348869999999998`, 
             6.17338}, {12.82909, 6.493409999999999}, {15.644409999999999`, 
             8.435419999999999}, {15.025630000000001`, 12.969909999999999`}, {
             11.51758, 12.969909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCSSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
              1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxdk3tMUwcUxmtZNl0M0Mel5T56wcyCDxwzSLvSlW9EGUKlDogymTY8hrjI
FHFs0SCyDIaADtRBZMjDuDpgbRgspLRDIqIgGW0zqnF00IVNRjMU0slkQ2B3
y/CPneTk5PfPSb7vOyc440jSO3wej6fk+p+5yLsameclYD7PUMVmKVZYe+By
JiIlOPN58h3eTwTae6cb1N8R+CFa5/P8qwG43ki+PJYlRgW/cJ3OG4B9WVFu
XZgIRiL3XH6FBI9J6/a5SCHaBqdOv1Qvhbb5d9J6VYDXmg4PEdcDse/+iG+R
UYA6e7dr7gqJoZsxxkMNAvR8knAuqoTCqDIjTPNAgNiYNNsXShql5XlL8uNC
tL9574h8koa0w3I3f6sIbwmbDDW7GGR5hyMVcjGCT/Ys/LyfQXxvIaMMIXDr
imc6azf7jOXuw/mZKhZxlmzvcJcIihuKXY2XZXDsnKH0aULc/fXdTX/UMsgO
nEiV7BVAGxF3I7mMxqmWRgVxyB8flGhSb8sptOeoogJ/9MNzmuhKf04P79/y
x1bafhCMFGZR54G1D/wwa0grKPs0AJOdar9HJn+Uk9qbs9UEHl30vbf8pwD2
+rkNA8fFMHgLPh75SIRjbPc2z6QIX95OUJxJJ/7bK0bO5jpbYqzkGY/ufsXm
7pdCNsF2PZ4XofSr9+bqxSSeLivT+5RiVHJ2iTMonHg6boi2iuG8lRtxupbG
X/Y6tmgDgUFda6GqgUHt6pTloAkCql+yzauKZDh/akF11MblWaFbFS5jofB5
uyrMKkH8luXgxS4WXzOV90McUixMOT+z84OwduaYwO1Z0R8E/Z7Q7xe1FGLX
v8+vWx2E8PSITa5rNJRtmr1p1SweWtfNu1sZqL0v+Ng537cXa6pDWmQoXVqz
Zc9FBs2W7nmXhoXT2HBhXEHjLL416bn8Npo2LpgGSUxJq3rGuXxXeHrziWv8
RAbmJ0fv5A1QQFxAePFvNGZto7kSC40c00hcwg4aNWt6nfaTDCbVmfqOZgpl
6p2WbKEM/QVPeGMDJFSh6YaHehkKO4fPejg9SYnftFUlyVASqnfE9Ekx5Ztx
8MX9MvSVJxtLWiRo5c6hxcFgorVjppwnwYcp2153jtHwxKam9HP/0U9demOp
iULNkEuQ6CIwFH8hyRFG4v//9jeFT3Hb
             "], CompressedData["
1:eJxdVGlQU1cUjtRRRAsJSyAkeXnv5UXEBRAELFT6iRSwg0QRRREEMyguCClY
QKUsLTXUEYG61G2wiFQLKorgiBsuuEWMoGg0kYhSKBVEZFNQoI8u/uiduXPm
3Jlzzne+851LKeKCVhpxOJxg9o5Yn9gtws4nDALcf5wded0ajwqVs0yiGYz+
dNAiLMAGg894VsVtUjgnTaMk5TbYlOWbxF0nxd9x/TagBfExs7ppDHQZtRe6
CLDyedu68O9o4MbTiswDAhgdlPgaS2jkpr73UDrYYsRoGikEujWbvP7JFpPO
OXxovEDhTHPY1pLJQniZaAuVFyl4U0amBWohfM90D9afpRDcVLS/Ol0E+c5M
H52BwnZFZdFDJzGq5iz4Rc7Q6HEv4I46IgZVvet0UiIN/q76catpAhdjeTZt
ehrHRKFRnhEErp4Pq07yliIosLwkN4iA47sZdo5lUgwtu709O5LATd66N/Yk
A4fPOnaa8gnoqsruH97AYKt9no/j92IcO/44IrGKwctlLRuWtovwlTbg0pMW
BjV1TW/dxCIoR4A/Z+DrF99vNleIV53aqGyd7KNvvGhtH/QyiNpeuNmSIrBZ
AmIuyZB1zgxru0WYahqd6qqSIbk0dG9niRgEf+287kAZ/PvnVsijCSTK2ZdB
Bi0+503shwmU8bK0vfsZBJnVtZoqJLgh3Os35MTiy/vCJlkjweOsSFHYOSne
39DmLzUiP/bP+fuQiD3uaK7bR8N0fMWvG8eSmJl6dIaij8I2K9c9Wwok//ZP
wStk2amqGgIr5J4fXEdRYDL9hH4TCMjUhiBNFQlNx+1r3q9EWK+2MjRfJSHK
SA6vuixEoLWi1+8yCYVVXBRRaYt0bbRmoIfE7j+uNCw9L0Dhktg1rsEUnPNn
zxkeLUDGmP0eOToKIraNSNIGC06PDc3YSEMjTXPqTLGGfgQPI0W+b+jkODtr
NIyvMfnykBRn/7yXeriVj1QPwmW+gMEJb7W8+Fs+Do3kz2RQ/nprY1qbFQw7
VD+EXmNgmN0eUJBghV69NiOBnd+YB04pPjWWKJhUa9f1OwMP3UzFNMISDXcX
iuObGMQ/hz9faYGTmunk5osM2gsXhnjdMcdLL85v81IYTFXxn2hCzPH25uaH
aoYBE+7Sv0rPw9g9/aapLP+37io/8TrIAyFkiZFLEfr4gWnacR5axEda/R/R
cAve1u1ewMOaUi9iYDmNWt16631tPIRQzXYPh1i9F5mFz08zh73UgZNdTCEl
O/zQpvEWiNDEhLRupv7RkcECLzynt11Pp1CvcjgaV2mJ9PbejhwV+dG3j6j1
NtpCoix+dd6rpxbwdy5JOltE4t1CdsFGW+Ba76SwnBckdjo96CsNMMfAaYk9
LaVwLGHCreU5PHR4CLvupbD7esl/9Z1+Lnp/btihaqagKW3hXDnAxbSJbhLt
YhqHi7oSM124yI8c/ib2Pg2OcUvrm/dmyL3KFpD/pz8uVg3Vua8ZkCJ3XFX9
Pb0ZYpI3FU0tZGBpwlMaL+KCqfyg6pkig/N8wbCXlIchf55gcYEMBEubwzMe
nKtPOcQ2yaCWTPj87ZA5lhx1vetpkKFsZN5TLKG8/fWRDY1sfDy/r7zJEhXB
hu1KtQyRzbW0fq8V8lawwsyXwfvCiYiTnnzk1e5OsI+VgZb0xCxu4GNidp1H
8WQZLr+piN4dZY3//5d/AbYWNr4=
             "], CompressedData["
1:eJxdlAtMU2cUx0uV1xDa8iiUtpeH0nt7L7IKkyJu+Ee7ollxgiiKOpBUp8YB
jhHRuOFjTkEUfKGIlPEGRUHCDAiCPHSohangxkBFBRUFBKcwGQhrp3PJvuTL
l5N8OTnn//+d4xQeGbiGzWKxgnRX/x7QTo2TXWIwt+psaMlsPryo1Xn9SQyM
Iu42Lb7Lh08il/hKxSALGY2H1bbw1f8bpaGSx/uGXbbFYFaxY9NeGj0rHn+z
XGWH4nOfBUWa0+Bf4e8Uldmh6Wnp8bZEKRQRPwgHR+yg+nzZQwMbKe749qky
PQRw3zzdySGHgom6eHPcSQEm+vwSGkEh+btR7yg3ewQsLDudzKaw0PPRBwOH
7HE1qLYg5x6J1pRo6VlaCAOr8hh5J4m5TmyLzGtC9JtXy1LbSQR15aY1bBdB
SF8ZSWNROBBekXtbJkbVwS3dHCWFV/JMrkG+GGkeWWXy4xT4R1tN1zkT8Elb
knH6DYUiUYh6diiBS6a7TbzUUgTq6wgk4D7p6IuBFinGV1w9sD+MQH3o4ZnP
fGm4zXp+xIJPoM28g78mhUaC9KDiw11iFIyycjwf0Him16dPBKVLDPuECQPt
za4/PcUidMqrh7VsBkq/r0c4C4To9WEV+o/9FxtmH/I2eMNA1PvQ095RhK66
Hcmu9xnsvcDBhpciSFcm1Q0VMIgtDkkdPC1GYZX4QVkUA/WpsKDALwlEpytD
aAcGRH7PfLcJAk7GLtqyizQCOTd7LMIdULe+dl91oK6+g3PsYpsd0CwIaBfe
kWL0ym+a5WzH9/2z/jmOKMkXj5+oorC9VBoca+yI8lN9lc52FKLUxMiuTId3
/ZPwCV5xrkZLwPZF+vEhZxLTvvcT+k0hsPhGv8v+BxI0P79aP7dfhI6a0ls5
3RKIdsSuqrkkxNhoopnxQwnCbSLVRIU9XsZ/vOACn0TKk9q7yysFyMhLOTMU
Q8Jd4ztvYrIAW47te71wjIQo1W88zNEOpks2DCONQrMO68Fttm/rUUqh0ckQ
Sdoip/v2LKMGKVpPPBbn9/Cxda9yM3c2De3L+8+LvuXjR33+XBplAwn343pt
sLs3oJx4RMMuR7AvL9oG5d3li711/jnr+9FaY+2McyPlRgy8273CpxPWyPz1
owEvQwZLZXShVZQVgiVjgXM6aZT6SgSzrlviSSLVb66h4bqH/3tzsCU0DkqT
JCWNaas8RtZ28BC7Ndd1nk7/xqaoST4ZPERu60912SRFSFuLRdwZHv645R/O
fU3BPjsmaGYmD17uSWO12yno7TjWy8OpnQEL0h11vOdyVi2Ks8TR+VnHArQk
FIxMHWNmhU/0fKeT0E/rxntWyFdYXkzM0s3THreCyAprrI43PuJfKHkfV9RV
rmzIl7zV844VuGY/5W35WQJrw78UmslW0OPpP5nEEVnLcLHKEu2LZjR3KkgU
RU9p/CKJh2v2Q9z9GhLnq+evuz7ChV6eT411/hQ/ZtWe5KJcq1sQsRQ2zrvs
FefBRfayiPUzX1FozNWRNcrBm9bYp5JN//LHRWmWUYtMRCPZtKb1lw4OrG8o
2gYbaMgqSY7ZEi6KQ0uE5/0ZuC8STPhM5SF+oKHItp4Be/hmIdPJg6p+kDfD
0BVnI4ZOvhq3fJfXFaV6vxlrJDSWJMjZruDXTiwt7bKGjsoweR8Dald29+1U
G/x/X/4Nxp4vbg==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEFBwht4IDCb0Dwg3h/2248ZuDgafrm+xEp
eai4IZSWQ+OzwPkFU9UFyk4xoskzwM2D8VHtg/IZeOD8Bv7pMuWnONHM40Cz
D8pvMITzBeRyZTYeM0RTbwQ3D8ZHtQ/G14fzl0h9q07q1UczzwDNPgMHABhL
Lgc=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}}}, {{{16.75, 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {17., 13.}, {17., 
            4.25}, {17., 4.111930000000001}, {16.88807, 4.}, {16.75, 4.}}}]}, 
          
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {6.75, 
            16.}, {6.888071, 16.}, {7., 15.888071}, {7., 15.75}, {7., 15.}, {
            16.75, 15.}, {16.88807, 15.}, {17., 14.888071}, {17., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerEmptyDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGZigAMHMNlg4IDCZ+CB8xv4p8uUn+J0KJiqLlB2
ihEqzgGlWVD5cHM4HATkcmU2HjNAU28INw/GR7UPxteH85dIfatO6tVHM88A
zT4YrYCd34DgB/H+tgWZ42n65vsRKXk0e+XQ+CxwPqr/YfIMcPNgfJh9ANTj
LzA=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEZBwitB6Eb9OF8AblcmY3H9FHlGQwcgnh/
2248pgvnQ/Sh8RkE4fwHh1WPzy0SQDNPAM0+KJ+BC87fcUqYw/opB5o8B9w8
GB/VPg40czmg7tVHMw/mTi40vjScv0TqW3VSrzSavAzcPBgfZh8Ae5IxSw==

            "]]}, 
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYCYt1Nc98vTzNyYAADHYfN1Z82BKwWhfPvbm2p
ubBZBM633HKibN99YYfGqc7dOcu1HTq+3L7euFnYQXFDUcZEXW2HzTyFa7pv
czikSj6KEN/O4/C99MEcwaUcDhXcKhp1PdwO6VefZ2l/43C4og1SweWgeVrg
+K4dnA79Tz7JX8rndHhzwFLZq5rLwXNug9qhNg6HOO8T7LazuaH2czhccLnx
4cspHjg/Y+LbGvupBnB+7vPfKz9eQvD5QB5kN3To/pv6/Ukip4MxCAgbOsx+
Jrv8hQe3w4/gx0tnPzFyuO/fOz3vkpaDKhvQZ6+NHF6qGXKskdF2eFglss79
oZGDS3fO89+Z2g6aMf2Hvp4wclhSYMt1fbG2QyGI2mDkAHKG6T1tB5D27h5E
eKKHLwDeAYl+
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYC4uKMiW9r9hs6aMb0H/qaoenQLnbz3HdjA4fl
lcc1rS4JOJROlmAJ0zNwSK6/aVsZIQCRFzZwYAADAQeX7pznv1/qw/mTTtd7
7P8rCOcfcVqbeW8jgs+9dVnl8UxBhyD1BZ0bFAUcZpXPWaRsKeigsvNP+5do
AQctK6AJHIIOX70i2yymCTj4JQlEWH4RcLjHxNkl/1jA4W/7l9vXGQUdgLLX
juoKOsjUJBqFGog7XF9cYMs1XdPh6+3rjcVu4hB3XtZ0sEh3yczfIA61X8th
4/4382x0JOD83ul5Qs0NhnD+r7qsPSWTEXyh5gOnFi41dDhZtm++1HtNB5B3
V240dAjaIdf6+qKmw+mFrts+7zV0uP0TqHGLpkOnY8LTC4cMIeHWp+mAHr4A
Ca2MUA==
            "]]}, 
          FaceForm[
           GrayLevel[1.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerGIFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {
             12.638179999999998`, 11.}, {11.68506, 12.668}, {
             10.791059999999998`, 11.72708}, {10.62513, 11.553912}, {10.36001,
              11.522025000000001`}, {10.15775, 11.65091}, {9.221229999999998, 
             12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {CompressedData["
1:eJxlkmtMUwcUxy+Cz20t7eU+2t57C04DZAkGZUWdYf9NpIjxscocoqKiEEtQ
OiQyIgpzW8IcakDdCji0WkGgIZEMQWVgREBBeUatU5GHgHagGErRCnYwIvuw
Dycnv5zz4ZzzOx6RcZqoaQRBLB6PiWz1N7g69SkRbKrJJ74joWxxORy2Uwlj
3cvd9jYpMpffuFPwh4A5EVbKuFGKcHObKGWAR9BEPyvFdHmsZZmdw5WMpKfi
Wgnuq2q6z9oVcK8qe96UK8GLE6J7jjdyxBy68JYwShBpj1iu65eh3v/hI/14
fcQj7rK9k0VYjSJL3S7BY2/e5BhisC9k5t+OzVKkLvLdkkYxuGb0DVfflWJ3
z3zH8a00LLNXLTuTTiLH3RJAPKcw917XeiLWDaWVwbsatBS6dL3f7N1GYaxL
c/KSFwXdrW/zE3Q0Sl4e7kj5hELsxDw/MlMcxpS1ELksdty56Z4oodD66fG4
S0vkeNW6OtJVT6FXPCN3f5MCaaWv3YhzNA4OZM13msPDW/xBad5lBrrGtNZ2
dwER+6NXpi6VIU+8Zd2TEmFy7xtyNG+vrCByBNSyYXWvnDkEekwTGQoFKBpH
Y0TgsaFi/IBrBfzrQy0g29llr1XPwy3ztoX3USKkZ2BWfg+HblNa9rNqJcK/
9yja9FiB9/4ift8B2xU5/Ks/ej3qKkwx+Ve8T81dfnIeDYeynI6cvK0cCsnm
QLOOR/SZhe8O1MpRvGf4lDWAh8GQcuiXUhl0bafHgr/i4bXPTzRcxOLC0qfR
5Z0cWrpHVGNvGFxPTnKySTj0+dYvWqBmwLb3zK0kFUjUVm/XDtIwbQvVeHbI
sKYlY/M7ZwYfen9eYCtgp1g178VFq4HBjLOeUZohGs3pK9oeaGnMs0w/3RvK
YNfK1OxwFQWzOr84mWahm/V1jA1uaFR4/pTUxMIr+k+2XksiqqjB26lTBvvB
mIqEISksJXpz8qgcRz87/8OwQwrT27ovE/QKZDakBFeNSeES//PHYj8OxX3G
kSNiEr8GJHxxoIHDmoXxtM2PhHnQGrIxiIe9XBWavp6E+DcuMaRs3M+zilqf
DBJrM4uzkkkBQceePLT2/ce3z5cX9l+lJ//9gfx/HDhYdbKfZad8ved/AFKJ
jN4=
             "], {{9.72359, 4.45312}, {9.264159999999999, 4.45312}, {
             9.264159999999999, 7.6084}, {9.72363, 7.6084}}, {{
             12.973590000000002`, 5.846680000000001}, {11.51221, 
             5.846680000000001}, {11.51221, 4.45312}, {11.05321, 4.45312}, {
             11.05321, 7.6084}, {13.21044, 7.6084}, {13.21044, 
             7.268550000000001}, {11.51221, 7.268550000000001}, {11.51221, 
             6.186549999999999}, {12.973630000000002`, 6.186549999999999}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerHTMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           FilledCurveBox[CompressedData["
1:eJy9VNEOgCAIxOhH+qU+wcde+v+3XG2tDkF06kabhsBxp2zx3CMTUUjfsRDd
65UD/yy5YQt/PC6Zx2ky6q1il4Pw7+FaJE+s5MHZXbYuJMz2ooG3OZGw25gH
GJC5Wb4uNiitv7qUw5BvHAwNVRGA7YIbqzU4QS//A9dwNtxb7cl0FNQvjba1
h3BxtoxAbktjs+oZkhPYrmpQ2gUPPRDZ
            "], $Failed]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmIBKK1/V4WtUVTBgQEMBBx8fZvMlyRKO0wILlGZ/p/f
4e7s+wYXBcQdzDaENh19KOTwIOM4735rUYcNM2s2n/UVd3hiuv7VmjRhB43m
xU+u7pR2WLC2uXlvpohDvcGHO9UZCg4TxS89VDwj7uDy6+3rA5JKDvWNCg5t
etIOnEde/2I9reyQflnwwFklBYdQwTyjVT4qDhftwj7cjlByWF55XNMqSdnB
etUshVd9Kg6fVF7OOlmuBHWnmsPTT/KX8v0V4HwDkD+uSjusObqcQeK/qoPd
ZhWgX0QdlE3fJs2KVHZYoSR6TIxJwAHdvzA+mA5VdpDclqatf1LawfsEu+1s
ID/526a3W66KOxxgybt7llnJYeI1iRInDTEHp1kbM6x+yzvs21b363yViIPc
nblbb7+TdqgyuTr5Z7qoQwbX3Os3XMUdqr7FLFNrlHA4I5fB2qYj4vB/GsOf
4FnSDmbGQCAs6PBcvnbyMkUFB6HvEb8uqAo4aFy57P5AXcnhkAmPvOBloPxK
vp2SeioOfcrXHgU3CEPc3aDqkLM9NmNdsTicD/P/apmoFOt6VQe+22KpZi8U
HFazJeZ9F1J28PVy3D49RBnDvwBU6r8x
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQreD4MfnMXWkHLatJp+tPyDsY7Fbn5/4qi8Hvkk9+
F3VIxMHjYZXIOnY5hyX39/HNKRZ2mP1MdvmLDlmHDczPezR0hRw03/LuM5gp
4yC+/SLDPSdBh9p125LqZ0o75IaBWAIOGx++nLrJR8ohEqyA32F7Uv1N258S
DgxgIODQwuu/fspScYc9JZMlWK7xO6R9f5K4MEzMQSdV8lFEuIDDk+Z5Z1f5
izow+gJV6gs6aEtMvcKZIeJgbxq3y5NHyOHMu5OHnd4KO/hdnBjzz1kYaq6I
w10VtsapzSIOhjO1JKaKiMH5bqqlTLM4xByeXlC6/XOfsENUivV9f18xh9ML
Xbd9/ivkIKEWzLr4kphDua6i/JccIYc5RxQ2FGWIO+ybL6V/94kg1B0SDpZb
TpTtmy8I909km8W1o2sFHWRePzKTOiDpIJx4+LL2UkGHFce8zTsbpRzC+HQ3
zX0v6FB8XeiTI7+0A8camaiUaiGHdTfiy/znSTuAnNErLuxwZRYogKUd5tvo
AJnCDrD42rqs8rjmLhEHAIs2smM=
             "], CompressedData["
1:eJxdlHs01nccx81KWi3PzXPxXPyu1Amtm7Sy3l225VARpSKkqJzUqq2WiSLa
Gq3mJEORRiG7IOQRoiakVWs6OKZ1Gc1qrKto7ft7fs/xx77n/M5zvr/f8/1c
3u/X50uHblkaZmlhYeFHHuHX+oxu1Tojj7lxdxrSZimRbTepk0vkcXmUe8ay
LiWaT7xf9tidh8uh7BeTw1XIvEj9sK2HQ81uvdv6iypY7T0y/8tNHB6Uf/9m
t5caE9VHbo7uYVEzLnNqTqkalunW2uNBLD4oe/zq5gs1DKd6Frp0MbjtLATU
mOMyKL28ozorXYNvjKmHbF7SuPKosX6esx3Wxra576qgMfv80lT6oB00d1ao
yg/TMKV11OL3MSn5cWQfnOZlm9SkxY4lBmVEMo1OjlQWr0MVCRdVRuMdo6PN
mOl66Bvvz/n2NY2s2U430/P0KNsXfa1kJYOh/P4bixgDPFcmurVeYtBUP69o
Y5ABkd2D+f1TWJye3jJrsY8BCzZu6UvIZ9HgOeOLuSEG2Cf0+lQYOIQ/v7fm
hNKAVFJW92cc6p+OD/wqTo+0zbL42iYOuug1U5b16fCMvK57yon62utwNzfj
ItXHITOHPTf0oVY8P8gP79mOgZiIIR5uL+rWFVA67KzOIg7xYj9PdWLdOTxG
D2SvLynQY7LJUB4ThDQbDGi5QtZYHgVxPh7HLOzRdvW5791cTowXYg/NiOXj
nKdwGNGdNP5hiz1UC72H1CUsblcTAy2p4f4tTIuCn1DwHgbnkq36lNYUXAvf
8w+4TqNO5eA78qQ9Nn0ales0n0ZUw4R3v2424Jequwp9I4WXMRFVH8sNYtw4
SvS/XyfWu4/CzNZLkdNqtdg8bU85yPeTpP39pXYgpn+y1UiZedIg+SgRlKJh
kn2kRqyvmIbQRrFeDUKDj8dqBo+i50wPilJhqrDkLIjbf+gdVehTkgbTWPxN
8Cp6oEQsKStFzUHAoitGCXKq0iOJw8/hv3ZH9NpiaYUhofc6h+W7vysLjbU1
c8yhLZiQ1qrA4lDJiplPOMhyz19QOSgwcb+SSMyhobIi2eojOVatm9W1pIXD
YDMBuk4GU7p9HJzCCMn+MrF/jkNaZ8r+hHYp6hJP+TcVs/AP+LHmr+NS/BQp
CMLChGWRFNsOHLz3Tw0D7duCglLRRzC4zhBQ/pSisv3Aq7BbNLZvOPwwOlYm
chxDI36SV95bVnL0bj9rO+hJY17I/WtMhxwFBJ9Qbxpn83Y1TKhUIOK3rQcO
LqCG996C4POp4f+3n3kZGBlGYYZdbQD1hhzxBKs9eRRGCQPoJQOhOqvwIYVA
am7/2iQpBHtuLKLFup5LRJ6raNGnYxJ4uLymX7ky+PxJx629UyUI8iSTYWSw
OvLSv8WDNsP9i/xJIFxTxmcsgkdd1fi024C4NdaykBP58pWIfIAXeWSl5ny8
eK5VKuo/wgHpO8mEDcjMcR1wlFwTrhMV4txaOiCx0e/C6XsKs648TOkybPH/
+/I/ZYc7ZA==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJPEGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {
             12.638179999999998`, 11.}, {11.68506, 12.668}, {
             10.791059999999998`, 11.72708}, {10.62513, 11.553912}, {10.36001,
              11.522025000000001`}, {10.15775, 11.65091}, {9.221229999999998, 
             12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQnehv/cc0Utoh78Y2jc0P5R3KFu70U/aVxeDP2j1t
Av8tEQf7SMMY2QRZB6uXtY+z+4UdPNrbDepeyThMsytxrPUWcmioLXl1il3G
YQZIfZSgw4U7zoe+y0k7lHmxv/5fI+CQy7jw64enkg47Xp6vW8Ih4PDtZcUZ
h6USDleeZ2l/ExdwuHBx1bSSFHGHltA9EytZBBx45AWDlTTFHAq+zvmyrxDI
t/kup2cp6nDtUTBDj7ugQ1WXjFJenIhD1f0ft4y1hRxmJy5ec/+NsMOJuZcO
/ooXdmAAAxEHtfXnDBVmizgUXJ7/1+OjKJzfqmVaveCpqMO8/mznozeEHU7J
LUzzUBVzSDp8WTtVUtjh3gmbT+yLxRzamBUjD7QIOTy8ZPhcUlvc4QXDQRnb
f4IOj7NSwqOeiTvMkr4sPG2HINw/PoWhN8uPCjrszCk5558o6VCiMv3/hH2C
Do9KJq3VE5dySMpRPOHIKeRQ77G/VnaGlMOhlFUJIZOEHN4cV/spKC/t8OCw
6vG5RsIO8U6s7eIp0g4MJTP09YH+gMXXn6a7G3IvijgAAJv0uk0=
             "], {{
             8.27593, 5.600999999999999}, {8.27593, 4.0764499999999995`}, {
             7.7903, 4.0764499999999995`}, {7.7903, 7.970409999999999}, {
             9.149, 7.970409999999999}, {9.495699000000002, 
             7.990780000000001}, {9.836413, 7.8734}, {10.097, 
             7.643809999999998}, {10.32893, 7.4181300000000014`}, {
             10.453540000000002`, 7.104199999999999}, {10.43952, 
             6.780890000000001}, {10.46035, 6.45471}, {10.337919999999999`, 
             6.13566}, {10.10423, 5.90714}, {9.834327999999998, 
             5.687319999999998}, {9.491156, 5.57794}, {9.14383, 5.60102}}, {{
             8.27593, 6.020399999999999}, {9.149, 6.020399999999999}, {
             9.365609000000003, 6.0059000000000005`}, {9.579484000000003, 
             6.0753699999999995`}, {9.746219999999997, 6.2143999999999995`}, {
             9.892242000000001, 6.3635}, {9.967786000000002, 
             6.567780000000001}, {9.95391, 6.776010000000001}, {9.963729, 
             6.982559999999999}, {9.888697, 7.184149999999999}, {
             9.746219999999997, 7.334009999999999}, {9.592580000000002, 
             7.478730000000002}, {9.387888, 7.556730000000002}, {9.1769, 
             7.55095}, {8.2759, 7.55095}}, {{12.779349999999999`, 
             5.8757800000000024`}, {11.18246, 5.8757800000000024`}, {11.18246,
              4.495850000000001}, {13.037669999999999`, 4.495850000000001}, {
             13.037669999999999`, 4.0764499999999995`}, {10.69683, 
             4.0764499999999995`}, {10.69683, 7.970409999999999}, {13.01235, 
             7.970409999999999}, {13.01235, 7.5510100000000016`}, {11.18246, 
             7.5510100000000016`}, {11.18246, 6.29641}, {12.779349999999999`, 
             6.29641}}, CompressedData["
1:eJxlk2tMUwcYhos2RYXNnlLbCr1gClJ7enowKIg4eQUVNYgFB5F0Gmy8kCIQ
OorMxigbImZeQIMixcpFx7wEAaGwSbSiBfFSdU6wKAw3ZaZMhCETjbgds4k/
9iZfvjw/3zzfN0OXHrdxAovFmsfM+/1vAjHz/kLJgUQeZAL9yuGLNHj88NZH
RQSuOvjzz62nsSDmbuEX77ioxPFrh16qYSke0SmquKBtC+cbjWrEpZRsLY3g
YkaNIbnwOYV87+grgwQX5R4ubd8GCkvP2qtYIi4cLZas0TAVFE1rYr+ZzEVt
0C5HiooE33wgJXIjgebFIx02qxK59sc3z+V5IX9R0tM7BiWKK9tepP7IR/ze
4ZByjRKlLy8ONbgL8F2AamhnnBLL+grDRWuE4yxoFXwtrhchqKI+ZDRCiYrc
o9YdJ70xqOE/89qjRM+eRDrvoBj3nO29iukkBlLfnJfNkiLk6ZQXhnISzU37
OINZMnxLsUMVGSrkZK+9lCT0hU4R0BW/jIK849fVLE9fJGe61waNUJjdb9fE
8H1RUDY6u8+ixqZfpl3+2yrDidOTKwbkNEqOMnFK8ba105JYQSPbuN/N2S9B
qyam/swgDevw2M/Zp8T44IOVnsO2r/JBlCAwR+tOj3PVDZ1u2I3G6ci0PJ9A
MaR9NzxqbqvhHRl6t3qCBLWdF8J7TGp0aCdq/YslWNp+5ktPhRoFmbeemCkp
lnS7+zb8QKHY302v/0qKhs2H2d8vpzAzWNaZp5eix4+TU3RehTo/rKRMUtiy
OZ+MyVWopnldhgEJfn82ZDI7SHA5FtPUV2IUNrX9tDuNRA9TN6HOB9MrjZ/P
XUTijzSLqyDMGzUa5jCiSdi6Ey88bxGNs+OIMEm2/T9fESTyj83KXDdRgLIV
t6TJRhJsIakP3McHO+FTqq6bxLu/jL2lsV6gihrlpcEqBGcYLkXG8rA4oXFb
zHUVXOw5RHAzAeJtun/YJgrRGfHOrXYC5s/uTPFk+p74Myv3XguB212pwhIP
5n7bQx4+ekDA72b9GKll2FVgfszhYUHZluvTGH9PApiHoHkY6LeFyrvUcL3v
Y+KhkWNdUTOJxpvlDavafvvIvdv41VHrBdgtcDperab+x/OWRBleTxWN+/3A
/wB+8G7/
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{
             9.617389999999999, 11.266640000000002`}, {9.355364000000002, 
             11.506809}, {9.073421, 11.7243}, {8.7746, 11.91677}, {8.7746, 
             11.91677}, {8.66219, 12.48534}, {8.587309999999999, 12.73394}, {
             9.09304, 13.23107}, {9.16793, 13.30761}, {9.65491, 
             13.785590000000001`}, {9.687847, 12.945878}, {9.675329, 
             12.104999}, {9.61741, 11.266640000000002`}}, {{8.50275, 
             9.731640000000002}, {9.072936000000002, 9.76756}, {9.631433, 
             9.558930000000002}, {10.038419999999999`, 9.15798}, {
             9.701419999999999, 9.06244}, {9.66393, 9.043289999999999}, {
             9.32679, 8.947599999999998}, {9.042788, 9.148219999999998}, {
             8.700315999999999, 9.24909}, {8.352910000000001, 9.23443}, {
             8.391562, 9.40336}, {8.441624, 9.56948}, {8.50275, 
             9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMXIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{
             9.617389999999999, 11.266640000000002`}, {9.355364000000002, 
             11.506809}, {9.073421, 11.7243}, {8.7746, 11.91677}, {8.7746, 
             11.91677}, {8.66219, 12.48534}, {8.587309999999999, 12.73394}, {
             9.09304, 13.23107}, {9.16793, 13.30761}, {9.65491, 
             13.785590000000001`}, {9.687847, 12.945878}, {9.675329, 
             12.104999}, {9.61741, 11.266640000000002`}}, {{8.50275, 
             9.731640000000002}, {9.072936000000002, 9.76756}, {9.631433, 
             9.558930000000002}, {10.038419999999999`, 9.15798}, {
             9.701419999999999, 9.06244}, {9.66393, 9.043289999999999}, {
             9.32679, 8.947599999999998}, {9.042788, 9.148219999999998}, {
             8.700315999999999, 9.24909}, {8.352910000000001, 9.23443}, {
             8.391562, 9.40336}, {8.441624, 9.56948}, {8.50275, 
             9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerNBIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3fTo+Izdx3QcQlPvix78r+KgN2HBD8Nv+g5/JioZ
rZmk4fBh0XqFsx7aDp/Ymc/vna7p8OfFlannD2k7bI7jeeoSrefwr2J91MwE
dYeItT4/lubpONysiZHW+qbiMOeIwoYiDwOHqR/fG+v1KDlM8HQ7dwgo337E
dppdiIzD+e/Bj5cC9bs/rBJZ5y7r8AmoTGaGpoNyTkXV0jfCDjnndTgDJms4
TD91W9DPW8rhmF7gXlMGVYcYBcePyUB51ry7Z4NzFR2u/VJaqAvU39DULWqa
oeBwaMUSP4dgGYe603P0uj3FHTbNfb/8WLeSQ15Y7bptStIOX70i2yyA7pv0
tsbe9J6QwzFv805HoPslpl7hzADKH0lZlRAC9F/Dwbwb2zzEHbafeblpBtD/
/AJnLj5OV3AQWrr3oDgwfKYaXP62PkfRAQBEtY9z
             "], {{14.80901, 
             9.345419999999999}, {13.743519999999998`, 9.70987}, {
             13.016919999999999`, 10.654219999999999`}, {13.952580000000003`, 
             10.306610000000001`}}, {{11.37113, 7.1364199999999975`}, {
             10.71228, 6.004419999999998}, {10.71228, 7.177}, {11.39769, 
             8.1788}}, {{9.82133, 12.979130000000001`}, {8.690819999999999, 
             13.38113}, {8.03666, 14.26438}, {9.224139999999998, 
             13.742750000000001`}}, {{11.738219999999997`, 13.74254}, {
             12.92535, 14.26367}, {12.27094, 13.381170000000001`}, {
             11.140869999999998`, 12.97931}}, {{13.176730000000001`, 
             12.69978}, {12.60295, 11.88607}, {12.63669, 13.113}, {13.30869, 
             14.019279999999998`}}, {{10.48084, 7.6483799999999995`}, {
             9.600349999999999, 8.933119999999999}, {10.48084, 10.12788}, {
             11.36133, 8.933119999999999}}, {{8.82607, 11.30619}, {8.782, 
             12.866109999999999`}, {10.24941, 12.343890000000002`}, {10.24941,
              10.82582}}, {{10.71228, 12.343890000000002`}, {12.17853, 
             12.866109999999999`}, {12.13679, 11.30619}, {10.71228, 
             10.82582}}, {{7.78548, 12.70037}, {7.653829999999999, 
             14.01924}, {8.325000000000001, 13.113}, {8.35872, 
             11.886630000000002`}}, {{10.113909999999999`, 
             10.394459999999999`}, {9.233909999999998, 9.200330000000001}, {
             7.73775, 9.64138}, {8.6871, 10.875230000000002`}}, {{9.56485, 
             8.17925}, {10.24941, 7.17699}, {10.24941, 6.00399}, {
             9.588669999999999, 7.136619999999999}}, {{10.847769999999999`, 
             10.394459999999999`}, {12.27461, 10.875230000000002`}, {
             13.223969999999998`, 9.64138}, {11.727799999999998`, 
             9.200330000000001}}, {{15.12577, 12.00872}, {14.018169999999998`,
              10.766060000000001`}, {12.710669999999999`, 
             11.251830000000004`}, {13.495080000000002`, 12.36425}}, {{
             10.4809, 15.38392}, {11.32134, 13.94576}, {10.48092, 12.872}, {
             9.640999999999998, 13.945920000000001`}}, {{5.83618, 12.00977}, {
             7.467, 12.364930000000001`}, {8.251059999999999, 
             11.251930000000003`}, {6.94357, 10.766800000000002`}}, {{7.00905,
              10.30738}, {7.94515, 10.65472}, {7.2182, 9.70992}, {
             6.152049999999999, 9.34592}}, {{6.25151, 8.900640000000001}, {
             7.36125, 9.27952}, {8.546149999999999, 8.93023}, {
             7.5544899999999995`, 8.616499999999998}}, {{7.776040000000001, 
             8.210890000000001}, {9.1027, 8.630609999999999}, {
             9.136519999999999, 7.219290000000001}, {7.60984, 
             6.5491399999999995`}}, {{11.82447, 7.218990000000002}, {11.85887,
              8.630529999999998}, {13.1852, 8.21038}, {13.3511, 
             6.548449999999999}}, {{13.40685, 8.61593}, {12.41507, 8.93009}, {
             13.600359999999998`, 9.2795}, {14.710359999999998`, 8.89981}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPacletInfoIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}}}, {{{6., 13.5}, {6., 11.}, {10., 11.}, {10., 
             15.}, {7.5, 15.}, {6.671948, 14.999096000000002`}, {
             6.000903999999999, 14.328052}, {6., 13.5}}, {{9., 12.}, {7., 
             12.}, {7., 13.5}, {7.000358, 13.775994}, {7.224005999999999, 
             13.999642}, {7.5, 14.}, {9., 14.}}, {{13.5, 15.}, {11., 15.}, {
             11., 11.}, {15., 11.}, {15., 13.5}, {14.9991, 14.328052}, {
             14.32805, 14.999096000000002`}, {13.5, 15.}}, {{14., 12.}, {12., 
             12.}, {12., 14.}, {13.5, 14.}, {13.77599, 13.999642}, {
             13.999640000000001`, 13.775994}, {14., 13.5}}, {{6., 7.5}, {
             6.000903999999999, 6.671950000000001}, {6.671948, 6.0009}, {7.5, 
             6.}, {10., 6.}, {10., 10.}, {6., 10.}}, {{7., 9.}, {9., 9.}, {9.,
              7.}, {7.5, 7.}, {7.224005999999999, 7.000359999999999}, {
             7.000358, 7.22401}, {7., 7.5}}, {{11., 6.}, {13.5, 6.}, {
             14.32805, 6.0009}, {14.9991, 6.671950000000001}, {15., 7.5}, {
             15., 10.}, {11., 10.}}, {{12., 9.}, {14., 9.}, {14., 7.5}, {
             13.999640000000001`, 7.22401}, {13.77599, 7.000359999999999}, {
             13.5, 7.}, {12., 7.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPNGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {
             12.638179999999998`, 11.}, {11.68506, 12.668}, {
             10.791059999999998`, 11.72708}, {10.62513, 11.553912}, {10.36001,
              11.522025000000001`}, {10.15775, 11.65091}, {9.221229999999998, 
             12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {{{5.529, 5.57807}, {5.529, 
             4.053519999999999}, {5., 4.053519999999999}, {5., 
             7.947459999999998}, {6.48, 7.947459999999998}, {6.852703, 
             7.9696}, {7.220449, 7.853290000000001}, {7.51264, 
             7.620859999999999}, {7.761139, 7.404469999999998}, {7.898312, 
             7.0872199999999985`}, {7.88574, 6.757950000000001}, {
             7.9057260000000005`, 6.425880000000001}, {7.770876, 
             6.103259999999999}, {7.520519999999999, 5.88419}, {7.218853, 
             5.661900000000001}, {6.848291000000001, 5.553469999999999}, {
             6.47438, 5.57807}}, {{5.529, 5.9974799999999995`}, {6.48, 
             5.9974799999999995`}, {6.713101, 5.9819900000000015`}, {
             6.943998000000001, 6.0508500000000005`}, {7.13054, 6.19148}, {
             7.287083999999999, 6.33478}, {7.370268000000001, 6.54129}, {
             7.35676, 6.753090000000002}, {7.365949999999999, 6.96311}, {
             7.283390000000001, 7.16676}, {7.13054, 7.311090000000002}, {
             6.957866, 7.457780000000001}, {6.736853000000001, 7.5351}, {
             6.51039, 7.528030000000001}, {5.529, 7.528030000000001}}, {{
             11.87171, 4.05348}, {11.3399, 4.05348}, {9.319080000000001, 
             7.05438}, {9.319080000000001, 4.05348}, {8.787279999999999, 
             4.05348}, {8.787279999999999, 7.947459999999998}, {
             9.319080000000001, 7.947459999999998}, {11.345, 
             4.933299999999999}, {11.345, 7.947459999999998}, {
             11.871730000000001`, 7.947459999999998}}, CompressedData["
1:eJxlkXtMU3cUx6soT4V7y6MV6QOYj97LvZUFWAdGv0EkmJkNyibo8LkRO8qs
DzYsCr7oWHRCFUQRplINtloxomFqRAU6FohjAXEK69RKwaLjNcwgxamXGNkf
O8nJySe/nOT8vp/gDRpl+lQej6fgemK+rQVI9GlzeMfycfKZvtxWK0dtIH80
NYfEvzdMCbokOV5qkw95dhPoG95R/srKoqm9gDUWEbB5FZv2JrFYE3/J2k4R
+LZwSufzOgZCh6/28Asf7Jz+VZNBxmBzb8q23TwCjk6zM+1gGBR3/7lo5t4F
e4NKFozQyBMpNsYtI6C1+7ieUNMwDLjou+wEZOur+tf2UWgdeTxgziXx5FzN
4P7dFOx+ouaetXykGiN/jVlEQWpp9YvW+MJquONa9kIGe1dieOtJP+jVS35W
/CbD4Tj56dQBf0Q9Hml0b5PhiT2vwADBJNdYXFqqKoQw1UfMkNTLcFN/78KJ
4kBIZywcFXtTMFz5YKwhPwjH50zJyDBR2J/5dNxEilHp9ezz3jgafJ/55VvT
JcgYT1lx/L0wfNNYu7RsphSeOndFvieDLZ91Zi/lSaEuuDVXbWEwsZblIUVa
4qP3z+5gEdWu1MYYJDjoOhSQQMgRcew7W2iDGD9+xG0elWPh1Rj1T3+KMF3f
ZWnu5/xc4QQdC8I7fxVfb1r+iWI2XnVs75s7zE7y1dWq6rsPWGRZZSKzRAQu
tcVnXjNwrs8fUu0Tw8291zHsxaCB+zaZLEYIcfG5IDMMvztDKpmNYhi7w12O
tNHIQWcJbRVhRc0XoYSGhnnagcayR0G4vu9BWawb/TbPU7NRpywNLrxH4ctz
6z5VzgvEhJ6PbRTSrPEu288LJ1lVOs1oShdgT8vY6Kz7FCjhkQ4Phz+aJVzg
3jTEiVE9nho/bFUd6t+5i0ZtlfYXWbQvbqRcWD7WQ+NM6LWXBRF8/HGWO1AX
BktReDZTSSLn+/hsgmbg0MQGT60moWtV/8XXMXAviipMPU8iq3286f5DBkbl
ZbdV9SROZbb4P4xkEd2X260eJCEt/qFCl8si31n64eoAPlY+FerrbrJwclpL
NvDRcHvboO1vFiUJhqNJd/7jvMWRa64vC0B6cvUQK2D+xx0eqpDMMcGkr3f8
Bvidex8=
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerSVGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 
            2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{15., 10.}, {14., 
            10.}, {14.00113, 11.596388}, {12.921309999999998`, 12.991014}, {
            11.375490000000003`, 13.38965}, {11.62449, 14.3584}, {13.61224, 
            13.845852}, {15.00095, 12.052766}, {15., 10.}}, {{7., 10.}, {6., 
            10.}, {5.998837, 12.052669999999999`}, {7.387368, 
            13.845787000000001`}, {9.375000000000002, 14.3584}, {
            9.623999999999999, 13.38965}, {8.078326999999998, 
            12.990908999999998`}, {6.998712, 11.596276}, {7., 10.}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCwBmIQDQG6DhBay2HribJ983dpO0x7xRSXBuQnfi7MXTFD
yyFv6fW05LNaDm8emUkd0NaCqteB0ho4+NoORUeiariA/AWGk1eI79FyEFb/
bi3yVN3hVPuCrC9VWg5ZsqG+AlvVHaQOHvv63kvLwWC3Oj93q7qDBnd8/Gsp
LYe77wNEXjirOwRx+r/4+l8Taq463L0QWhnOh9ijBFcPsUcJbp4k2B4luH2a
YHEluHsg+hTh7oWYqwT3Dypfx0HTatLp+hXycL6KuxWz8no5h3XOpqqR87Uc
3n5ay//6rrQDX1429/nTmg5rXj0tn/VHwiGP73oWPzcwPA9YKntJizlcWud0
yh/ont3cU0QiGEQcyoVrLn/p1IbzYfEE43e+adbhLtOD69cP3Gu6Yas+3PwJ
HzWmfviiD7f/l4dXlYSUAdx9gXtO3VqWoI/mfj00/6Hz9eHhk3AuJ/yFsz48
/Mwq4qdyt+rDw/eZnSWXANA9sPC/8WXBApGn+vD4Ca++wc3KYIAWfzC+OpwP
i3+Yelj6gJkHSz8w+2DpC+YeWPqDuRc1faLz9dDSt57D6Zb4V8/XAtPFlZnV
HgX6DrLMm67v1tdxCDii1CarZOCgvE94c9waXYcPPdu0Ot/oO8xWeGXHoKnv
0NCwNev6FH2HDr0V+TOFDRwsfOfLFujqOWx5VbxV9Le+w8b7wq9DVuo4PL2g
dPvnOX0HraKOHZaq2g7zbXSuzGrTc3iSfV6HE56+EfkTAK7YJ3o=
             "], {{14.5, 
             15.}, {14.223859999999998`, 15.}, {14., 14.776142}, {14., 
             14.5}, {14., 14.223858}, {14.223859999999998`, 14.}, {14.5, 
             14.}, {14.77614, 14.}, {15., 14.223858}, {15., 14.5}, {14.99981, 
             14.776065000000001`}, {14.77606, 14.999812}, {14.5, 15.}}, {{10.,
              14.}, {11., 14.}, {11., 15.}, {10., 15.}}, {{6.5, 15.}, {
             6.223858, 15.}, {6., 14.776142}, {6., 14.5}, {6., 14.223858}, {
             6.223858, 14.}, {6.5, 14.}, {6.776142000000001, 14.}, {7., 
             14.223858}, {7., 14.5}, {6.999812, 14.776065000000001`}, {
             6.776065000000001, 14.999812}, {6.5, 15.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxdlHlUFWUYxvGqIJBwl7lzl1nuxTI1jmhFQAT4IAUEqCcDssRSkDCCEDFB
ELcEzRYkCNc4uRCulLJISqyCIhVbbIqmCCaLQQgoINY3d5A/mnPmzPnOzLzf
+7zP8/usAiOWBkuMjIx8yS08G/175l0M0cA/PisvcIEK1kN7b6SYqLGTbvn9
YYoKfOY9T5siGum9mRXe9mp4FsVzDplKuNxrOT3CarDkx9TgXXcoVLTm7thU
o0FIw1+h1hsoRDXJ+12rtVgofBhLIR/b2y43Mzgckt0V9SkFz9uxVJYJByvd
QJj/GAWLuee+653FY5+P8kuvLiWO5Ng/Km3n0evwhse6YRpma2aExVzQIcb8
udmbfdRYAsWqMoUePvafu67M0KA7Klc5aq6HsZxaUHFIi+TNo45rLfTQtC1T
nU9mcHGWpXnuXR1OVTf490Sw2H8xbY9lrA6rV7S6T3bgELSlxXmjWgdm+q25
e25xqAi33Xp+K4+5hgZ5vHQ3a2Z7GYd/gn5d4X2FR+qQ8Qf7nuEQWrA+RT1F
B/e8B2N/OLAYrfq7skyiw4lji0mHDM6MBISXP2En1mZNR9c6m3Fo3hblnmrH
osGUCMtnIbt8If8rYw6SA9OYdJ7F+95XTJwPctgQSToKZ7CeyKuy4THTeNu3
bl9oEXi40bY3hp/QXzvj+vDmUB6ZGy/PcaxTo7GcCIjmYa8tXq6fpEYcleVx
25GHoayfCh015IdCDttJG0MVNEgKZll6c+I8Ymi4sd1tdgdYPHEbud+9lcZb
Hx+IPtTGwK/k+LHFZB3Rl1Dp68qg5vXmvoGrNOYEJJUOHtci7rN5Pj94qTB4
vYko1GJVWb11sEaN4e+J8dkalA3ODkiSaMb306B+UaB02bAGS/P5hG7Z0/cM
AvSuZNRqXDpr88nRSSwSK31Ljq9W407GwUv6PhZC7IJuqGAYfxqHb6q2kGiq
YOf0y9I0Kx4Fgr1DtNhHIvHPb/4LJ96mIcTO4zaP0sTMd66eU4KnQxc9sNCh
a4qtzO4xBbczH92MNNOh5NVnveLcKJEDhQ6PSlefXEkpRH27eYSZEkUPZMgj
qc/ez6GnmPzwmkyss4nF2aKedKcwKe7YCQYwuHaaBGGqFMJYtcUaCJgMqaRw
WlybHFCoxo70305WK6WQFEyVU0Uq0WdvqZjzehqCuwU5UqTuTHiv/rFS5E0q
Q4YQKzclBn++tnssY3z/Amp8XnIxfy4UFq4kjjMKdHra/Gs1poBA2ZQBBYwM
F4Vy/U/r1tRSou7J9MSadEcioESRxaGXj5DvDXWW0/A1GKFAQ0zn8y9OU0Ea
a3fKZa8cQhw7alSwFQCWyPHhrqAVrRVqkY982YR+wzzKZRO8vim0lScDgd2y
M5rBzcjdX7f3yyDQF2/DIqm9X1cXIcfD9lWHG3NYcf9bctACcJMJT30DXu8m
KsQ8E46Esq2vUKgzuikxJbwJx0dsByXyUMKiSioAp0Rlx4Jjf7qwE7odDEYz
GCTVHNJo3J9eOH9/qHacIxX+f17+BzFaMpA=
             "], {{9.8738, 4.7586}, {
             10.959, 7.9704}, {11.507, 7.9704}, {10.098, 4.0765}, {9.6543, 
             4.0765}, {8.2481, 7.9704}, {8.7935, 7.9704}}, CompressedData["
1:eJxlU2dMFGEQPZUIMQb3jvPuvMYhSraiFAvB8myAjaJiUAEF0RAiajCIIhCI
QUDsioVqMELU06C5H1gCBiT2jlEBo4glF1GwYDsJfnsL5w8n2ezOfjvzZt57
6xG/YdGawTKZLJBc4l0KbxQfI7FMgcOzCte9vyxAeS64Pf2QHNF7G3roaAHW
EO8+j14KW61ePi6dPPjm4neGagqM+EEij6phQWNTZ1IQj81tHCbeDQx9KKdw
+vOjhfHhHJ68T+K+qym4mPXLEy6zaEw4vWqJor+eZqGNaNFlxFGYTeBtpxg4
d6tCwv9QOKhxWuoqMCiJrDhz9qgcw56e2Dj1Fo2VzG3qeroCd++Q2EVjblm2
V8MONwgXyrqqg2h0TZ4TnHJRCfXzez8We9IojyUFziosmFQwY9VYGq5144+x
UWpH7psmeLhbNBj3YszQnJE0cooIEdVa7P+YMX1CLI3jBTXt1iI9RonjfKER
5xs5nmWM0NkLGBSnlVZ6bnXHvOGDubylLLJD6jMNGhOqSq6Zanw5ibfhJviI
BLzhUO9a6lepNOFl2O4j6w/wSIhpCxpS6460ugrtOIMg6fHcCPfcDxG15QLM
ha2Jsi4DCDrZUADc4hofn9FjQD/ZhhynpjAdNiWSift4R87lqQgDPPK/tT7N
8dMjnMApGgnenZj5N5wNEr/JPFY8vtKhLDNI86t42OXwNUKkr+MkB8/WX1lJ
GUaExlNRAf4cHo4WXxhhubG5rqKYdZxfmksaOLPQk+rI7v7+ZxmsGfU6Sv1D
j6PrFduvzmOQtPDrnsUWHe6L7XUMVpyv7yyfosW33uYtVi8G/pWWST8bNI7c
7r9MdT8/DCbEikgqLKo1EoYYWJb1XGzZqURNCiHgCoPe76mvSiPcpPm0LOw2
DlNI+l1gsU00+CU5mkykIoJDi/l3dHKTXMKr4mC7/elmY4Nc+h9sHJo5ssEz
OVLFhUJ5rM1fHdM2VOHQL1B88FZIfn/A40jfviwb8afdH4ME5OcuJwz/y9vT
yQBxKrx9QIicxv2XBxD7/hqhceg7kP8F0n559w==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerKernelIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}}}, {{{19., 13.}, {19., 3.5}, {19., 
            3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 3.}, {7., 
            3.}, {7., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW91mNqfJH0HgVL5hitmCg7uU76xxe/Qd3Awjdvl
2aPskHpf9OD/ZToOd9kVtnYaKznseaHtYfxNy2HHqje7lSRUHfas9Gjd6Krp
INZuvH8WUP6Ot9TiUhM1hyk3FSb3APXXsGYeW9Sp5rCT3yFL2FzB4a4KW+NU
Z2UHK6kD0QqM8g42tyySdOtUHSwEJrH6MEg5iBo0RpcD5cPAFos4cL+KflYC
1B+0wP+J5yRhhx8iDI8lgeYzaLeL3TzH6ZDB2rYmD2h/wdc5X/YZ8jsI/slX
tQa67wS77ezQ+cwOem8y2/cD3W+w2i48GiifGnvHjRnoP47iLz/2nuV06HRM
eHoB6H+zs9Z+FycKOyx++SalIMTQ4dRT+yX3/4k4pJqdUFE2N3CQOwkU+C/p
ILrO/WEVUH7NLIVXdgzyDgCwloC6
             "], {{14.356890000000002`, 
             8.80715}, {15.26808, 9.20715}, {14.75798, 8.51929}, {
             13.889980000000001`, 8.210630000000002}}, {{15.50572, 
             9.055660000000001}, {15.40481, 8.047169999999998}, {14.95886, 
             7.41475}, {14.98468, 8.353030000000002}}, {{14.69925, 8.2}, {
             14.66778, 7.05536}, {13.62143, 6.702780000000002}, {13.62143, 
             7.816750000000001}}, {{13.48092, 9.9899}, {14.09851, 8.93313}, {
             13.48093, 8.144059999999998}, {12.86377, 8.933209999999999}}, {{
             12.60539, 8.80729}, {13.07211, 8.2105}, {12.20383, 8.51926}, {
             11.69399, 9.207640000000001}}, {{13.34039, 7.816750000000001}, {
             13.34039, 6.702810000000001}, {12.293999999999999`, 
             7.055390000000001}, {12.262530000000002`, 8.2}}, {{11.97714, 
             8.353090000000002}, {12.00295, 7.415180000000001}, {11.55736, 
             8.047659999999999}, {11.456740000000002`, 9.055730000000002}}, {{
             10.16199, 7.578840000000001}, {11.359990000000002`, 
             7.839730000000001}, {11.93624, 7.021730000000002}, {10.97586, 
             6.66539}}, {{11.016440000000001`, 6.38067}, {11.74664, 
             6.651610000000002}, {11.18759, 5.92502}, {10.357750000000001`, 
             5.64171}}, {{10.419440000000002`, 5.365740000000002}, {11.27625, 
             5.65826}, {12.181249999999999`, 5.391480000000001}, {11.41413, 
             5.14879}}, {{11.429440000000001`, 3.6768399999999986`}, {
             11.551440000000001`, 4.897399999999999}, {12.526169999999999`, 
             5.205770000000001}, {12.55101, 4.16919}}, {{12.60754, 
             5.558840000000002}, {11.509590000000001`, 5.88251}, {12.20647, 
             6.788230000000002}, {13.253540000000001`, 6.435409999999999}}, {{
             13.34042, 3.2504900000000028`}, {12.833490000000001`, 
             4.117919999999998}, {12.814119999999999`, 4.925980000000001}, {
             13.34042, 4.15807}}, {{13.48096, 4.450240000000001}, {12.83467, 
             5.3932400000000005`}, {13.48096, 6.270240000000001}, {
             14.127249999999998`, 5.3932400000000005`}}, {{
             14.127959999999998`, 4.117769999999998}, {13.62153, 
             3.250720000000001}, {13.62153, 4.15807}, {14.147639999999999`, 
             4.925700000000001}}, {{13.708409999999999`, 6.435409999999999}, {
             14.755480000000002`, 6.788230000000002}, {15.45236, 5.88251}, {
             14.35436, 5.558840000000002}}, {{14.41041, 4.168940000000001}, {
             14.43565, 5.205680000000003}, {15.41, 4.897}, {
             15.531869999999998`, 3.6763200000000005`}}, {{
             15.547509999999999`, 5.1483599999999985`}, {14.780389999999999`, 
             5.391360000000001}, {15.68567, 5.65821}, {16.542669999999998`, 
             5.365090000000002}}, {{16.60379, 5.641249999999999}, {
             15.774359999999998`, 5.924939999999999}, {15.21554, 
             6.651240000000001}, {15.945540000000001`, 6.380030000000001}}, {{
             15.98616, 6.66484}, {15.025730000000001`, 7.021660000000001}, {
             15.602219999999999`, 7.8392}, {16.8, 7.578090000000001}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           FilledCurveBox[{CompressedData["
1:eJxTTMoPSmJiYGDYBsTMQMzIwszIDEUMjAxw9qjIgDtgkIgAAMeOBqk=
             "], {{
             1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1: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
             "], {{
             13.48089, 1.9509299999999996`}, {10.96851, 
             1.9509499999999989`}, {8.931845, 3.9876499999999986`}, {
             8.931859999999999, 6.500030000000001}, {8.931874999999998, 
             9.0124}, {10.96857, 11.049077}, {13.48094, 
             11.049069999999999`}, {15.993319999999999`, 
             11.049062999999999`}, {18.03, 9.01238}, {18.03, 6.5}, {18.03, 
             5.2935}, {17.55072, 4.1364199999999975`}, {16.6976, 
             3.2833000000000006`}, {15.84447, 2.4301899999999996`}, {
             14.687389999999999`, 1.95092}, {13.48089, 
             1.9509299999999996`}}}]}, 
          FaceForm[
           GrayLevel[0.53726]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDocumentationIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 13.}, {19., 
            3.5}, {19., 3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 
            3.}, {10., 3.}, {10., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {19., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGZigAFjBz2T65lLlqo6wPg3sjzuJGdyOqScifU+
8d/I4YfNDutscxaHy/P/eghWGjmssHqStoORwUF81muTS5cMofoYHNzOHZpX
VqEB5xclVx0Sqld3YNgxSVYaqD7rccfWH1vUHDR2RAQ2azI7/Oxdb7sZyC8A
qeNnh/On8l37b2mjBlf/OtxKfp6pOsK8oNkWO/+ro9mn4TC3Qe1QW7shnP+p
eva/N88NHTY4m6pGAtVH7n7rVGxr5NC6y2OhTou6w+0v6fZBMUYO61+Lv2k7
q+agNdFFf3GCkQPPGS7XXefVHNgWT7JiTDVy+CqUPLPuoprDUYUNRRmZRg4S
YH+rOSxymH9i8h4jh/5/07MvAvk7g60i/gPDa/Hx97m/vNUc0MMXAJkejkw=

            "]]}, 
          FaceForm[
           GrayLevel[0.53726]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}}}, {{{17.824, 11.118}, {17.823, 
            11.28}, {17.692, 11.412}, {17.529, 11.412}, {12.235, 11.412}, {
            12.073, 11.412}, {11.941, 11.28}, {11.941, 11.118}, {11.941, 
            2.8823}, {11.942, 2.8372}, {11.953, 2.7929}, {11.974, 2.7531}, {
            12.045, 3.002}, {12.271, 3.1746}, {12.529, 3.1765}, {17.824, 
            3.1765}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
             4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.04675, 6.052660000000001}, {
             14.98306, 6.096589999999999}, {14.9068, 6.11858}, {
             14.829500000000001`, 6.115309999999999}, {14.83814, 6.15225}, {
             14.84931, 6.188549999999999}, {14.862930000000002`, 6.22396}, {
             14.989640000000001`, 6.231980000000002}, {15.1139, 
             6.186519999999998}, {15.20552, 6.09862}, {15.130299999999998`, 
             6.077719999999999}, {15.121929999999999`, 6.073559999999999}, {
             15.04675, 6.052660000000001}}, {{16.107940000000003`, 
             7.377000000000001}, {16.689980000000002`, 6.79499}, {16.77984, 
             5.8828700000000005`}, {16.32256, 5.198469999999999}, {
             15.865280000000002`, 4.5140699999999985`}, {14.988219999999998`, 
             4.247999999999999}, {14.227759999999998`, 4.562980000000001}, {
             13.4673, 4.87796}, {13.03524, 5.686269999999999}, {13.19582, 
             6.493559999999999}, {13.356390000000001`, 7.30086}, {14.06488, 
             7.882300000000001}, {14.88799, 7.882300000000001}, {15.34556, 
             7.88232}, {15.784389999999998`, 7.70055}, {16.107940000000003`, 
             7.377000000000001}}, CompressedData["
1:eJxlU31MzHEcvvKWRnSX7+9XXaULdfr+7kShOD3GSpzcctRizcupVja3y+at
MJQQtVO3it6U90Niul4c5b2oE5bJEpGGpdKLzNuvf/zjj88+e/Zsn8+z59nj
vmFL2CZrgUAwk5/h3f4gu8pgkaHuVqNJO1mEKd8euo17zaGj/ZXKJ5TAVTX7
g206B1JW+SIhjCArV2GxTePALpCcWczjbpVDp+gQj1s/SMwrCaoNGRN2pnCI
9rk6ZFpNUPyz5NVZEYeuz7f9PeII0vXhH9lCCrYnL7t/A8HH83YVjjIKdeCW
6WELCRx26Lc+8aXo/jpLJn5IMPfAdL9dKgrZkllkeTADfdrJZEUSRWbrHPOA
kcGYqY+v/1pDsbjKVhr4iMGNGMPIc/4UGVcU16a0MQiRdg7oCcW7p/ft43sY
bB47VBjjQaFL3laRuoJFwGjNlW0FFO/XHr5YZ2Zxn+wTZ5ZS2ChOrCqoZ7Ho
i7LoWy5Fl29T2I4TLExWBW5BqRSFxx6MU0ezyB0xMqFvO0WEZt6bFRwLRUhl
dG8ehYTLKvcQs9B2Jz9S1/D3dx88hT8M/EpX7bv3liLf/vTNmmYGz1zuNjhU
Ulx3k0ruHGaw7rjfJ3f+n9EfM4LlDEqG/dvP62ku1irqCMbqVLXKKoqOaF7J
G4ISq+pRwj6Kl8LehY0dBE8ifPPyKAdrtrGwiOdFkraJFzLlSLGvLT66keCy
kNrFNMihnKkjA33/48Ra4QSvKjm2V6R+vbuZ9zdH854a5ehkM262JjE4oLES
mfpleH2rrKlEzUJvMSRIQ2VI7C1VxUc6oty8JLa+gkN3s+bozlQneNGevWU5
HAw9fKDznRHVxF4qjuOgbj2mjSwVQ3IoKuiqksP3QUfGTuOC5ZPSln56Tv/x
jvd0yy7y/k3zsTGKI53RbloZELGHIvRCUoBrghMaZs854/nFG4gTeQ62sAgv
2+gxMd0bAst6c7WAgVN+lLRe643Mtb8X/Rg/CRZJy9DuAIpIeYru1C8hvEKa
lWZe3w9XmX+XrxDO49u4DL4PW41HWmL5PvwFn0hNig==
             "], {{
             14.929780000000001`, 6.679259999999999}, {14.99634, 
             6.637309999999998}, {15.059230000000001`, 6.58981}, {15.11778, 
             6.537259999999998}, {15.13069, 6.72777}, {15.13348, 
             6.918830000000002}, {15.12614, 7.109630000000001}, {15.0175, 
             7.005190000000001}, {15.00081, 6.98846}, {14.888, 
             6.879850000000001}, {14.90472, 6.82555}, {14.929780000000001`, 
             6.679309999999999}, {14.929780000000001`, 
             6.679309999999999}}, CompressedData["
1:eJxTTMoPSmViYGBQB2IQ/fq/zLPT0QYOjyLEt19cIOGgUm/w4Q6QH8NRFHCI
R9pBfUHnhoc/9R1mxZ9lbLKUdXh/ZI248009hxjjn2mzpeUcdr48X7dkh66D
zQ7r7O1/5Rx6X3J62xToODQUu035libnsG5mzeazc7UdJhznCTk2X8bhvOd7
6fjTWg5zpC8LT7sh5TAr5YnOm5laDgpbOyf/tpVwkFpcGmKqqO1wQi9wr6mA
mMNXV6foc6naDhsy7xV2nRN3sBBdabDtgrbDsSkei6YXSjqw/HKZpxKr43Bj
XqTQgmdSDiBjZLt0HDy2+h9PVpNxMOuL6PZ/qOOgJTH1CqeHrIP6VTvZ/khd
h3XMz3s0dOUcIu6+snxZq+tg8kpR6q6jrMOaFQdNePp1HY6JNclM+SDj8Dux
5UPGZl0Hn797VnqwyjgIlMo3XGHTc7CadLreA+ifblHTGW2Ceg51QW8vf9wh
47BQ44L6pxQ9h1UVyp9PxMs6fFs1lXN/iZ7Dr1vG3kwmMg7qntd99lXqOdz6
8MUrkk3aIcvjTvLLYj2HOeVzFinflHQIm7967Y3/eg4JKluexryScFjkMP/E
5Cn6DkElKtP/C0g49MYuqsqWMHCYsOCH4TM/cYdN13fb32M2cPiRpKF+66qY
w8zGUz++39R3MDqyUS8vWcxB694Jm0/L9R1SPhfmrvgh6vCsR+Mtb52+A0vx
lx9734o6+L9M+Ds/GMHnnnFg7W5NhPolBbZc14P1HOZ92fdxq7qYg+D9zkj9
MKD58xyd/y8Rdqg71sqsKGngcM2SLWX9dhEHI+apH98D08+WnLX6QrPEHCoj
VpieBfKPPTyz/hkwfQEAdeMU4A==
             "], {{13.11765, 
             9.647049999999998}, {16.647060000000003`, 9.647049999999998}, {
             16.647060000000003`, 10.23529}, {13.11765, 10.23529}}, {{
             13.11765, 8.47058}, {16.647060000000003`, 8.47058}, {
             16.647060000000003`, 9.058810000000001}, {13.11765, 
             9.058810000000001}}}]}, {
           EdgeForm[
            CapForm["Butt"]], 
           EdgeForm[
            JoinForm[{"Miter", 10.}]], 
           EdgeForm[
            Thickness[0.]], 
           EdgeForm[
            GrayLevel[0.65098]], 
           FaceForm[
            GrayLevel[0.65098]]}]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTIFFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {
             12.638179999999998`, 11.}, {11.68506, 12.668}, {
             10.791059999999998`, 11.72708}, {10.62513, 11.553912}, {10.36001,
              11.522025000000001`}, {10.15775, 11.65091}, {9.221229999999998, 
             12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}}}, {{{7.476430000000001, 7.56917}, {6.447, 7.56917}, {
             6.447, 4.}, {6.027209999999999, 4.}, {6.027209999999999, 
             7.56917}, {5., 7.56917}, {5., 8.}, {7.476430000000001, 8.}}, {{
             8.85472, 4.}, {8.43225, 4.}, {8.43225, 8.}, {8.85472, 8.}}, {{
             11.84251, 5.766640000000002}, {10.49879, 5.766640000000002}, {
             10.49879, 4.}, {10.07679, 4.}, {10.07679, 8.}, {12.06027, 8.}, {
             12.06027, 7.56917}, {10.49879, 7.56917}, {10.49879, 
             6.197459999999998}, {11.84251, 6.197459999999998}}, {{
             14.782259999999999`, 5.766640000000002}, {13.43854, 
             5.766640000000002}, {13.43854, 4.}, {13.01654, 4.}, {13.01654, 
             8.}, {15., 8.}, {15., 7.56917}, {13.43854, 7.56917}, {13.43854, 
             6.197459999999998}, {14.782259999999999`, 6.197459999999998}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerUnknownIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQB2IQHTjbYud9Rz2HG+e+Bz9eyu5wzDjjxfwJBg4r1tVM
e87I4uCr4XJA8Y2BwwHdUzkTOFkcdLZvkRKyN3QoCExr9tnE6sC86fpu+zRD
hx2SeQeeu3M4rLfdrOLw1cAhQPK/3eMmdofDjRN0EibpO2wou936rIrLYef9
hRoX9A0dElo+ZDw+wevAAAINhg4bLnt4P33LA+c7vPFZ+HmXgINTwtMLStGG
DueSkj4XvhVw2NV8Y6ZTvYHDHR7zB5+TReHqWwI95zY8E4bz+yK6/RkNxBy2
nijbN1/JwOHa0VyTBnMJBz7dTXPf8xs6NKzbllRfKeuwM9gq4n+9oYPHmqPL
GSQQfD52p00NnvIOohMTRfNtDB0ObH95vq5FHm6+ptWk0/Ucqgj7JFf01Mer
OrzdrfTj/i1dhw2gcJBVhsgzaENpDYdWLdPqBaoaDi8M4uMagPLXQe76ruRw
R1N2zf9kVYg725UdFrTM3FbfKu+wepbCKzsGGQe2AxVsvLKyDkvMCov2H1Z0
cOnOef57pQjUXBmHDd23MxjyORy8zTsdE0Rh9rI4vH5kJnXgtgqcvy7luJvC
PnWHDztvdf0FxvfB5+2Chw6rw+Xr7oUsOcShBefPWPvV1em1hkNA7/Q8oWYu
uH++mC8UYHwu5NDGrBh5QEQXLj/v0sFf9t+14forlT+fkLfRg/MB09PfBQ==

             "], {{16.686, 7.765140000000002}, {16.00777, 
             6.803710000000001}, {16.04777, 8.25342}, {16.841960000000004`, 
             9.32471}}, {{14.986, 8.997559999999998}, {16.38884, 9.61328}, {
             15.61564, 8.57028}, {14.28, 8.0957}}, {{12.01489, 8.998}, {
             12.720699999999999`, 8.09516}, {11.38452, 8.57026}, {
             10.611329999999999`, 9.614259999999998}}, {{10.952150000000001`, 
             8.253860000000001}, {10.99215, 6.80415}, {10.31441, 
             7.766060000000001}, {10.1589, 9.32466}}, {{8.01074, 6.94966}, {
             9.938229999999999, 7.369580000000001}, {10.86475, 6.05415}, {
             9.319580000000002, 5.481}}, {{9.397, 4.937999999999999}, {
             10.50345, 5.348640000000001}, {9.643999999999998, 
             4.231930000000002}, {8.38424, 3.8017600000000016`}}, {{10.04153, 
             2.939460000000004}, {8.50174, 3.275400000000001}, {9.81326, 
             3.723149999999997}, {11.21365, 3.3105600000000024`}}, {{12.0264, 
             3.6294000000000004`}, {10.25809, 4.15089}, {11.38016, 
             5.608890000000001}, {13.066440000000002`, 5.04102}}, {{13.22659, 
             5.550790000000001}, {11.544459999999999`, 6.118169999999999}, {
             11.49222, 7.961920000000001}, {13.22659, 7.34474}}, {{12.50759, 
             9.23779}, {13.5, 10.937499999999998`}, {14.49341, 9.23779}, {
             13.5, 7.968750000000002}}, {{13.77346, 7.34473}, {
             15.506369999999999`, 7.961910000000001}, {15.457, 6.11816}, {
             13.77341, 5.550780000000001}}, {{13.93361, 5.04102}, {15.61989, 
             5.608890000000001}, {16.741960000000002`, 4.15089}, {
             14.973650000000001`, 3.6294000000000004`}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerWLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{
             9.617389999999999, 11.266640000000002`}, {9.355364000000002, 
             11.506809}, {9.073421, 11.7243}, {8.7746, 11.91677}, {8.7746, 
             11.91677}, {8.66219, 12.48534}, {8.587309999999999, 12.73394}, {
             9.09304, 13.23107}, {9.16793, 13.30761}, {9.65491, 
             13.785590000000001`}, {9.687847, 12.945878}, {9.675329, 
             12.104999}, {9.61741, 11.266640000000002`}}, {{8.50275, 
             9.731640000000002}, {9.072936000000002, 9.76756}, {9.631433, 
             9.558930000000002}, {10.038419999999999`, 9.15798}, {
             9.701419999999999, 9.06244}, {9.66393, 9.043289999999999}, {
             9.32679, 8.947599999999998}, {9.042788, 9.148219999999998}, {
             8.700315999999999, 9.24909}, {8.352910000000001, 9.23443}, {
             8.391562, 9.40336}, {8.441624, 9.56948}, {8.50275, 
             9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerXMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.726999999999999, 6.01648}, {
             7.884519999999999, 4.}, {7.323999999999999, 4.}, {
             6.443760000000001, 5.560419999999999}, {5.55859, 4.}, {5., 4.}, {
             6.160519999999999, 6.01648}, {5.027529999999999, 8.}, {
             5.580260000000001, 8.}, {6.44373, 6.4670000000000005`}, {7.30133,
              8.}, {7.858, 8.}}, {{10.21241, 4.736269999999999}, {9.04211, 
             8.}, {8.43231, 8.}, {8.43231, 4.}, {8.90442, 4.}, {8.90442, 
             5.558230000000002}, {8.85815, 7.23077}, {10.03149, 4.}, {
             10.392400000000002`, 4.}, {11.56769, 7.239559999999999}, {
             11.52338, 5.558230000000002}, {11.52338, 4.}, {
             11.995480000000002`, 4.}, {11.995480000000002`, 8.}, {
             11.382750000000001`, 8.}}, {{13.303540000000002`, 4.43079}, {
             13.303540000000002`, 8.}, {12.82854, 8.}, {12.82854, 4.}, {15., 
             4.}, {15., 4.43079}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTXTIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
            1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
            0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0,
             2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
            0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0,
             1, 0}}}, CompressedData["
1:eJx10DEKgDAQRNFFbexTWGyhSwgp9hA5g0cQrL1/Z8Bs4cAIYXjwhZDjes57
FpG1n6WfSeLb27c2Volz+/dhBxtxrIPL2Ar/oQtZg16JsQ879Gyxx3vEuygx
3iPs0Fdi7NHb2EycoA8b9EqMfWovO5kdXA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerFileOpenerTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TagBox[
         PaneBox[#, ImageSize -> {Full, Automatic}], 
         EventHandlerTag[{{"MouseClicked", 1} :> If[
             FileExistsQ[#2], 
             SystemOpen[#2], 
             DefinitionNotebookClient`FancyMessageDialog[
             "Paclet", "File not found: " <> ToString[#2]]], Method -> 
           "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
        MouseAppearanceTag["LinkHand"]]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["

1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 
           9.2854}, {8.31, 9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 
           9.5083}, {7., 9.79}, {7., 10.62}, {7.0054, 10.898}, {7.2322, 
           11.12}, {7.51, 11.12}, {8.35, 11.12}, {8.6239, 11.115}, {8.8447, 
           10.894}, {8.85, 10.62}}}]}, AspectRatio -> Automatic, ImagePadding -> 
        0.5, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, 
        ImageMargins -> {{0, 0}, {0, 2}}, ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> 
        Automatic, ImageMargins -> {{0, 0}, {0, 2}}, ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell[
    StyleData["FileManagerFile", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{60, Inherited}, {0, 0}}, Deployed -> True, Evaluatable -> 
    True, CellGroupingRules -> {"SectionGrouping", 100}, 
    CellFrameMargins -> {{5, 5}, {2, 2}}, 
    CellFrameLabelMargins -> {{0, Inherited}, {Inherited, Inherited}}, 
    ContextMenu -> {
      MenuItem["Open", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, ShowStringCharacters -> 
    False, Background :> FEPrivate`If[
      CurrentValue["MouseOver"], 
      GrayLevel[0.92], 
      GrayLevel[0.99]]], 
   Cell[
    StyleData[
    "FileManagerDirectory", StyleDefinitions -> StyleData["FileManagerFile"]],
     ShowGroupOpener -> "Inline", Evaluatable -> False, CellEventActions -> 
    None, CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
        None], None}, {None, None}}, ContextMenu -> {
      MenuItem["Open/Close Group", 
       KernelExecute[SelectionMove[
          EvaluationCell[], All, Cell]; FrontEndTokenExecute[
          EvaluationNotebook[], "OpenCloseGroup"]], MenuEvaluator -> 
       Automatic, Method -> "Queued"], 
      MenuItem["Open Directory", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, Background -> 
    GrayLevel[0.99]], 
   Cell[
    StyleData[
    "FileManagerEmptyDirectory", StyleDefinitions -> 
     StyleData["FileManagerDirectory"]], CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerEmptyDirectoryIconTemplate"]], 
        Background -> None], None}, {None, None}}], 
   Cell[
    StyleData["FileManagerBottomSpacer"], ShowCellBracket -> False], 
   Cell[
    StyleData["FileManagerTopSpacer"], CellMargins -> 0, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    CellOpen -> False], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> First[{650}], 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 1053094956087266899; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[1053094956087266899]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 4898876371082581810; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[4898876371082581810]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["Input"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["Code"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[
      Rational[16, 17]]], 
   Cell[
    StyleData["DisclosureDetails"], CellMargins -> {{94, Inherited}, {10, 0}},
     FontSize -> 12, FontColor -> GrayLevel[0.5]], 
   Cell[
    StyleData[
    "PacletDirectoryChooser", StyleDefinitions -> StyleData["Output"]], 
    Deletable -> False, CellMargins -> {{50, 40}, {Inherited, Inherited}}], 
   Cell[
    StyleData["PacletDirectoryChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        PaneSelectorBox[{"Notebook" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.02439]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.02439]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], 
                    Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
             DefaultBaseStyle -> "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"], "Custom" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.02439]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.02439]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], 
                    Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}, {
               TagBox[
                GridBox[{{
                   InputFieldBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectory"}]], 
                    String, FieldHint -> "Choose paclet directory", 
                    BaseStyle -> {
                    FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
                    ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 3}, {1, 1}}], 
                   ButtonBox[
                    StyleBox[
                    "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, 
                    StripOnInput -> False], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    Replace[
                    SystemDialogInput["Directory", 
                    Replace[
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Replace[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Directory[]]]], Pattern[RSNB`s, 
                    Blank[String]] :> With[{RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]]}, 
                    If[RSNB`nbDir === RSNB`s, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Notebook"; Null, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = RSNB`s; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Custom"; Null]; If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`s]]]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Method -> "Queued", ImageSize -> {Automatic, 24},
                     Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    Appearance -> Automatic, Evaluator -> Automatic]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {"Text"}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]}, 
         Dynamic[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "PacletDirectoryType"}]], 
         ImageSize -> Automatic], Background -> GrayLevel[0.98], FrameMargins -> 
        10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryChooserErrorTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            GraphicsBox[{
              Thickness[0.028571], 
              StyleBox[{
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                   3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 
                  1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQfbJs33yp88YO51advxqWI+LApN0udvOdsYOre9FP
/pciDhGWW06U/TN26EiOvePWLArnb35VvFXUWgzOtzeN2+WZowTnX614qWZ4
QgluXmvNhc2RosoOMPsOnlroui1Y2SGMT3fT3PXGDn8kiq8LTVJ24Lq+uMC2
y9ihx+sVi8lGZYenF5Ru/4xD8EHW8Djpw/lvAnfItb7Wg/NDHi+dfWSBHty8
fKHmA6cS9eD2/Vn58ZKvkh7cPQG90/OEmPXg7oXxYf6B8WH+hfFh4QEzDxZe
MPtg4QlzD9if74Xh7pU6EK3guFEY7h8YH+ZfGB8WHjA+LLxg5qHHHwAbtMYJ

                  "], CompressedData["
1:eJxTTMoPSmViYGCQBWIQfdzbvNPxgLEDSxif7qa7Gg6WW06U7btv7HC14qWa
IYemw78rQMZHY4cIkISdpoPIOveHVV+MHRhAoEHToXSyBEuYn4nDwVMLXbdN
NoXznRKeXlDabQox19bE4V2NvWncLVMH5ds/67JkTKDmmsLNz5j4tsZe1Mxh
2+e/VypOGjs0TnXuzlE3c9g3X0r/7hIEv/kAyCI9OB9kHV8ugg+2T1YPbt4u
Tx4m7eO6cPt+BD9eOrtFF+4e8Zvnvgcn6zpot4vdPLcdwa8FSu/qNHU4ewYI
ePTg/oXxYeEBCg4RPT14eBXacl1fXKAHD09jENis57Bs9hGFDZs0HAJ6p+cJ
MetD5OdqOIDDPwHBjwM52NsYzp81EwgqEXyQ9uYFxnDz0OMPAAfUunk=
                  
                  "], CompressedData["
1:eJxTTMoPSmViYGBQAmIQbcixRibqiJFD41Tn7pzl9g58upvmvlc3drA3jdvl
mWPv0Hzg1ELXMmOHaUDp59L2Dkza7WI31xlDxLfZOQT0Ts8TCnZ0MAo10Fop
zOsQlWJ937/X0eFMvcf+2rlsDue/Bz9e2u3okLoqISRIncFhnfvDKhE/R4c/
Kz9e8k36bJ8vBDTJ0NHh5OQl2Wr3X9k7JTy9oMTt6PDE85Lp5PyH9uogB95y
cHilKHXX8c0Vex6QA1Y6OOgfsLMqfbrb3i9JIMKyxMGBAQqArl9+zBrB318r
a5HuwgLnV0asMD27mwHOjxTffpHh3i97mHmb9PIWM+75Yg+zz/Dyt/VrTN7a
w9wzU8jzi1HXY3uYe4Gh8nvlxxv2MP8YXD0TxeWxfT/Mv9M49185P3vXflh4
/LrA+lW3+Jo9LLzA+hbpwcPzV13WnhJhfXh4P146+4jCBn14fIDD09oAHl/F
GRPf1sw3cDj8VSOm/5G9w5vAHXKt3IZQ/0HDoQHBFwFFwBcEHxR9zQlGcP3o
6QEAaQXeGQ==
                  "]}]}, {
                FaceForm[
                 RGBColor[0.85098, 0., 0.10588, 1.]]}, StripOnInput -> 
               False]}, {
             ImageSize -> 12, BaselinePosition -> Scaled[0.05], ImageSize -> 
              16}], #}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
          False, GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], FontColor -> 
        RGBColor[0.86667, 0.06667, 0.], FontSize -> 13, FontFamily -> 
        "Source Sans Pro", StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (OverlayBox[{
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"], 
         GraphicsBox[{
           Thickness[0.041667], {
            FaceForm[{
              RGBColor[0.961, 0.961, 0.961], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.545, 22.597}, {
             7.5464, 20.5}, {2.5454, 18.402}, {2.5454, 12.598}, {2.5454, 
             12.597}, {2.5454, 6.7952}, {7.5454, 4.6962}, {7.546, 4.6972}, {
             12.545, 2.5992}, {17.545, 4.6972}, {17.545, 4.6962}, {22.545, 
             6.7952}, {22.545, 12.597}, {22.545, 12.598}, {22.545, 
             18.402}}}]}, {
            FaceForm[{
              RGBColor[0.898, 0.898, 0.898], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 14.057}, {
             16.875, 14.057}, {16.875, 8.3359}, {17., 8.1169}, {21.952, 
             6.0399}, {22.049, 6.2709}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.057}, {6.875, 
             14.057}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 6.0399}, {7., 
             8.1169}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.874, 6.2383}, {6.9515, 4.1733}, {7.0475, 
             3.9423}, {12., 6.0193}, {16.952, 3.9423}, {17.048, 4.1733}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 14.139}, {17.125, 19.86}, {16.875,
              19.86}, {16.875, 14.139}, {17., 13.92}, {21.952, 11.843}, {
             22.049, 12.074}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 14.139}, {7.125, 19.86}, {6.875, 
             19.86}, {6.875, 14.139}, {1.952, 12.074}, {2.048, 11.843}, {7., 
             13.92}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.875, 21.363}, {11.875, 18.356}, {12., 18.303}, {
             12.125, 18.356}, {12.125, 21.363}, {12., 21.415}}}]}, {
            FaceForm[{
              RGBColor[0.749, 0.749, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{8.292, 
              19.859}, {12., 21.415}, {15.707, 19.859}, {12., 18.303}}, {{
              17.5, 19.527}, {17.5, 20.192}, {12., 22.5}, {6.5, 20.192}, {6.5,
               19.528}, {12., 17.219}, {12., 17.219}, {15.7, 18.772}, {17.5, 
              19.527}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 5.4026}, {12.5,
              5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 9.5283}, {21.5, 
              11.207}}, {{21.5, 12.711}, {21.5, 12.291}, {17., 10.403}, {16.5,
               10.613}, {16.5, 10.194}, {15.707, 9.8613}, {16.5, 9.5283}, {
              16.5, 4.8083}, {16.5, 4.8093}, {16.5, 4.3903}, {15.707, 
              4.0573}, {17., 3.5143}, {22.5, 5.8223}, {22.5, 12.291}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 11.207}, {6.5, 
              9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {7.5, 9.5286}, {8.292, 
              9.8616}, {7.5, 10.194}, {7.5, 10.614}, {7., 10.404}, {2.5, 
              12.291}, {2.5, 12.711}, {1.5, 12.292}, {1.5, 5.8226}, {7., 
              3.5146}, {8.293, 4.0576}, {7.5, 4.3906}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{3.2925, 17.762}, {7.0005, 19.318}, {10.708, 
              17.762}, {7.0005, 16.206}}, {{6.5005, 10.612}, {2.5005, 
              12.291}, {2.5005, 17.01}, {6.5005, 15.332}}, {{7.5005, 
              10.193}, {7.5005, 10.612}, {7.5005, 15.332}, {12., 17.22}, {
              12.5, 17.01}, {12.5, 18.095}, {7.0005, 20.403}, {1.5005, 
              18.095}, {1.5005, 11.626}, {7.0005, 9.3182}, {8.2935, 
              9.8612}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {17.5, 15.332}, {
              21.5, 17.01}}, {{13.293, 17.762}, {17., 19.318}, {20.708, 
              17.762}, {17., 16.207}}, {{17., 20.403}, {11.5, 18.095}, {11.5, 
              17.01}, {12., 17.22}, {16.5, 15.332}, {16.5, 10.612}, {16.5, 
              10.194}, {15.706, 9.861}, {17., 9.318}, {22.5, 11.626}, {22.5, 
              18.095}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{16.5, 4.3906}, {12.5, 2.7116}, {12.5, 7.4316}, {
              16.5, 9.1096}}, {{11.5, 2.7116}, {7.4995, 4.3906}, {7.4995, 
              9.1096}, {11.5, 7.4316}}, {{16.5, 10.614}, {16.5, 10.195}, {12.,
               8.3056}, {8.2915, 9.8616}, {7.4995, 10.194}, {7.4995, 
              10.615}, {6.4995, 10.195}, {6.4995, 3.7256}, {12., 1.4176}, {
              17.5, 3.7256}, {17.5, 10.195}}}]}, {
            FaceForm[{
              RGBColor[0.965, 0.765, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{12., 17.662}, {16.945, 15.586}, {16.945, 9.9376}, {
             12., 7.8636}, {7.055, 9.9376}, {7.055, 15.586}}}]}, {
            FaceForm[{
              RGBColor[0.91, 0.655, 0.635], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 17.763}, {
             11.875, 17.763}, {11.875, 12.041}, {6.952, 9.9757}, {7.048, 
             9.7447}, {12., 11.823}, {16.952, 9.7447}, {17.048, 9.9757}, {
             12.125, 12.041}}}]}, {
            FaceForm[{
              RGBColor[0.867, 0.067, 0.], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5, 
              8.5146}, {12.5, 13.234}, {16.5, 14.912}, {16.5, 10.193}}, {{7.5,
               14.912}, {11.5, 13.234}, {11.5, 8.5146}, {7.5, 10.193}}, {{
              15.708, 15.664}, {12., 14.109}, {8.292, 15.664}, {12., 
              17.221}}, {{12., 18.305}, {6.5, 15.996}, {6.5, 9.5286}, {12., 
              7.2206}, {17.5, 9.5286}, {17.5, 15.996}}}]}}, {
          ImageSize -> 12, AspectRatio -> Automatic, ImageSize -> {24., 24.}, 
           PlotRange -> {{0., 24.}, {0., 24.}}}]}, 
        Alignment -> {Right, Bottom}]& )}], 
   Cell[
    StyleData[
    "MainGuideChooser", StyleDefinitions -> 
     StyleData["PacletDirectoryChooser"]], CellGroupingRules -> 
    "NormalGrouping"], 
   Cell[
    StyleData["MainGuideChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        TagBox[
         GridBox[{{
            PaneSelectorBox[{True -> RowBox[{
                 TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                 StyleBox["/", FontColor -> GrayLevel[0.5]]}], False -> 
              RowBox[{
                 TemplateBox[{}, "FileManagerNBIconTemplate"], 
                 StyleBox["/", ShowContents -> False]}]}, 
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "Relative"}]]], 
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "MainGuidePageString"}]], 
             String, FieldHint -> "Choose a guide page", 
             BaseStyle -> {FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
             ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
             FrameMargins -> {{3, 3}, {1, 1}}], 
            ButtonBox[
             StyleBox[
             "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, StripOnInput -> 
              False], ButtonFunction :> 
             With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                EvaluationCell[]}, 
               WithCleanup[NotebookDelete[
                  Cells[RSNB`cell, AttachedCell -> True]]; 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = True, 
                
                
                Module[{RSNB`initial$, RSNB`res$}, 
                 RSNB`initial$ = SelectFirst[{
                    FileNameJoin[{
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], "Documentation", $Language, 
                    "Guides"}], 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]}, DirectoryQ, 
                    Directory[]]; 
                 RSNB`res$ = SystemDialogInput["FileOpen", RSNB`initial$]; 
                 If[
                   And[
                    StringQ[
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]], 
                    StringQ[RSNB`res$], 
                    StringStartsQ[RSNB`res$, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]]], RSNB`res$ = StringReplace[
                    StringDelete[RSNB`res$, 
                    StringExpression[StartOfString, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Alternatives[$PathnameSeparator, ""]]], "\\" -> "/"]; 
                   CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = True,
                    CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = 
                   False]; If[
                   StringQ[RSNB`res$], 
                   CurrentValue[
                    RSNB`cell, {TaggingRules, "MainGuidePageString"}] = 
                   RSNB`res$]], 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                False]], Method -> "Queued", ImageSize -> {Automatic, 24}, 
             Enabled -> Dynamic[
               Not[
                CurrentValue[
                 EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
             Appearance -> Automatic, Evaluator -> Automatic]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
          False, GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "ColumnsIndexed" -> {2 -> 0.2}, "Rows" -> {{Automatic}}}, 
          BaseStyle -> {"Text"}], "Grid"], Background -> GrayLevel[0.98], 
        FrameMargins -> 10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["AttachedMessage"], Deletable -> True, 
    CellMargins -> {{60, 40}, {15, 5}}]}, Visible -> False, FrontEndVersion -> 
  "13.0 for Mac OS X x86 (64-bit) (February 4, 2022)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"45ae4b0c-d970-44ff-9410-a0eb4a8d24eb"
]

